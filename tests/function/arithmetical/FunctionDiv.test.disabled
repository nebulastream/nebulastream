# name: function/arithmetical/FunctionDiv.test
# description: Simple function Div tests
# groups: [Function, FunctionDiv]

# LLVM LIT configuration
# RUN: sed -e "s@SINK@%sink@g" -e "s@TESTDATA@%testdata@g"< %s > %t &&  rm %tsink || true
# RUN: %client test -f %t -s %worker_address && %result_checker %t %tsink

# TODO #373 Currently, we perform string comparison of results vs. expected. This does not work for floating points, as the precision is not guaranteed.

Source window INT8 val_i8 INT16 val_i16 INT32 val_i32 INT64 val_i64 UINT8 val_u8 UINT16 val_u16 UINT32 val_u32 UINT64 val_u64 FLOAT32 val_f32 FLOAT64 val_f64
-42, -129,-32769,-2147483649,42, 256,65536,4294967296,23,23

# Check if the values are multiplied correctly with a constant
Query::from("window")
    .map(Attribute("val_i64") = Attribute("val_i64") / 42)
    .map(Attribute("val_i32") = Attribute("val_i32") / 42)
    .map(Attribute("val_i16") = Attribute("val_i16") / 42)
    .map(Attribute("val_i8") = Attribute("val_i8") / 42)

    .map(Attribute("val_u64") = Attribute("val_u64") / 42)
    .map(Attribute("val_u32") = Attribute("val_u32") / 42)
    .map(Attribute("val_u16") = Attribute("val_u16") / 42)
    .map(Attribute("val_u8") = Attribute("val_u8") / 42)

    .map(Attribute("val_f64") = Attribute("val_f64") / 42.0)
    .map(Attribute("val_f32") = Attribute("val_f32") / 42.0f)
    .SINK;
----
-1,-3,-780,-51130563,1,6,1560,102261126,0.547619,0.547619

# Div i8 value with all other data types
Query::from("window")
    .map(Attribute("val_i8_i8") = Attribute("val_i8") / Attribute("val_i8"))
    .map(Attribute("val_i8_i8_plus_1") = Attribute("val_i8") / (Attribute("val_i8") + 1))
    .map(Attribute("val_i8_i16") = Attribute("val_i8") / Attribute("val_i16"))
    .map(Attribute("val_i8_i16_plus_1") = Attribute("val_i8") / (Attribute("val_i16") + 1))
    .map(Attribute("val_i8_i32") = Attribute("val_i8") / Attribute("val_i32"))
    .map(Attribute("val_i8_i32_plus_1") = Attribute("val_i8") / (Attribute("val_i32") + 1))
    .map(Attribute("val_i8_i64") = Attribute("val_i8") / Attribute("val_i64"))
    .map(Attribute("val_i8_i64_plus_1") = Attribute("val_i8") / (Attribute("val_i64") + 1))

    .map(Attribute("val_i8_u8") = Attribute("val_i8") / Attribute("val_u8"))
    .map(Attribute("val_i8_u8_plus_1") = Attribute("val_i8") / (Attribute("val_u8") + 1))
    .map(Attribute("val_i8_u16") = Attribute("val_i8") / Attribute("val_u16"))
    .map(Attribute("val_i8_u16_plus_1") = Attribute("val_i8") / (Attribute("val_u16") + 1))
    .map(Attribute("val_i8_u32") = Attribute("val_i8") / Attribute("val_u32"))
    .map(Attribute("val_i8_u32_plus_1") = Attribute("val_i8") / (Attribute("val_u32") + 1))
    .map(Attribute("val_i8_u64") = Attribute("val_i8") / Attribute("val_u64"))
    .map(Attribute("val_i8_u64_plus_1") = Attribute("val_i8") / (Attribute("val_u64") + 1))

    .map(Attribute("val_i8_f32") = Attribute("val_i8") / Attribute("val_f32"))
    .map(Attribute("val_i8_f32_plus_1") = Attribute("val_i8") / (Attribute("val_f32") + 1))
    .map(Attribute("val_i8_f64") = Attribute("val_i8") / Attribute("val_f64"))
    .map(Attribute("val_i8_f64_plus_1") = Attribute("val_i8") / (Attribute("val_f64") + 1))

    .project(Attribute("val_i8_i8"), Attribute("val_i8_i8_plus_1"), Attribute("val_i8_i16"), Attribute("val_i8_i16_plus_1"), Attribute("val_i8_i32"), Attribute("val_i8_i32_plus_1"), Attribute("val_i8_i64"), Attribute("val_i8_i64_plus_1"), Attribute("val_i8_u8"), Attribute("val_i8_u8_plus_1"), Attribute("val_i8_u16"), Attribute("val_i8_u16_plus_1"), Attribute("val_i8_u32"), Attribute("val_i8_u32_plus_1"), Attribute("val_i8_u64"), Attribute("val_i8_u64_plus_1"), Attribute("val_i8_f32"), Attribute("val_i8_f32_plus_1"), Attribute("val_i8_f64"), Attribute("val_i8_f64_plus_1"))
    .SINK;
----
1,1,0,0,0,0,0,0,-1,0,0,0,0,0,0,0,-1.826087,-1.750000,-1.826087,-1.750000

# Div i16 value with all other data types
Query::from("window")
    .map(Attribute("val_i16_i8") = Attribute("val_i16") / Attribute("val_i8"))
    .map(Attribute("val_i16_i8_plus_1") = Attribute("val_i16") / (Attribute("val_i8") + 1))
    .map(Attribute("val_i16_i16") = Attribute("val_i16") / Attribute("val_i16"))
    .map(Attribute("val_i16_i16_plus_1") = Attribute("val_i16") / (Attribute("val_i16") + 1))
    .map(Attribute("val_i16_i32") = Attribute("val_i16") / Attribute("val_i32"))
    .map(Attribute("val_i16_i32_plus_1") = Attribute("val_i16") / (Attribute("val_i32") + 1))
    .map(Attribute("val_i16_i64") = Attribute("val_i16") / Attribute("val_i64"))
    .map(Attribute("val_i16_i64_plus_1") = Attribute("val_i16") / (Attribute("val_i64") + 1))

    .map(Attribute("val_i16_u8") = Attribute("val_i16") / Attribute("val_u8"))
    .map(Attribute("val_i16_u8_plus_1") = Attribute("val_i16") / (Attribute("val_u8") + 1))
    .map(Attribute("val_i16_u16") = Attribute("val_i16") / Attribute("val_u16"))
    .map(Attribute("val_i16_u16_plus_1") = Attribute("val_i16") / (Attribute("val_u16") + 1))
    .map(Attribute("val_i16_u32") = Attribute("val_i16") / Attribute("val_u32"))
    .map(Attribute("val_i16_u32_plus_1") = Attribute("val_i16") / (Attribute("val_u32") + 1))
    .map(Attribute("val_i16_u64") = Attribute("val_i16") / Attribute("val_u64"))
    .map(Attribute("val_i16_u64_plus_1") = Attribute("val_i16") / (Attribute("val_u64") + 1))

    .map(Attribute("val_i16_f32") = Attribute("val_i16") / Attribute("val_f32"))
    .map(Attribute("val_i16_f32_plus_1") = Attribute("val_i16") / (Attribute("val_f32") + 1))
    .map(Attribute("val_i16_f64") = Attribute("val_i16") / Attribute("val_f64"))
    .map(Attribute("val_i16_f64_plus_1") = Attribute("val_i16") / (Attribute("val_f64") + 1))

    .project(Attribute("val_i16_i8"), Attribute("val_i16_i8_plus_1"), Attribute("val_i16_i16"), Attribute("val_i16_i16_plus_1"), Attribute("val_i16_i32"), Attribute("val_i16_i32_plus_1"), Attribute("val_i16_i64"), Attribute("val_i16_i64_plus_1"), Attribute("val_i16_u8"), Attribute("val_i16_u8_plus_1"), Attribute("val_i16_u16"), Attribute("val_i16_u16_plus_1"), Attribute("val_i16_u32"), Attribute("val_i16_u32_plus_1"), Attribute("val_i16_u64"), Attribute("val_i16_u64_plus_1"), Attribute("val_i16_f32"), Attribute("val_i16_f32_plus_1"), Attribute("val_i16_f64"), Attribute("val_i16_f64_plus_1"))
    .SINK;
----
3,3,1,1,0,0,0,0,-3,-3,0,0,0,0,0,0,-5.608696,-5.375000,-5.608696,-5.375000

# Div i32 value with all other data types
Query::from("window")
    .map(Attribute("val_i32_i8") = Attribute("val_i32") / Attribute("val_i8"))
    .map(Attribute("val_i32_i8_plus_1") = Attribute("val_i32") / (Attribute("val_i8") + 1))
    .map(Attribute("val_i32_i16") = Attribute("val_i32") / Attribute("val_i16"))
    .map(Attribute("val_i32_i16_plus_1") = Attribute("val_i32") / (Attribute("val_i16") + 1))
    .map(Attribute("val_i32_i32") = Attribute("val_i32") / Attribute("val_i32"))
    .map(Attribute("val_i32_i32_plus_1") = Attribute("val_i32") / (Attribute("val_i32") + 1))
    .map(Attribute("val_i32_i64") = Attribute("val_i32") / Attribute("val_i64"))
    .map(Attribute("val_i32_i64_plus_1") = Attribute("val_i32") / (Attribute("val_i64") + 1))

    .map(Attribute("val_i32_u8") = Attribute("val_i32") / Attribute("val_u8"))
    .map(Attribute("val_i32_u8_plus_1") = Attribute("val_i32") / (Attribute("val_u8") + 1))
    .map(Attribute("val_i32_u16") = Attribute("val_i32") / Attribute("val_u16"))
    .map(Attribute("val_i32_u16_plus_1") = Attribute("val_i32") / (Attribute("val_u16") + 1))
    .map(Attribute("val_i32_u32") = Attribute("val_i32") / Attribute("val_u32"))
    .map(Attribute("val_i32_u32_plus_1") = Attribute("val_i32") / (Attribute("val_u32") + 1))
    .map(Attribute("val_i32_u64") = Attribute("val_i32") / Attribute("val_u64"))
    .map(Attribute("val_i32_u64_plus_1") = Attribute("val_i32") / (Attribute("val_u64") + 1))

    .map(Attribute("val_i32_f32") = Attribute("val_i32") / Attribute("val_f32"))
    .map(Attribute("val_i32_f32_plus_1") = Attribute("val_i32") / (Attribute("val_f32") + 1))
    .map(Attribute("val_i32_f64") = Attribute("val_i32") / Attribute("val_f64"))
    .map(Attribute("val_i32_f64_plus_1") = Attribute("val_i32") / (Attribute("val_f64") + 1))

    .project(Attribute("val_i32_i8"), Attribute("val_i32_i8_plus_1"), Attribute("val_i32_i16"), Attribute("val_i32_i16_plus_1"), Attribute("val_i32_i32"), Attribute("val_i32_i32_plus_1"), Attribute("val_i32_i64"), Attribute("val_i32_i64_plus_1"), Attribute("val_i32_u8"), Attribute("val_i32_u8_plus_1"), Attribute("val_i32_u16"), Attribute("val_i32_u16_plus_1"), Attribute("val_i32_u32"), Attribute("val_i32_u32_plus_1"), Attribute("val_i32_u64"), Attribute("val_i32_u64_plus_1"), Attribute("val_i32_f32"), Attribute("val_i32_f32_plus_1"), Attribute("val_i32_f64"), Attribute("val_i32_f64_plus_1"))
    .SINK;
----
780,799,254,256,1,1,0,0,-780,-762,-128,-127,0,0,0,0,-1424.739136,-1365.374878,-1424.739130,-1365.375000


# Div i64 value with all other data types
Query::from("window")
    .map(Attribute("val_i64_i8") = Attribute("val_i64") / Attribute("val_i8"))
    .map(Attribute("val_i64_i8_plus_1") = Attribute("val_i64") / (Attribute("val_i8") + 1))
    .map(Attribute("val_i64_i16") = Attribute("val_i64") / Attribute("val_i16"))
    .map(Attribute("val_i64_i16_plus_1") = Attribute("val_i64") / (Attribute("val_i16") + 1))
    .map(Attribute("val_i64_i32") = Attribute("val_i64") / Attribute("val_i32"))
    .map(Attribute("val_i64_i32_plus_1") = Attribute("val_i64") / (Attribute("val_i32") + 1))
    .map(Attribute("val_i64_i64") = Attribute("val_i64") / Attribute("val_i64"))
    .map(Attribute("val_i64_i64_plus_1") = Attribute("val_i64") / (Attribute("val_i64") + 1))
    .map(Attribute("val_i64_u8") = Attribute("val_i64") / Attribute("val_u8"))
    .map(Attribute("val_i64_u8_plus_1") = Attribute("val_i64") / (Attribute("val_u8") + 1))
    .map(Attribute("val_i64_u16") = Attribute("val_i64") / Attribute("val_u16"))
    .map(Attribute("val_i64_u16_plus_1") = Attribute("val_i64") / (Attribute("val_u16") + 1))
    .map(Attribute("val_i64_u32") = Attribute("val_i64") / Attribute("val_u32"))
    .map(Attribute("val_i64_u32_plus_1") = Attribute("val_i64") / (Attribute("val_u32") + 1))
    .map(Attribute("val_i64_u64") = Attribute("val_i64") / Attribute("val_u64"))
    .map(Attribute("val_i64_u64_plus_1") = Attribute("val_i64") / (Attribute("val_u64") + 1))
    .map(Attribute("val_i64_f32") = Attribute("val_i64") / Attribute("val_f32"))
    .map(Attribute("val_i64_f32_plus_1") = Attribute("val_i64") / (Attribute("val_f32") + 1))
    .map(Attribute("val_i64_f64") = Attribute("val_i64") / Attribute("val_f64"))
    .map(Attribute("val_i64_f64_plus_1") = Attribute("val_i64") / (Attribute("val_f64") + 1))

    .project(Attribute("val_i64_i8"), Attribute("val_i64_i8_plus_1"), Attribute("val_i64_i16"), Attribute("val_i64_i16_plus_1"), Attribute("val_i64_i32"), Attribute("val_i64_i32_plus_1"), Attribute("val_i64_i64"), Attribute("val_i64_i64_plus_1"), Attribute("val_i64_u8"), Attribute("val_i64_u8_plus_1"), Attribute("val_i64_u16"), Attribute("val_i64_u16_plus_1"), Attribute("val_i64_u32"), Attribute("val_i64_u32_plus_1"), Attribute("val_i64_u64"), Attribute("val_i64_u64_plus_1"), Attribute("val_i64_f32"), Attribute("val_i64_f32_plus_1"), Attribute("val_i64_f64"), Attribute("val_i64_f64_plus_1"))
    .SINK;
----
51130563,52377649,16647160,16777216,65534,65536,1,1,-51130563,-49941480,-8388608,-8355967,-32768,-32767,0,0,0.000000,0.000000,-93368854.304348,-89478485.375000


# Div u8 value with all other data types
Query::from("window")
    .map(Attribute("val_u8_i8") = Attribute("val_u8") / Attribute("val_i8"))
    .map(Attribute("val_u8_i8_plus_1") = Attribute("val_u8") / (Attribute("val_i8") + 1))
    .map(Attribute("val_u8_i16") = Attribute("val_u8") / Attribute("val_i16"))
    .map(Attribute("val_u8_i16_plus_1") = Attribute("val_u8") / (Attribute("val_i16") + 1))
    .map(Attribute("val_u8_i32") = Attribute("val_u8") / Attribute("val_i32"))
    .map(Attribute("val_u8_i32_plus_1") = Attribute("val_u8") / (Attribute("val_i32") + 1))
    .map(Attribute("val_u8_i64") = Attribute("val_u8") / Attribute("val_i64"))
    .map(Attribute("val_u8_i64_plus_1") = Attribute("val_u8") / (Attribute("val_i64") + 1))

    .map(Attribute("val_u8_u8") = Attribute("val_u8") / Attribute("val_u8"))
    .map(Attribute("val_u8_u8_plus_1") = Attribute("val_u8") / (Attribute("val_u8") + 1))
    .map(Attribute("val_u8_u16") = Attribute("val_u8") / Attribute("val_u16"))
    .map(Attribute("val_u8_u16_plus_1") = Attribute("val_u8") / (Attribute("val_u16") + 1))
    .map(Attribute("val_u8_u32") = Attribute("val_u8") / Attribute("val_u32"))
    .map(Attribute("val_u8_u32_plus_1") = Attribute("val_u8") / (Attribute("val_u32") + 1))
    .map(Attribute("val_u8_u64") = Attribute("val_u8") / Attribute("val_u64"))
    .map(Attribute("val_u8_u64_plus_1") = Attribute("val_u8") / (Attribute("val_u64") + 1))

    .map(Attribute("val_u8_f32") = Attribute("val_u8") / Attribute("val_f32"))
    .map(Attribute("val_u8_f32_plus_1") = Attribute("val_u8") / (Attribute("val_f32") + 1))
    .map(Attribute("val_u8_f64") = Attribute("val_u8") / Attribute("val_f64"))
    .map(Attribute("val_u8_f64_plus_1") = Attribute("val_u8") / (Attribute("val_f64") + 1))

    .project(Attribute("val_u8_i8"), Attribute("val_u8_i8_plus_1"), Attribute("val_u8_i16"), Attribute("val_u8_i16_plus_1"), Attribute("val_u8_i32"), Attribute("val_u8_i32_plus_1"), Attribute("val_u8_i64"), Attribute("val_u8_i64_plus_1"), Attribute("val_u8_u8"), Attribute("val_u8_u8_plus_1"), Attribute("val_u8_u16"), Attribute("val_u8_u16_plus_1"), Attribute("val_u8_u32"), Attribute("val_u8_u32_plus_1"), Attribute("val_u8_u64"), Attribute("val_u8_u64_plus_1"), Attribute("val_u8_f32"), Attribute("val_u8_f32_plus_1"), Attribute("val_u8_f64"), Attribute("val_u8_f64_plus_1"))
    .SINK;
----
-1,-1,0,0,0,0,0,0,1,0,0,0,0,0,0,0,1.826087,1.750000,1.826087,1.750000


# Div u16 value with all other data types
Query::from("window")
    .map(Attribute("val_u16_i8") = Attribute("val_u16") / Attribute("val_i8"))
    .map(Attribute("val_u16_i8_plus_1") = Attribute("val_u16") / (Attribute("val_i8") + 1))
    .map(Attribute("val_u16_i16") = Attribute("val_u16") / Attribute("val_i16"))
    .map(Attribute("val_u16_i16_plus_1") = Attribute("val_u16") / (Attribute("val_i16") + 1))
    .map(Attribute("val_u16_i32") = Attribute("val_u16") / Attribute("val_i32"))
    .map(Attribute("val_u16_i32_plus_1") = Attribute("val_u16") / (Attribute("val_i32") + 1))
    .map(Attribute("val_u16_i64") = Attribute("val_u16") / Attribute("val_i64"))
    .map(Attribute("val_u16_i64_plus_1") = Attribute("val_u16") / (Attribute("val_i64") + 1))

    .map(Attribute("val_u16_u8") = Attribute("val_u16") / Attribute("val_u8"))
    .map(Attribute("val_u16_u8_plus_1") = Attribute("val_u16") / (Attribute("val_u8") + 1))
    .map(Attribute("val_u16_u16") = Attribute("val_u16") / Attribute("val_u16"))
    .map(Attribute("val_u16_u16_plus_1") = Attribute("val_u16") / (Attribute("val_u16") + 1))
    .map(Attribute("val_u16_u32") = Attribute("val_u16") / Attribute("val_u32"))
    .map(Attribute("val_u16_u32_plus_1") = Attribute("val_u16") / (Attribute("val_u32") + 1))
    .map(Attribute("val_u16_u64") = Attribute("val_u16") / Attribute("val_u64"))
    .map(Attribute("val_u16_u64_plus_1") = Attribute("val_u16") / (Attribute("val_u64") + 1))

    .map(Attribute("val_u16_f32") = Attribute("val_u16") / Attribute("val_f32"))
    .map(Attribute("val_u16_f32_plus_1") = Attribute("val_u16") / (Attribute("val_f32") + 1))
    .map(Attribute("val_u16_f64") = Attribute("val_u16") / Attribute("val_f64"))
    .map(Attribute("val_u16_f64_plus_1") = Attribute("val_u16") / (Attribute("val_f64") + 1))

    .project(Attribute("val_u16_i8"), Attribute("val_u16_i8_plus_1"), Attribute("val_u16_i16"), Attribute("val_u16_i16_plus_1"), Attribute("val_u16_i32"), Attribute("val_u16_i32_plus_1"), Attribute("val_u16_i64"), Attribute("val_u16_i64_plus_1"), Attribute("val_u16_u8"), Attribute("val_u16_u8_plus_1"), Attribute("val_u16_u16"), Attribute("val_u16_u16_plus_1"), Attribute("val_u16_u32"), Attribute("val_u16_u32_plus_1"), Attribute("val_u16_u64"), Attribute("val_u16_u64_plus_1"), Attribute("val_u16_f32"), Attribute("val_u16_f32_plus_1"), Attribute("val_u16_f64"), Attribute("val_u16_f64_plus_1"))
    .SINK;
----
-6,-6,-1,-2,0,0,0,0,6,5,1,0,0,0,0,0,11.130435,10.666666,11.130435,10.666667


# Div u32 value with all other data types
Query::from("window")
    .map(Attribute("val_u32_i8") = Attribute("val_u32") / Attribute("val_i8"))
    .map(Attribute("val_u32_i8_plus_1") = Attribute("val_u32") / (Attribute("val_i8") + 1))
    .map(Attribute("val_u32_i16") = Attribute("val_u32") / Attribute("val_i16"))
    .map(Attribute("val_u32_i16_plus_1") = Attribute("val_u32") / (Attribute("val_i16") + 1))
    .map(Attribute("val_u32_i32") = Attribute("val_u32") / Attribute("val_i32"))
    .map(Attribute("val_u32_i32_plus_1") = Attribute("val_u32") / (Attribute("val_i32") + 1))
    .map(Attribute("val_u32_i64") = Attribute("val_u32") / Attribute("val_i64"))
    .map(Attribute("val_u32_i64_plus_1") = Attribute("val_u32") / (Attribute("val_i64") + 1))

    .map(Attribute("val_u32_u8") = Attribute("val_u32") / Attribute("val_u8"))
    .map(Attribute("val_u32_u8_plus_1") = Attribute("val_u32") / (Attribute("val_u8") + 1))
    .map(Attribute("val_u32_u16") = Attribute("val_u32") / Attribute("val_u16"))
    .map(Attribute("val_u32_u16_plus_1") = Attribute("val_u32") / (Attribute("val_u16") + 1))
    .map(Attribute("val_u32_u32") = Attribute("val_u32") / Attribute("val_u32"))
    .map(Attribute("val_u32_u32_plus_1") = Attribute("val_u32") / (Attribute("val_u32") + 1))
    .map(Attribute("val_u32_u64") = Attribute("val_u32") / Attribute("val_u64"))
    .map(Attribute("val_u32_u64_plus_1") = Attribute("val_u32") / (Attribute("val_u64") + 1))

    .map(Attribute("val_u32_f32") = Attribute("val_u32") / Attribute("val_f32"))
    .map(Attribute("val_u32_f32_plus_1") = Attribute("val_u32") / (Attribute("val_f32") + 1))
    .map(Attribute("val_u32_f64") = Attribute("val_u32") / Attribute("val_f64"))
    .map(Attribute("val_u32_f64_plus_1") = Attribute("val_u32") / (Attribute("val_f64") + 1))

    .project(Attribute("val_u32_i8"), Attribute("val_u32_i8_plus_1"), Attribute("val_u32_i16"), Attribute("val_u32_i16_plus_1"), Attribute("val_u32_i32"), Attribute("val_u32_i32_plus_1"), Attribute("val_u32_i64"), Attribute("val_u32_i64_plus_1"), Attribute("val_u32_u8"), Attribute("val_u32_u8_plus_1"), Attribute("val_u32_u16"), Attribute("val_u32_u16_plus_1"), Attribute("val_u32_u32"), Attribute("val_u32_u32_plus_1"), Attribute("val_u32_u64"), Attribute("val_u32_u64_plus_1"), Attribute("val_u32_f32"), Attribute("val_u32_f32_plus_1"), Attribute("val_u32_f64"), Attribute("val_u32_f64_plus_1"))
    .SINK;
----
-1560,-1598,-508,-512,-1,-2,0,0,1560,1524,256,255,1,0,0,0,2849.391357,2730.666504,2849.391304,2730.666667


# Div u64 value with all other data types
Query::from("window")
    .map(Attribute("val_u64_i8") = Attribute("val_u64") / Attribute("val_i8"))
    .map(Attribute("val_u64_i8_plus_1") = Attribute("val_u64") / (Attribute("val_i8") + 1))
    .map(Attribute("val_u64_i16") = Attribute("val_u64") / Attribute("val_i16"))
    .map(Attribute("val_u64_i16_plus_1") = Attribute("val_u64") / (Attribute("val_i16") + 1))
    .map(Attribute("val_u64_i32") = Attribute("val_u64") / Attribute("val_i32"))
    .map(Attribute("val_u64_i32_plus_1") = Attribute("val_u64") / (Attribute("val_i32") + 1))
    .map(Attribute("val_u64_i64") = Attribute("val_u64") / Attribute("val_i64"))
    .map(Attribute("val_u64_i64_plus_1") = Attribute("val_u64") / (Attribute("val_i64") + 1))

    .map(Attribute("val_u64_u8") = Attribute("val_u64") / Attribute("val_u8"))
    .map(Attribute("val_u64_u8_plus_1") = Attribute("val_u64") / (Attribute("val_u8") + 1))
    .map(Attribute("val_u64_u16") = Attribute("val_u64") / Attribute("val_u16"))
    .map(Attribute("val_u64_u16_plus_1") = Attribute("val_u64") / (Attribute("val_u16") + 1))
    .map(Attribute("val_u64_u32") = Attribute("val_u64") / Attribute("val_u32"))
    .map(Attribute("val_u64_u32_plus_1") = Attribute("val_u64") / (Attribute("val_u32") + 1))
    .map(Attribute("val_u64_u64") = Attribute("val_u64") / Attribute("val_u64"))
    .map(Attribute("val_u64_u64_plus_1") = Attribute("val_u64") / (Attribute("val_u64") + 1))

    .map(Attribute("val_u64_f32") = Attribute("val_u64") / Attribute("val_f32"))
    .map(Attribute("val_u64_f32_plus_1") = Attribute("val_u64") / (Attribute("val_f32") + 1))
    .map(Attribute("val_u64_f64") = Attribute("val_u64") / Attribute("val_f64"))
    .map(Attribute("val_u64_f64_plus_1") = Attribute("val_u64") / (Attribute("val_f64") + 1))

    .project(Attribute("val_u64_i8"), Attribute("val_u64_i8_plus_1"), Attribute("val_u64_i16"), Attribute("val_u64_i16_plus_1"), Attribute("val_u64_i32"), Attribute("val_u64_i32_plus_1"), Attribute("val_u64_i64"), Attribute("val_u64_i64_plus_1"), Attribute("val_u64_u8"), Attribute("val_u64_u8_plus_1"), Attribute("val_u64_u16"), Attribute("val_u64_u16_plus_1"), Attribute("val_u64_u32"), Attribute("val_u64_u32_plus_1"), Attribute("val_u64_u64"), Attribute("val_u64_u64_plus_1"), Attribute("val_u64_f32"), Attribute("val_u64_f32_plus_1"), Attribute("val_u64_f64"), Attribute("val_u64_f64_plus_1"))
    .SINK;
----
-102261126,-104755299,-33294320,-33554432,-131068,-131072,-1,-2,102261126,99882960,16777216,16711935,65536,65535,1,0,0.000000,0.000000,186737708.521739,178956970.666667


# Div f32 value with all other data types
Query::from("window")
    .map(Attribute("val_f32_i8") = Attribute("val_f32") / Attribute("val_i8"))
    .map(Attribute("val_f32_i8_plus_1") = Attribute("val_f32") / (Attribute("val_i8") + 1))
    .map(Attribute("val_f32_i16") = Attribute("val_f32") / Attribute("val_i16"))
    .map(Attribute("val_f32_i16_plus_1") = Attribute("val_f32") / (Attribute("val_i16") + 1))
    .map(Attribute("val_f32_i32") = Attribute("val_f32") / Attribute("val_i32"))
    .map(Attribute("val_f32_i32_plus_1") = Attribute("val_f32") / (Attribute("val_i32") + 1))
    .map(Attribute("val_f32_i64") = Attribute("val_f32") / Attribute("val_i64"))
    .map(Attribute("val_f32_i64_plus_1") = Attribute("val_f32") / (Attribute("val_i64") + 1))

    .map(Attribute("val_f32_u8") = Attribute("val_f32") / Attribute("val_u8"))
    .map(Attribute("val_f32_u8_plus_1") = Attribute("val_f32") / (Attribute("val_u8") + 1))
    .map(Attribute("val_f32_u16") = Attribute("val_f32") / Attribute("val_u16"))
    .map(Attribute("val_f32_u16_plus_1") = Attribute("val_f32") / (Attribute("val_u16") + 1))
    .map(Attribute("val_f32_u32") = Attribute("val_f32") / Attribute("val_u32"))
    .map(Attribute("val_f32_u32_plus_1") = Attribute("val_f32") / (Attribute("val_u32") + 1))
    .map(Attribute("val_f32_u64") = Attribute("val_f32") / Attribute("val_u64"))
    .map(Attribute("val_f32_u64_plus_1") = Attribute("val_f32") / (Attribute("val_u64") + 1))

    .map(Attribute("val_f32_f32") = Attribute("val_f32") / Attribute("val_f32"))
    .map(Attribute("val_f32_f32_plus_1") = Attribute("val_f32") / (Attribute("val_f32") + 1))
    .map(Attribute("val_f32_f64") = Attribute("val_f32") / Attribute("val_f64"))
    .map(Attribute("val_f32_f64_plus_1") = Attribute("val_f32") / (Attribute("val_f64") + 1))

    .project(Attribute("val_f32_i8"), Attribute("val_f32_i8_plus_1"), Attribute("val_f32_i16"), Attribute("val_f32_i16_plus_1"), Attribute("val_f32_i32"), Attribute("val_f32_i32_plus_1"), Attribute("val_f32_i64"), Attribute("val_f32_i64_plus_1"), Attribute("val_f32_u8"), Attribute("val_f32_u8_plus_1"), Attribute("val_f32_u16"), Attribute("val_f32_u16_plus_1"), Attribute("val_f32_u32"), Attribute("val_f32_u32_plus_1"), Attribute("val_f32_u64"), Attribute("val_f32_u64_plus_1"), Attribute("val_f32_f32"), Attribute("val_f32_f32_plus_1"), Attribute("val_f32_f64"), Attribute("val_f32_f64_plus_1"))
    .SINK;
----
-0.547619,-0.560976,-0.178295,-0.179687,-0.000702,-0.000702,0.000000,0.000000,0.547619,0.534884,0.089844,0.089494,0.000351,0.000351,0.000000,0.000000,1.000000,0.958333,1.000000,0.958333


# Div f64 value with all other data types
Query::from("window")
    .map(Attribute("val_f64_i8") = Attribute("val_f64") / Attribute("val_i8"))
    .map(Attribute("val_f64_i8_plus_1") = Attribute("val_f64") / (Attribute("val_i8") + 1))
    .map(Attribute("val_f64_i16") = Attribute("val_f64") / Attribute("val_i16"))
    .map(Attribute("val_f64_i16_plus_1") = Attribute("val_f64") / (Attribute("val_i16") + 1))
    .map(Attribute("val_f64_i32") = Attribute("val_f64") / Attribute("val_i32"))
    .map(Attribute("val_f64_i32_plus_1") = Attribute("val_f64") / (Attribute("val_i32") + 1))
    .map(Attribute("val_f64_i64") = Attribute("val_f64") / Attribute("val_i64"))
    .map(Attribute("val_f64_i64_plus_1") = Attribute("val_f64") / (Attribute("val_i64") + 1))

    .map(Attribute("val_f64_u8") = Attribute("val_f64") / Attribute("val_u8"))
    .map(Attribute("val_f64_u8_plus_1") = Attribute("val_f64") / (Attribute("val_u8") + 1))
    .map(Attribute("val_f64_u16") = Attribute("val_f64") / Attribute("val_u16"))
    .map(Attribute("val_f64_u16_plus_1") = Attribute("val_f64") / (Attribute("val_u16") + 1))
    .map(Attribute("val_f64_u32") = Attribute("val_f64") / Attribute("val_u32"))
    .map(Attribute("val_f64_u32_plus_1") = Attribute("val_f64") / (Attribute("val_u32") + 1))
    .map(Attribute("val_f64_u64") = Attribute("val_f64") / Attribute("val_u64"))
    .map(Attribute("val_f64_u64_plus_1") = Attribute("val_f64") / (Attribute("val_u64") + 1))

    .map(Attribute("val_f64_f32") = Attribute("val_f64") / Attribute("val_f32"))
    .map(Attribute("val_f64_f32_plus_1") = Attribute("val_f64") / (Attribute("val_f32") + 1))
    .map(Attribute("val_f64_f64") = Attribute("val_f64") / Attribute("val_f64"))
    .map(Attribute("val_f64_f64_plus_1") = Attribute("val_f64") / (Attribute("val_f64") + 1))

    .project(Attribute("val_f64_i8"), Attribute("val_f64_i8_plus_1"), Attribute("val_f64_i16"), Attribute("val_f64_i16_plus_1"), Attribute("val_f64_i32"), Attribute("val_f64_i32_plus_1"), Attribute("val_f64_i64"), Attribute("val_f64_i64_plus_1"), Attribute("val_f64_u8"), Attribute("val_f64_u8_plus_1"), Attribute("val_f64_u16"), Attribute("val_f64_u16_plus_1"), Attribute("val_f64_u32"), Attribute("val_f64_u32_plus_1"), Attribute("val_f64_u64"), Attribute("val_f64_u64_plus_1"), Attribute("val_f64_f32"), Attribute("val_f64_f32_plus_1"), Attribute("val_f64_f64"), Attribute("val_f64_f64_plus_1"))
    .SINK;
----
-0.547619,-0.560976,-0.178295,-0.179688,-0.000702,-0.000702,-0.000000,-0.000000,0.547619,0.534884,0.089844,0.089494,0.000351,0.000351,0.000000,0.000000,1.000000,0.958333,1.000000,0.958333
