"all_queries":
- "query": "SELECT start, end, SUM(cpu) AS totalCpu, jobId FROM ClusterMonitoring_monitoringLightsaber WHERE eventType == INT16(3) GROUP BY jobId WINDOW SLIDING(creationTS, SIZE 60 SEC, ADVANCE BY 1 SEC) INTO CHECKSUM"
  "test_name": "milestone/ClusterMonitoring.test"
- "query": "SELECT * FROM DEBS_solarPanels INTO CHECKSUM"
  "test_name": "milestone/DEBS.test"
- "query": "SELECT * FROM DEBS_consumers WHERE consumedPower >= FLOAT64(400) INTO CHECKSUM"
  "test_name": "milestone/DEBS.test"
- "query": "SELECT * FROM DEBS_consumers WHERE consumedPower >= FLOAT64(400) AND sectorId = INT32(1) INTO CHECKSUM"
  "test_name": "milestone/DEBS.test"
- "query": "SELECT * FROM DEBS_consumers WHERE consumedPower >= FLOAT64(1) AND consumedPower < FLOAT64(61) INTO CHECKSUM"
  "test_name": "milestone/DEBS.test"
- "query": "SELECT consumedPower / FLOAT64(1000) AS consumedPower FROM DEBS_consumers INTO CHECKSUM"
  "test_name": "milestone/DEBS.test"
- "query": "SELECT groupId, SUM(producedPower) AS producedPower FROM DEBS_solarPanels GROUP BY groupId WINDOW TUMBLING(timestamp, SIZE 1 HOUR) INTO CHECKSUM"
  "test_name": "milestone/DEBS.test"
- "query": "SELECT groupId, SUM(producedPower) AS producedPower FROM DEBS_solarPanels GROUP BY groupId WINDOW SLIDING(timestamp, SIZE 1 HOUR, ADVANCE BY 10 MINUTES) INTO CHECKSUM"
  "test_name": "milestone/DEBS.test"
- "query": "SELECT id_x_3, value, timestamp FROM (SELECT id * UINT32(3) AS id_x_3, value, timestamp FROM Filter_Map_Queries_stream WHERE value != UINT32(1)) WHERE id_x_3 != UINT32(9) AND value != UINT32(312) INTO CHECKSUM"
  "test_name": "milestone/Filter_Map_Queries.test"
- "query": "SELECT id * UINT32(9) AS id_x_3, value, timestamp FROM Filter_Map_Queries_stream WHERE value != UINT32(1) INTO CHECKSUM"
  "test_name": "milestone/Filter_Map_Queries.test"
- "query": "SELECT id * UINT32(3) / value + value * UINT32(2) AS id_new, value * UINT32(25) - (id * UINT32(3) / value + value * UINT32(2)) * UINT32(5) - UINT32(125) AS value_new, timestamp FROM Filter_Map_Queries_stream INTO CHECKSUM"
  "test_name": "milestone/Filter_Map_Queries.test"
- "query": "SELECT i8 + i8 AS i8_i8, i8 + i8 + INT8(1) AS i8_i8_plus_1, i8 + i16 AS i8_i16, i8 + i16 + INT16(1) AS i8_i16_plus_1, i8 + i32 AS i8_i32, i8 + i32 + INT32(1) AS i8_i32_plus_1, i8 + i64 AS i8_i64, i8 + i64 + INT32(1) AS i8_i64_plus_1, i8 + u8  AS i8_u8, i8 + u8  + UINT8(1) AS i8_u8_plus_1, i8 + u16 AS i8_u16, i8 + u16 + UINT16(1) AS i8_u16_plus_1, i8 + u32 AS i8_u32, i8 + u32 + UINT32(1) AS i8_u32_plus_1, i8 + u64 AS i8_u64, i8 + u64 + UINT64(1) AS i8_u64_plus_1, i8 + f32 AS i8_f32, i8 + f32 + FLOAT32(1) AS i8_f32_plus_1, i8 + f64 AS i8_f64, i8 + f64 + FLOAT64(1) AS i8_f64_plus_1 FROM FunctionAdd_stream INTO CHECKSUM"
  "test_name": "function/arithmetical/FunctionAdd.test"
- "query": "SELECT i16 + i8 AS i16_i8, i16 + i8 + INT8(1) AS i16_i8_plus_1, i16 + i16 AS i16_i16, i16 + i16 + INT16(1) AS i16_i16_plus_1, i16 + i32 AS i16_i32, i16 + i32 + INT32(1) AS i16_i32_plus_1, i16 + i64 AS i16_i64, i16 + i64 + INT64(1) AS i16_i64_plus_1, i16 + u8 AS i16_u8, i16 + u8 + UINT8(1) AS i16_u8_plus_1, u16 + i16 AS i16_u16, u16 + i16 + UINT16(1) AS i16_u16_plus_1, i16 + u32 AS i16_u32, i16 + u32 + UINT32(1) AS i16_u32_plus_1, i16 + u64 AS i16_u64, i16 + u64 + UINT64(1) AS i16_u64_plus_1, i16 + f32 AS i16_f32, i16 + f32 + FLOAT32(1) AS i16_f32_plus_1, i16 + f64 AS i16_f64, i16 + f64 + FLOAT64(1) AS i16_f64_plus_1 FROM FunctionAdd_stream INTO CHECKSUM"
  "test_name": "function/arithmetical/FunctionAdd.test"
- "query": "SELECT i32 + i8 AS i32_i8, i32 + i8 + INT8(1) AS i32_i8_plus_1, i32 + i16 AS i32_i16, i32 + i16 + INT16(1) AS i32_i16_plus_1, i32 + i32 AS i32_i32, i32 + i32 + INT32(1) AS i32_i32_plus_1, i32 + i64 AS i32_i64, i32 + i64 + INT64(1) AS i32_i64_plus_1, i32 + u8 AS i32_u8, i32 + u8 + UINT8(1) AS i32_u8_plus_1, i32 + u16 AS i32_u16, i32 + u16 + UINT16(1) AS i32_u16_plus_1, i32 + u32 AS i32_u32, i32 + u32 + UINT32(1) AS i32_u32_plus_1, i32 + u64 AS i32_u64, i32 + u64 + UINT64(1) AS i32_u64_plus_1, i32 + f32 AS i32_f32, i32 + f32 + FLOAT32(1) AS i32_f32_plus_1, i32 + f64 AS i32_f64, i32 + f64 + FLOAT64(1) AS i32_f64_plus_1 FROM FunctionAdd_stream INTO CHECKSUM"
  "test_name": "function/arithmetical/FunctionAdd.test"
- "query": "SELECT i64 + i8 AS i64_i8, i64 + i8 + INT8(1) AS i64_i8_plus_1, i64 + i16 AS i64_i16, i64 + i16 + INT16(1) AS i64_i16_plus_1, i64 + i32 AS i64_i32, i64 + i32 + INT32(1) AS i64_i32_plus_1, i64 + i64 AS i64_i64, i64 + i64 + INT64(1) AS i64_i64_plus_1, i64 + u8 AS i64_u8, i64 + u8 + UINT8(1) AS i64_u8_plus_1, i64 + u16 AS i64_u16, i64 + u16 + UINT16(1) AS i64_u16_plus_1, i64 + u32 AS i64_u32, i64 + u32 + UINT32(1) AS i64_u32_plus_1, i64 + u64 AS i64_u64, i64 + u64 + UINT64(1) AS i64_u64_plus_1, i64 + f32 AS i64_f32, i64 + f32 + FLOAT32(1) AS i64_f32_plus_1, i64 + f64 AS i64_f64, i64 + f64 + FLOAT64(1) AS i64_f64_plus_1 FROM FunctionAdd_stream INTO CHECKSUM"
  "test_name": "function/arithmetical/FunctionAdd.test"
- "query": "SELECT (i8 == INT32(1)) and ((i16 == INT32(1)) and (i32 == INT32(1))) AS a, (i32 == INT32(1)) and ((i64 == INT32(1)) and (u8 == INT32(2))) AS b, (u8 == INT32(2)) and ((u16 == INT32(1)) and (u32 == INT32(2))) AS c, (u8 == INT32(2)) and ((u16 == INT32(1)) and (u32 == INT32(2))) AS d, (i8 == INT32(1)) and not ((i16 == INT32(1)) and (i32 == INT32(1))) AS e, (i32 == INT32(1)) and not ((i64 == INT32(1)) and (u8 == INT32(2))) AS f, (u8 == INT32(2)) and not ((u16 == INT32(1)) and (u32 == INT32(2))) AS g, (u8 == INT32(2)) and not ((u16 == INT32(1)) and (i32 == INT32(2))) AS h FROM FunctionAnd_stream INTO CHECKSUM"
  "test_name": "function/logical/FunctionAnd.test"
- "query": "SELECT (i8 == INT32(1)) and (i16 < INT32(2)) AS a, (i32 == INT32(1)) and (i64 > INT32(0)) AS b, (u8 == INT32(2)) and (u16 <= INT32(2)) AS c, (u8 == INT32(2)) and (u16 >= INT32(2)) AS d, (i8 == INT32(1)) and not (i16 == INT32(1)) AS e, (i32 == INT32(1)) and not (i64 == INT32(1)) AS f, (u8 == INT32(2)) and not (u16 == INT32(1)) AS g, (u8 == INT32(2)) and not (u16 == INT32(2)) AS h FROM FunctionAnd_stream INTO CHECKSUM"
  "test_name": "function/logical/FunctionAnd.test"
- "query": "SELECT (i8 == INT32(1)) and ((i16 < INT32(2)) and (i32 == INT32(1))) AS a, (i32 == INT32(1)) and ((i64 > INT32(0)) and (u8 == INT32(2))) AS b, (u8 == INT32(2)) and ((u16 <= INT32(2)) and (u32 == INT32(2))) AS c, (u8 == INT32(2)) and ((u16 >= INT32(2)) and (u32 == INT32(2))) AS d, (i8 == INT32(1)) and not ((i16 == INT32(1)) and (i32 == INT32(1))) AS e, (i32 == INT32(1)) and not ((i64 == INT32(1)) and (u8 == INT32(2))) AS f, (u8 == INT32(2)) and not ((u16 == INT32(1)) and (u32 == INT32(2))) AS g, (u8 == INT32(2)) and not ((u16 == INT32(1)) and (i32 == INT32(2))) AS h FROM FunctionAnd_stream INTO CHECKSUM"
  "test_name": "function/logical/FunctionAnd.test"
- "query": "SELECT i8 / i8 AS i8_i8, i8 / (i8 + INT8(1)) AS i8_i8_plus_1, i8 / i16 AS i8_i16, i8 / (i16 + INT16(1)) AS i8_i16_plus_1, i8 / i32 AS i8_i32, i8 / (i32 + INT32(1)) AS i8_i32_plus_1, i8 / i64 AS i8_i64, i8 / (i64 + INT64(1)) AS i8_i64_plus_1, i8 / u8 AS i8_u8, i8 / (u8 + UINT8(1)) AS i8_u8_plus_1, i8 / u16 AS i8_u16, i8 / (u16 + UINT16(1)) AS i8_u16_plus_1, i8 / u32 AS i8_u32, i8 / (u32 + UINT32(1)) AS i8_u32_plus_1, i8 / u64 AS i8_u64, i8 / (u64 + UINT64(1)) AS i8_u64_plus_1, i8 / f32 AS i8_f32, i8 / (f32 + FLOAT32(1)) AS i8_f32_plus_1, i8 / f64 AS i8_f64, i8 / (f64 + FLOAT64(1)) AS i8_f64_plus_1 FROM modified_FunctionDiv_FunctionDiv_stream INTO CHECKSUM"
  "test_name": "function/arithmetical/FunctionDiv.test"
- "query": "SELECT i16 / i8 AS i16_i8, i16 / (i8 + INT8(1)) AS i16_i8_plus_1, i16 / i16 AS i16_i16, i16 / (i16 + INT16(1)) AS i16_i16_plus_1, i16 / i32 AS i16_i32, i16 / (i32 + INT32(1)) AS i16_i32_plus_1, i16 / i64 AS i16_i64, i16 / (i64 + INT64(1)) AS i16_i64_plus_1, i16 / u8 AS i16_u8, i16 / (u8 + UINT8(1)) AS i16_u8_plus_1, i16 / u16 AS i16_u16, i16 / (u16 + UINT16(1)) AS i16_u16_plus_1, i16 / u32 AS i16_u32, i16 / (u32 + UINT32(1)) AS i16_u32_plus_1, i16 / u64 AS i16_u64, i16 / (u64 + UINT64(1)) AS i16_u64_plus_1, i16 / f32 AS i16_f32, i16 / (f32 + FLOAT32(1)) AS i16_f32_plus_1, i16 / f64 AS i16_f64, i16 / (f64 + FLOAT64(1)) AS i16_f64_plus_1 FROM modified_FunctionDiv_FunctionDiv_stream INTO CHECKSUM"
  "test_name": "function/arithmetical/FunctionDiv.test"
- "query": "SELECT i32 / i8 AS i32_i8, i32 / (i8 + INT8(1)) AS i32_i8_plus_1, i32 / i16 AS i32_i16, i32 / (i16 + INT16(1)) AS i32_i16_plus_1, i32 / i32 AS i32_i32, i32 / (i32 + INT32(1)) AS i32_i32_plus_1, i32 / i64 AS i32_i64, i32 / (i64 + INT64(1)) AS i32_i64_plus_1, i32 / u8 AS i32_u8, i32 / (u8 + UINT8(1)) AS i32_u8_plus_1, i32 / u16 AS i32_u16, i32 / (u16 + UINT16(1)) AS i32_u16_plus_1, i32 / u32 AS i32_u32, i32 / (u32 + UINT32(1)) AS i32_u32_plus_1, i32 / u64 AS i32_u64, i32 / (u64 + UINT64(1)) AS i32_u64_plus_1, i32 / f32 AS i32_f32, i32 / (f32 + FLOAT32(1)) AS i32_f32_plus_1, i32 / f64 AS i32_f64, i32 / (f64 + FLOAT64(1)) AS i32_f64_plus_1 FROM modified_FunctionDiv_FunctionDiv_stream INTO CHECKSUM"
  "test_name": "function/arithmetical/FunctionDiv.test"
- "query": "SELECT i64 / i8 AS i64_i8, i64 / (i8 + INT8(1)) AS i64_i8_plus_1, i64 / i16 AS i64_i16, i64 / (i16 + INT16(1)) AS i64_i16_plus_1, i64 / i32 AS i64_i32, i64 / (i32 + INT32(1)) AS i64_i32_plus_1, i64 / i64 AS i64_i64, i64 / (i64 + INT64(1)) AS i64_i64_plus_1, i64 / u8 AS i64_u8, i64 / (u8 + UINT8(1)) AS i64_u8_plus_1, i64 / u16 AS i64_u16, i64 / (u16 + UINT16(1)) AS i64_u16_plus_1, i64 / u32 AS i64_u32, i64 / (u32 + UINT32(1)) AS i64_u32_plus_1, i64 / u64 AS i64_u64, i64 / (u64 + UINT64(1)) AS i64_u64_plus_1, i64 / f32 AS i64_f32, i64 / (f32 + FLOAT32(1)) AS i64_f32_plus_1, i64 / f64 AS i64_f64, i64 / (f64 + FLOAT64(1)) AS i64_f64_plus_1 FROM modified_FunctionDiv_FunctionDiv_stream INTO CHECKSUM"
  "test_name": "function/arithmetical/FunctionDiv.test"
- "query": "SELECT u8 / i8 AS u8_i8, u8 / (i8 + INT8(1)) AS u8_i8_plus_1, u8 / i16 AS u8_i16, u8 / (i16 + INT16(1)) AS u8_i16_plus_1, u8 / i32 AS u8_i32, u8 / (i32 + INT32(1)) AS u8_i32_plus_1, u8 / i64 AS u8_i64, u8 / (i64 + INT64(1)) AS u8_i64_plus_1, u8 / u8 AS u8_u8, u8 / (u8 + UINT8(1)) AS u8_u8_plus_1, u8 / u16 AS u8_u16, u8 / (u16 + UINT16(1)) AS u8_u16_plus_1, u8 / u32 AS u8_u32, u8 / (u32 + UINT32(1)) AS u8_u32_plus_1, u8 / u64 AS u8_u64, u8 / (u64 + UINT64(1)) AS u8_u64_plus_1, u8 / f32 AS u8_f32, u8 / (f32 + FLOAT32(1)) AS u8_f32_plus_1, u8 / f64 AS u8_f64, u8 / (f64 + FLOAT64(1)) AS u8_f64_plus_1 FROM modified_FunctionDiv_FunctionDiv_stream INTO CHECKSUM"
  "test_name": "function/arithmetical/FunctionDiv.test"
- "query": "SELECT u16 / i8 AS u16_i8, u16 / (i8 + INT8(1)) AS u16_i8_plus_1, u16 / i16 AS u16_i16, u16 / (i16 + INT16(1)) AS u16_i16_plus_1, u16 / i32 AS u16_i32, u16 / (i32 + INT32(1)) AS u16_i32_plus_1, u16 / i64 AS u16_i64, u16 / (i64 + INT64(1)) AS u16_i64_plus_1, u16 / u8 AS u16_u8, u16 / (u8 + UINT8(1)) AS u16_u8_plus_1, u16 / u16 AS u16_u16, u16 / (u16 + UINT16(1)) AS u16_u16_plus_1, u16 / u32 AS u16_u32, u16 / (u32 + UINT32(1)) AS u16_u32_plus_1, u16 / u64 AS u16_u64, u16 / (u64 + UINT64(1)) AS u16_u64_plus_1, u16 / f32 AS u16_f32, u16 / (f32 + FLOAT32(1)) AS u16_f32_plus_1, u16 / f64 AS u16_f64, u16 / (f64 + FLOAT64(1)) AS u16_f64_plus_1 FROM modified_FunctionDiv_FunctionDiv_stream INTO CHECKSUM"
  "test_name": "function/arithmetical/FunctionDiv.test"
- "query": "SELECT u32 / i8 AS u32_i8, u32 / (i8 + INT8(1)) AS u32_i8_plus_1, u32 / i16 AS u32_i16, u32 / (i16 + INT16(1)) AS u32_i16_plus_1, u32 / i32 AS u32_i32, u32 / (i32 + INT32(1)) AS u32_i32_plus_1, u32 / i64 AS u32_i64, u32 / (i64 + INT64(1)) AS u32_i64_plus_1, u32 / u8 AS u32_u8, u32 / (u8 + UINT8(1)) AS u32_u8_plus_1, u32 / u16 AS u32_u16, u32 / (u16 + UINT16(1)) AS u32_u16_plus_1, u32 / u32 AS u32_u32, u32 / (u32 + UINT32(1)) AS u32_u32_plus_1, u32 / u64 AS u32_u64, u32 / (u64 + UINT64(1)) AS u32_u64_plus_1, u32 / f32 AS u32_f32, u32 / (f32 + FLOAT32(1)) AS u32_f32_plus_1, u32 / f64 AS u32_f64, u32 / (f64 + FLOAT64(1)) AS u32_f64_plus_1 FROM modified_FunctionDiv_FunctionDiv_stream INTO CHECKSUM"
  "test_name": "function/arithmetical/FunctionDiv.test"
- "query": "SELECT u64 / i8 AS u64_i8, u64 / (i8 + INT8(1)) AS u64_i8_plus_1, u64 / i16 AS u64_i16, u64 / (i16 + INT16(1)) AS u64_i16_plus_1, u64 / i32 AS u64_i32, u64 / (i32 + INT32(1)) AS u64_i32_plus_1, u64 / i64 AS u64_i64, u64 / (i64 + INT64(1)) AS u64_i64_plus_1, u64 / u8 AS u64_u8, u64 / (u8 + UINT8(1)) AS u64_u8_plus_1, u64 / u16 AS u64_u16, u64 / (u16 + UINT16(1)) AS u64_u16_plus_1, u64 / u32 AS u64_u32, u64 / (u32 + UINT32(1)) AS u64_u32_plus_1, u64 / u64 AS u64_u64, u64 / (u64 + UINT64(1)) AS u64_u64_plus_1, u64 / f32 AS u64_f32, u64 / (f32 + FLOAT32(1)) AS u64_f32_plus_1, u64 / f64 AS u64_f64, u64 / (f64 + FLOAT64(1)) AS u64_f64_plus_1 FROM modified_FunctionDiv_FunctionDiv_stream INTO CHECKSUM"
  "test_name": "function/arithmetical/FunctionDiv.test"
- "query": "SELECT f32 / i8 AS f32_i8, f32 / (i8 + INT8(1)) AS f32_i8_plus_1, f32 / i16 AS f32_i16, f32 / (i16 + INT16(1)) AS f32_i16_plus_1, f32 / i32 AS f32_i32, f32 / (i32 + INT32(1)) AS f32_i32_plus_1, f32 / i64 AS f32_i64, f32 / (i64 + INT64(1)) AS f32_i64_plus_1, f32 / u8 AS f32_u8, f32 / (u8 + UINT8(1)) AS f32_u8_plus_1, f32 / u16 AS f32_u16, f32 / (u16 + UINT16(1)) AS f32_u16_plus_1, f32 / u32 AS f32_u32, f32 / (u32 + UINT32(1)) AS f32_u32_plus_1, f32 / u64 AS f32_u64, f32 / (u64 + UINT64(1)) AS f32_u64_plus_1, f32 / f32 AS f32_f32, f32 / (f32 + FLOAT32(1)) AS f32_f32_plus_1, f32 / f64 AS f32_f64, f32 / (f64 + FLOAT64(1)) AS f32_f64_plus_1 FROM modified_FunctionDiv_FunctionDiv_stream INTO CHECKSUM"
  "test_name": "function/arithmetical/FunctionDiv.test"
- "query": "SELECT f64 / i8 AS f64_i8, f64 / (i8 + INT8(1)) AS f64_i8_plus_1, f64 / i16 AS f64_i16, f64 / (i16 + INT16(1)) AS f64_i16_plus_1, f64 / i32 AS f64_i32, f64 / (i32 + INT32(1)) AS f64_i32_plus_1, f64 / i64 AS f64_i64, f64 / (i64 + INT64(1)) AS f64_i64_plus_1, f64 / u8 AS f64_u8, f64 / (u8 + UINT8(1)) AS f64_u8_plus_1, f64 / u16 AS f64_u16, f64 / (u16 + UINT16(1)) AS f64_u16_plus_1, f64 / u32 AS f64_u32, f64 / (u32 + UINT32(1)) AS f64_u32_plus_1, f64 / u64 AS f64_u64, f64 / (u64 + UINT64(1)) AS f64_u64_plus_1, f64 / f32 AS f64_f32, f64 / (f32 + FLOAT32(1)) AS f64_f32_plus_1, f64 / f64 AS f64_f64, f64 / (f64 + FLOAT64(1)) AS f64_f64_plus_1 FROM modified_FunctionDiv_FunctionDiv_stream INTO CHECKSUM"
  "test_name": "function/arithmetical/FunctionDiv.test"
- "query": "SELECT i8 == i8 AS bool1, i8 == i8 + INT8(1) AS bool2, i8 == i16 AS bool3, i8 == i16 + INT16(1) AS bool4, i8 == i32 AS bool5, i8 == i32 + INT32(1) AS bool6, i8 == i64 AS bool7, i8 == i64 + INT64(1) AS bool8, i8 == u8 AS bool9, i8 == u8 + UINT8(1) AS bool10, i8 == u16 AS bool11, i8 == u16 + UINT16(1) AS bool12, i8 == u32 AS bool13, i8 == u32 + UINT32(1) AS bool14, i8 == u64 AS bool15, i8 == u64 + UINT64(1) AS bool16, i8 == f32 AS bool17, i8 == f32 + FLOAT32(1) AS bool18, i8 == f64 AS bool19, i8 == f64 + FLOAT64(1) AS bool20 FROM FunctionEqual_stream INTO CHECKSUM"
  "test_name": "function/logical/FunctionEqual.test"
- "query": "SELECT i16 == i8 AS bool1, i16 == i8 + INT8(1) AS bool2, i16 == i16 AS bool3, i16 == i16 + INT16(1) AS bool4, i16 == i32 AS bool5, i16 == i32 + INT32(1) AS bool6, i16 == i64 AS bool7, i16 == i64 + INT64(1) AS bool8, i16 == u8 AS bool9, i16 == u8 + UINT8(1) AS bool10, i16 == u16 AS bool11, i16 == u16 + UINT16(1) AS bool12, i16 == u32 AS bool13, i16 == u32 + UINT32(1) AS bool14, i16 == u64 AS bool15, i16 == u64 + UINT64(1) AS bool16, i16 == f32 AS bool17, i16 == f32 + FLOAT32(1) AS bool18, i16 == f64 AS bool19, i16 == f64 + FLOAT64(1) AS bool20 FROM FunctionEqual_stream INTO CHECKSUM"
  "test_name": "function/logical/FunctionEqual.test"
- "query": "SELECT i32 == i8 AS bool1, i32 == i8 + INT8(1) AS bool2, i32 == i16 AS bool3, i32 == i16 + INT16(1) AS bool4, i32 == i32 AS bool5, i32 == i32 + INT32(1) AS bool6, i32 == i64 AS bool7, i32 == i64 + INT64(1) AS bool8, i32 == u8 AS bool9, i32 == u8 + UINT8(1) AS bool10, i32 == u16 AS bool11, i32 == u16 + UINT16(1) AS bool12, i32 == u32 AS bool13, i32 == u32 + UINT32(1) AS bool14, i32 == u64 AS bool15, i32 == u64 + UINT64(1) AS bool16, i32 == f32 AS bool17, i32 == f32 + FLOAT32(1) AS bool18, i32 == f64 AS bool19, i32 == f64 + FLOAT64(1) AS bool20 FROM FunctionEqual_stream INTO CHECKSUM"
  "test_name": "function/logical/FunctionEqual.test"
- "query": "SELECT i64 == i8 AS bool1, i64 == i8 + INT8(1) AS bool2, i64 == i16 AS bool3, i64 == i16 + INT16(1) AS bool4, i64 == i32 AS bool5, i64 == i32 + INT32(1) AS bool6, i64 == i64 AS bool7, i64 == i64 + INT64(1) AS bool8, i64 == u8 AS bool9, i64 == u8 + UINT8(1) AS bool10, i64 == u16 AS bool11, i64 == u16 + UINT16(1) AS bool12, i64 == u32 AS bool13, i64 == u32 + UINT32(1) AS bool14, i64 == u64 AS bool15, i64 == u64 + UINT64(1) AS bool16, i64 == f32 AS bool17, i64 == f32 + FLOAT32(1) AS bool18, i64 == f64 AS bool19, i64 == f64 + FLOAT64(1) AS bool20 FROM FunctionEqual_stream INTO CHECKSUM"
  "test_name": "function/logical/FunctionEqual.test"
- "query": "SELECT i8 > i8 AS i8_i8, i8 > i8 + INT8(1) AS i8_i8_plus_1, i8 > i16 AS i8_i16, i8 > i16 + INT16(1) AS i8_i16_plus_1, i8 > i32 AS i8_i32, i8 > i32 + INT32(1) AS i8_i32_plus_1, i8 > i64 AS i8_i64, i8 > i64 + INT64(1) AS i8_i64_plus_1, i8 > u8  AS i8_u8, i8 > u8 + UINT8(1) AS i8_u8_plus_1, i8 > u16 AS i8_u16, i8 > u16 + UINT16(1) AS i8_u16_plus_1, i8 > u32 AS i8_u32, i8 > u32 + UINT32(1) AS i8_u32_plus_1, i8 > u64 AS i8_u64, i8 > u64 + UINT64(1) AS i8_u64_plus_1, i8 > f32 AS i8_f32, i8 > f32 + FLOAT32(1) AS i8_f32_plus_1, i8 > f64 AS i8_f64, i8 > f64 + FLOAT64(1) AS i8_f64_plus_1 FROM FunctionGreater_stream INTO CHECKSUM"
  "test_name": "function/comparison/FunctionGreater.test"
- "query": "SELECT i16 > i8 AS i16_i8, i16 > i8 + INT8(1) AS i16_i8_plus_1, i16 > i16 AS i16_i16, i16 > i16 + INT16(1) AS i16_i16_plus_1, i16 > i32 AS i16_i32, i16 > i32 + INT32(1) AS i16_i32_plus_1, i16 > i64 AS i16_i64, i16 > i64 + INT64(1) AS i16_i64_plus_1, i16 > u8 AS i16_u8, i16 > u8 + UINT8(1) AS i16_u8_plus_1, u16 > i16 AS i16_u16, u16 > i16 + INT16(1) AS i16_u16_plus_1, i16 > u32 AS i16_u32, i16 > u32 + UINT32(1) AS i16_u32_plus_1, i16 > u64 AS i16_u64, i16 > u64 + UINT64(1) AS i16_u64_plus_1, i16 > f32 AS i16_f32, i16 > f32 + FLOAT32(1) AS i16_f32_plus_1, i16 > f64 AS i16_f64, i16 > f64 + FLOAT64(1) AS i16_f64_plus_1 FROM FunctionGreater_stream INTO CHECKSUM"
  "test_name": "function/comparison/FunctionGreater.test"
- "query": "SELECT i32 > i8 AS i32_i8, i32 > i8 + INT8(1) AS i32_i8_plus_1, i32 > i16 AS i32_i16, i32 > i16 + INT16(1) AS i32_i16_plus_1, i32 > i32 AS i32_i32, i32 > i32 + INT32(1) AS i32_i32_plus_1, i32 > i64 AS i32_i64, i32 > i64 + INT64(1) AS i32_i64_plus_1, i32 > u8 AS i32_u8, i32 > u8 + UINT8(1) AS i32_u8_plus_1, i32 > u16 AS i32_u16, i32 > u16 + UINT16(1) AS i32_u16_plus_1, i32 > u32 AS i32_u32, i32 > u32 + UINT32(1) AS i32_u32_plus_1, i32 > u64 AS i32_u64, i32 > u64 + UINT64(1) AS i32_u64_plus_1, i32 > f32 AS i32_f32, i32 > f32 + FLOAT32(1) AS i32_f32_plus_1, i32 > f64 AS i32_f64, i32 > f64 + FLOAT64(1) AS i32_f64_plus_1 FROM FunctionGreater_stream INTO CHECKSUM"
  "test_name": "function/comparison/FunctionGreater.test"
- "query": "SELECT i64 > i8 AS i64_i8, i64 > i8 + INT8(1) AS i64_i8_plus_1, i64 > i16 AS i64_i16, i64 > i16 + INT16(1) AS i64_i16_plus_1, i64 > i32 AS i64_i32, i64 > i32 + INT32(1) AS i64_i32_plus_1, i64 > i64 AS i64_i64, i64 > i64 + INT64(1) AS i64_i64_plus_1, i64 > u8 AS i64_u8, i64 > u8 + UINT8(1) AS i64_u8_plus_1, i64 > u16 AS i64_u16, i64 > u16 + UINT16(1) AS i64_u16_plus_1, i64 > u32 AS i64_u32, i64 > u32 + UINT32(1) AS i64_u32_plus_1, i64 > u64 AS i64_u64, i64 > u64 + UINT64(1) AS i64_u64_plus_1, i64 > f32 AS i64_f32, i64 > f32 + FLOAT32(1) AS i64_f32_plus_1, i64 > f64 AS i64_f64, i64 > f64 + FLOAT64(1) AS i64_f64_plus_1 FROM FunctionGreater_stream INTO CHECKSUM"
  "test_name": "function/comparison/FunctionGreater.test"
- "query": "SELECT u8 > i8 AS u8_i8, u8 > i8 + INT8(1) AS u8_i8_plus_1, u8 > i16 AS u8_i16, u8 > i16 + INT16(1) AS u8_i16_plus_1, u8 > i32 AS u8_i32, u8 > i32 + INT32(1) AS u8_i32_plus_1, u8 > i64 AS u8_i64, u8 > i64 + INT64(1) AS u8_i64_plus_1, u8 > u8  AS u8_u8, u8 > u8 + UINT8(1) AS u8_u8_plus_1, u8 > u16 AS u8_u16, u8 > u16 + UINT16(1) AS u8_u16_plus_1, u8 > u32 AS u8_u32, u8 > u32 + UINT32(1) AS u8_u32_plus_1, u8 > u64 AS u8_u64, u8 > u64 + UINT64(1) AS u8_u64_plus_1, u8 > f32 AS u8_f32, u8 > f32 + FLOAT32(1) AS u8_f32_plus_1, u8 > f64 AS u8_f64, u8 > f64 + FLOAT64(1) AS u8_f64_plus_1 FROM FunctionGreater_stream INTO CHECKSUM"
  "test_name": "function/comparison/FunctionGreater.test"
- "query": "SELECT u16 > i8 AS u16_i8, u16 > i8 + INT8(1) AS u16_i8_plus_1, u16 > i16 AS u16_i16, u16 > i16 + INT16(1) AS u16_i16_plus_1, u16 > i32 AS u16_i32, u16 > i32 + INT32(1) AS u16_i32_plus_1, u16 > i64 AS u16_i64, u16 > i64 + INT64(1) AS u16_i64_plus_1, u16 > u8 AS u16_u8, u16 > u8 + UINT8(1) AS u16_u8_plus_1, u16 > i16 AS u16_u16, u16 > i16 + INT16(1) AS u16_u16_plus_1, u16 > u32 AS u16_u32, u16 > u32 + UINT32(1) AS u16_u32_plus_1, u16 > u64 AS u16_u64, u16 > u64 + UINT64(1) AS u16_u64_plus_1, u16 > f32 AS u16_f32, u16 > f32 + FLOAT32(1) AS u16_f32_plus_1, u16 > f64 AS u16_f64, u16 > f64 + FLOAT64(1) AS u16_f64_plus_1 FROM FunctionGreater_stream INTO CHECKSUM"
  "test_name": "function/comparison/FunctionGreater.test"
- "query": "SELECT u32 > i8 AS u32_i8, u32 > i8 + INT8(1) AS u32_i8_plus_1, u32 > i16 AS u32_i16, u32 > i16 + INT16(1) AS u32_i16_plus_1, u32 > i32 AS u32_i32, u32 > i32 + INT32(1) AS u32_i32_plus_1, u32 > i64 AS u32_i64, u32 > i64 + INT64(1) AS u32_i64_plus_1, u32 > u8 AS u32_u8, u32 > u8 + UINT8(1) AS u32_u8_plus_1, u32 > u16 AS u32_u16, u32 > u16 + UINT16(1) AS u32_u16_plus_1, u32 > u32 AS u32_u32, u32 > u32 + UINT32(1) AS u32_u32_plus_1, u32 > u64 AS u32_u64, u32 > u64 + UINT64(1) AS u32_u64_plus_1, u32 > f32 AS u32_f32, u32 > f32 + FLOAT32(1) AS u32_f32_plus_1, u32 > f64 AS u32_f64, u32 > f64 + FLOAT64(1) AS u32_f64_plus_1 FROM FunctionGreater_stream INTO CHECKSUM"
  "test_name": "function/comparison/FunctionGreater.test"
- "query": "SELECT u64 > i8 AS u64_i8, u64 > i8 + INT8(1) AS u64_i8_plus_1, u64 > i16 AS u64_i16, u64 > i16 + INT16(1) AS u64_i16_plus_1, u64 > i32 AS u64_i32, u64 > i32 + INT32(1) AS u64_i32_plus_1, u64 > i64 AS u64_i64, u64 > i64 + INT64(1) AS u64_i64_plus_1, u64 > u8 AS u64_u8, u64 > u8 + UINT8(1) AS u64_u8_plus_1, u64 > u16 AS u64_u16, u64 > u16 + UINT16(1) AS u64_u16_plus_1, u64 > u32 AS u64_u32, u64 > u32 + UINT32(1) AS u64_u32_plus_1, u64 > u64 AS u64_u64, u64 > u64 + UINT64(1) AS u64_u64_plus_1, u64 > f32 AS u64_f32, u64 > f32 + FLOAT32(1) AS u64_f32_plus_1, u64 > f64 AS u64_f64, u64 > f64 + FLOAT64(1) AS u64_f64_plus_1 FROM FunctionGreater_stream INTO CHECKSUM"
  "test_name": "function/comparison/FunctionGreater.test"
- "query": "SELECT i8 >= i8 AS i8_i8, i8 >= i8 + INT8(1) AS i8_i8_plus_1, i8 >= i16 AS i8_i16, i8 >= i16 + INT16(1) AS i8_i16_plus_1, i8 >= i32 AS i8_i32, i8 >= i32 + INT32(1) AS i8_i32_plus_1, i8 >= i64 AS i8_i64, i8 >= i64 + INT64(1) AS i8_i64_plus_1, i8 >= u8  AS i8_u8, i8 >= u8 + UINT8(1) AS i8_u8_plus_1, i8 >= u16 AS i8_u16, i8 >= u16 + UINT16(1) AS i8_u16_plus_1, i8 >= u32 AS i8_u32, i8 >= u32 + UINT32(1) AS i8_u32_plus_1, i8 >= u64 AS i8_u64, i8 >= u64 + UINT64(1) AS i8_u64_plus_1, i8 >= f32 AS i8_f32, i8 >= f32 + FLOAT32(1) AS i8_f32_plus_1, i8 >= f64 AS i8_f64, i8 >= f64 + FLOAT64(1) AS i8_f64_plus_1 FROM FunctionGreaterEquals_stream INTO CHECKSUM"
  "test_name": "function/comparison/FunctionGreaterEquals.test"
- "query": "SELECT i16 >= i8 AS i16_i8, i16 >= i8 + INT8(1) AS i16_i8_plus_1, i16 >= i16 AS i16_i16, i16 >= i16 + INT16(1) AS i16_i16_plus_1, i16 >= i32 AS i16_i32, i16 >= i32 + INT32(1) AS i16_i32_plus_1, i16 >= i64 AS i16_i64, i16 >= i64 + INT64(1) AS i16_i64_plus_1, i16 >= u8 AS i16_u8, i16 >= u8 + UINT8(1) AS i16_u8_plus_1, u16 >= i16 AS i16_u16, u16 >= i16 + INT16(1) AS i16_u16_plus_1, i16 >= u32 AS i16_u32, i16 >= u32 + UINT32(1) AS i16_u32_plus_1, i16 >= u64 AS i16_u64, i16 >= u64 + UINT64(1) AS i16_u64_plus_1, i16 >= f32 AS i16_f32, i16 >= f32 + FLOAT32(1) AS i16_f32_plus_1, i16 >= f64 AS i16_f64, i16 >= f64 + FLOAT64(1) AS i16_f64_plus_1 FROM FunctionGreaterEquals_stream INTO CHECKSUM"
  "test_name": "function/comparison/FunctionGreaterEquals.test"
- "query": "SELECT i32 >= i8 AS i32_i8, i32 >= i8 + INT8(1) AS i32_i8_plus_1, i32 >= i16 AS i32_i16, i32 >= i16 + INT16(1) AS i32_i16_plus_1, i32 >= i32 AS i32_i32, i32 >= i32 + INT32(1) AS i32_i32_plus_1, i32 >= i64 AS i32_i64, i32 >= i64 + INT64(1) AS i32_i64_plus_1, i32 >= u8 AS i32_u8, i32 >= u8 + UINT8(1) AS i32_u8_plus_1, i32 >= u16 AS i32_u16, i32 >= u16 + UINT16(1) AS i32_u16_plus_1, i32 >= u32 AS i32_u32, i32 >= u32 + UINT32(1) AS i32_u32_plus_1, i32 >= u64 AS i32_u64, i32 >= u64 + UINT64(1) AS i32_u64_plus_1, i32 >= f32 AS i32_f32, i32 >= f32 + FLOAT32(1) AS i32_f32_plus_1, i32 >= f64 AS i32_f64, i32 >= f64 + FLOAT64(1) AS i32_f64_plus_1 FROM FunctionGreaterEquals_stream INTO CHECKSUM"
  "test_name": "function/comparison/FunctionGreaterEquals.test"
- "query": "SELECT i64 >= i8 AS i64_i8, i64 >= i8 + INT8(1) AS i64_i8_plus_1, i64 >= i16 AS i64_i16, i64 >= i16 + INT16(1) AS i64_i16_plus_1, i64 >= i32 AS i64_i32, i64 >= i32 + INT32(1) AS i64_i32_plus_1, i64 >= i64 AS i64_i64, i64 >= i64 + INT64(1) AS i64_i64_plus_1, i64 >= u8 AS i64_u8, i64 >= u8 + UINT8(1) AS i64_u8_plus_1, i64 >= u16 AS i64_u16, i64 >= u16 + UINT16(1) AS i64_u16_plus_1, i64 >= u32 AS i64_u32, i64 >= u32 + UINT32(1) AS i64_u32_plus_1, i64 >= u64 AS i64_u64, i64 >= u64 + UINT64(1) AS i64_u64_plus_1, i64 >= f32 AS i64_f32, i64 >= f32 + FLOAT32(1) AS i64_f32_plus_1, i64 >= f64 AS i64_f64, i64 >= f64 + FLOAT64(1) AS i64_f64_plus_1 FROM FunctionGreaterEquals_stream INTO CHECKSUM"
  "test_name": "function/comparison/FunctionGreaterEquals.test"
- "query": "SELECT u8 >= i8 AS u8_i8, u8 >= i8 + INT8(1) AS u8_i8_plus_1, u8 >= i16 AS u8_i16, u8 >= i16 + INT16(1) AS u8_i16_plus_1, u8 >= i32 AS u8_i32, u8 >= i32 + INT32(1) AS u8_i32_plus_1, u8 >= i64 AS u8_i64, u8 >= i64 + INT64(1) AS u8_i64_plus_1, u8 >= u8  AS u8_u8, u8 >= u8 + UINT8(1) AS u8_u8_plus_1, u8 >= u16 AS u8_u16, u8 >= u16 + UINT16(1) AS u8_u16_plus_1, u8 >= u32 AS u8_u32, u8 >= u32 + UINT32(1) AS u8_u32_plus_1, u8 >= u64 AS u8_u64, u8 >= u64 + UINT64(1) AS u8_u64_plus_1, u8 >= f32 AS u8_f32, u8 >= f32 + FLOAT32(1) AS u8_f32_plus_1, u8 >= f64 AS u8_f64, u8 >= f64 + FLOAT64(1) AS u8_f64_plus_1 FROM FunctionGreaterEquals_stream INTO CHECKSUM"
  "test_name": "function/comparison/FunctionGreaterEquals.test"
- "query": "SELECT u16 >= i8 AS u16_i8, u16 >= i8 + INT8(1) AS u16_i8_plus_1, u16 >= i16 AS u16_i16, u16 >= i16 + INT16(1) AS u16_i16_plus_1, u16 >= i32 AS u16_i32, u16 >= i32 + INT32(1) AS u16_i32_plus_1, u16 >= i64 AS u16_i64, u16 >= i64 + INT64(1) AS u16_i64_plus_1, u16 >= u8 AS u16_u8, u16 >= u8 + UINT8(1) AS u16_u8_plus_1, u16 >= i16 AS u16_u16, u16 >= i16 + INT16(1) AS u16_u16_plus_1, u16 >= u32 AS u16_u32, u16 >= u32 + UINT32(1) AS u16_u32_plus_1, u16 >= u64 AS u16_u64, u16 >= u64 + UINT64(1) AS u16_u64_plus_1, u16 >= f32 AS u16_f32, u16 >= f32 + FLOAT32(1) AS u16_f32_plus_1, u16 >= f64 AS u16_f64, u16 >= f64 + FLOAT64(1) AS u16_f64_plus_1 FROM FunctionGreaterEquals_stream INTO CHECKSUM"
  "test_name": "function/comparison/FunctionGreaterEquals.test"
- "query": "SELECT u32 >= i8 AS u32_i8, u32 >= i8 + INT8(1) AS u32_i8_plus_1, u32 >= i16 AS u32_i16, u32 >= i16 + INT16(1) AS u32_i16_plus_1, u32 >= i32 AS u32_i32, u32 >= i32 + INT32(1) AS u32_i32_plus_1, u32 >= i64 AS u32_i64, u32 >= i64 + INT64(1) AS u32_i64_plus_1, u32 >= u8 AS u32_u8, u32 >= u8 + UINT8(1) AS u32_u8_plus_1, u32 >= u16 AS u32_u16, u32 >= u16 + UINT16(1) AS u32_u16_plus_1, u32 >= u32 AS u32_u32, u32 >= u32 + UINT32(1) AS u32_u32_plus_1, u32 >= u64 AS u32_u64, u32 >= u64 + UINT64(1) AS u32_u64_plus_1, u32 >= f32 AS u32_f32, u32 >= f32 + FLOAT32(1) AS u32_f32_plus_1, u32 >= f64 AS u32_f64, u32 >= f64 + FLOAT64(1) AS u32_f64_plus_1 FROM FunctionGreaterEquals_stream INTO CHECKSUM"
  "test_name": "function/comparison/FunctionGreaterEquals.test"
- "query": "SELECT u64 >= i8 AS u64_i8, u64 >= i8 + INT8(1) AS u64_i8_plus_1, u64 >= i16 AS u64_i16, u64 >= i16 + INT16(1) AS u64_i16_plus_1, u64 >= i32 AS u64_i32, u64 >= i32 + INT32(1) AS u64_i32_plus_1, u64 >= i64 AS u64_i64, u64 >= i64 + INT64(1) AS u64_i64_plus_1, u64 >= u8 AS u64_u8, u64 >= u8 + UINT8(1) AS u64_u8_plus_1, u64 >= u16 AS u64_u16, u64 >= u16 + UINT16(1) AS u64_u16_plus_1, u64 >= u32 AS u64_u32, u64 >= u32 + UINT32(1) AS u64_u32_plus_1, u64 >= u64 AS u64_u64, u64 >= u64 + UINT64(1) AS u64_u64_plus_1, u64 >= f32 AS u64_f32, u64 >= f32 + FLOAT32(1) AS u64_f32_plus_1, u64 >= f64 AS u64_f64, u64 >= f64 + FLOAT64(1) AS u64_f64_plus_1 FROM FunctionGreaterEquals_stream INTO CHECKSUM"
  "test_name": "function/comparison/FunctionGreaterEquals.test"
- "query": "SELECT i8 < i8 AS i8_i8, i8 < i8 + INT8(1) AS i8_i8_plus_1, i8 < i16 AS i8_i16, i8 < i16 + INT16(1) AS i8_i16_plus_1, i8 < i32 AS i8_i32, i8 < i32 + INT32(1) AS i8_i32_plus_1, i8 < i64 AS i8_i64, i8 < i64 + INT64(1) AS i8_i64_plus_1, i8 < u8  AS i8_u8, i8 < u8 + UINT8(1) AS i8_u8_plus_1, i8 < u16 AS i8_u16, i8 < u16 + UINT16(1) AS i8_u16_plus_1, i8 < u32 AS i8_u32, i8 < u32 + UINT32(1) AS i8_u32_plus_1, i8 < u64 AS i8_u64, i8 < u64 + UINT64(1) AS i8_u64_plus_1, i8 < f32 AS i8_f32, i8 < f32 + FLOAT32(1) AS i8_f32_plus_1, i8 < f64 AS i8_f64, i8 < f64 + FLOAT64(1) AS i8_f64_plus_1 FROM FunctionLess_stream INTO CHECKSUM"
  "test_name": "function/comparison/FunctionLess.test"
- "query": "SELECT i16 < i8 AS i16_i8, i16 < i8 + INT8(1) AS i16_i8_plus_1, i16 < i16 AS i16_i16, i16 < i16 + INT16(1) AS i16_i16_plus_1, i16 < i32 AS i16_i32, i16 < i32 + INT32(1) AS i16_i32_plus_1, i16 < i64 AS i16_i64, i16 < i64 + INT64(1) AS i16_i64_plus_1, i16 < u8 AS i16_u8, i16 < u8 + UINT8(1) AS i16_u8_plus_1, u16 < i16 AS i16_u16, u16 < i16 + INT16(1) AS i16_u16_plus_1, i16 < u32 AS i16_u32, i16 < u32 + UINT32(1) AS i16_u32_plus_1, i16 < u64 AS i16_u64, i16 < u64 + UINT64(1) AS i16_u64_plus_1, i16 < f32 AS i16_f32, i16 < f32 + FLOAT32(1) AS i16_f32_plus_1, i16 < f64 AS i16_f64, i16 < f64 + FLOAT64(1) AS i16_f64_plus_1 FROM FunctionLess_stream INTO CHECKSUM"
  "test_name": "function/comparison/FunctionLess.test"
- "query": "SELECT i32 < i8 AS i32_i8, i32 < i8 + INT8(1) AS i32_i8_plus_1, i32 < i16 AS i32_i16, i32 < i16 + INT16(1) AS i32_i16_plus_1, i32 < i32 AS i32_i32, i32 < i32 + INT32(1) AS i32_i32_plus_1, i32 < i64 AS i32_i64, i32 < i64 + INT64(1) AS i32_i64_plus_1, i32 < u8 AS i32_u8, i32 < u8 + UINT8(1) AS i32_u8_plus_1, i32 < u16 AS i32_u16, i32 < u16 + UINT16(1) AS i32_u16_plus_1, i32 < u32 AS i32_u32, i32 < u32 + UINT32(1) AS i32_u32_plus_1, i32 < u64 AS i32_u64, i32 < u64 + UINT64(1) AS i32_u64_plus_1, i32 < f32 AS i32_f32, i32 < f32 + FLOAT32(1) AS i32_f32_plus_1, i32 < f64 AS i32_f64, i32 < f64 + FLOAT64(1) AS i32_f64_plus_1 FROM FunctionLess_stream INTO CHECKSUM"
  "test_name": "function/comparison/FunctionLess.test"
- "query": "SELECT i64 < i8 AS i64_i8, i64 < i8 + INT8(1) AS i64_i8_plus_1, i64 < i16 AS i64_i16, i64 < i16 + INT16(1) AS i64_i16_plus_1, i64 < i32 AS i64_i32, i64 < i32 + INT32(1) AS i64_i32_plus_1, i64 < i64 AS i64_i64, i64 < i64 + INT64(1) AS i64_i64_plus_1, i64 < u8 AS i64_u8, i64 < u8 + UINT8(1) AS i64_u8_plus_1, i64 < u16 AS i64_u16, i64 < u16 + UINT16(1) AS i64_u16_plus_1, i64 < u32 AS i64_u32, i64 < u32 + UINT32(1) AS i64_u32_plus_1, i64 < u64 AS i64_u64, i64 < u64 + UINT64(1) AS i64_u64_plus_1, i64 < f32 AS i64_f32, i64 < f32 + FLOAT32(1) AS i64_f32_plus_1, i64 < f64 AS i64_f64, i64 < f64 + FLOAT64(1) AS i64_f64_plus_1 FROM FunctionLess_stream INTO CHECKSUM"
  "test_name": "function/comparison/FunctionLess.test"
- "query": "SELECT u8 < i8 AS u8_i8, u8 < i8 + INT8(1) AS u8_i8_plus_1, u8 < i16 AS u8_i16, u8 < i16 + INT16(1) AS u8_i16_plus_1, u8 < i32 AS u8_i32, u8 < i32 + INT32(1) AS u8_i32_plus_1, u8 < i64 AS u8_i64, u8 < i64 + INT64(1) AS u8_i64_plus_1, u8 < u8  AS u8_u8, u8 < u8 + UINT8(1) AS u8_u8_plus_1, u8 < u16 AS u8_u16, u8 < u16 + UINT16(1) AS u8_u16_plus_1, u8 < u32 AS u8_u32, u8 < u32 + UINT32(1) AS u8_u32_plus_1, u8 < u64 AS u8_u64, u8 < u64 + UINT64(1) AS u8_u64_plus_1, u8 < f32 AS u8_f32, u8 < f32 + FLOAT32(1) AS u8_f32_plus_1, u8 < f64 AS u8_f64, u8 < f64 + FLOAT64(1) AS u8_f64_plus_1 FROM FunctionLess_stream INTO CHECKSUM"
  "test_name": "function/comparison/FunctionLess.test"
- "query": "SELECT u16 < i8 AS u16_i8, u16 < i8 + INT8(1) AS u16_i8_plus_1, u16 < i16 AS u16_i16, u16 < i16 + INT16(1) AS u16_i16_plus_1, u16 < i32 AS u16_i32, u16 < i32 + INT32(1) AS u16_i32_plus_1, u16 < i64 AS u16_i64, u16 < i64 + INT64(1) AS u16_i64_plus_1, u16 < u8 AS u16_u8, u16 < u8 + UINT8(1) AS u16_u8_plus_1, u16 < i16 AS u16_u16, u16 < i16 + INT16(1) AS u16_u16_plus_1, u16 < u32 AS u16_u32, u16 < u32 + UINT32(1) AS u16_u32_plus_1, u16 < u64 AS u16_u64, u16 < u64 + UINT64(1) AS u16_u64_plus_1, u16 < f32 AS u16_f32, u16 < f32 + FLOAT32(1) AS u16_f32_plus_1, u16 < f64 AS u16_f64, u16 < f64 + FLOAT64(1) AS u16_f64_plus_1 FROM FunctionLess_stream INTO CHECKSUM"
  "test_name": "function/comparison/FunctionLess.test"
- "query": "SELECT u32 < i8 AS u32_i8, u32 < i8 + INT8(1) AS u32_i8_plus_1, u32 < i16 AS u32_i16, u32 < i16 + INT16(1) AS u32_i16_plus_1, u32 < i32 AS u32_i32, u32 < i32 + INT32(1) AS u32_i32_plus_1, u32 < i64 AS u32_i64, u32 < i64 + INT64(1) AS u32_i64_plus_1, u32 < u8 AS u32_u8, u32 < u8 + UINT8(1) AS u32_u8_plus_1, u32 < u16 AS u32_u16, u32 < u16 + UINT16(1) AS u32_u16_plus_1, u32 < u32 AS u32_u32, u32 < u32 + UINT32(1) AS u32_u32_plus_1, u32 < u64 AS u32_u64, u32 < u64 + UINT64(1) AS u32_u64_plus_1, u32 < f32 AS u32_f32, u32 < f32 + FLOAT32(1) AS u32_f32_plus_1, u32 < f64 AS u32_f64, u32 < f64 + FLOAT64(1) AS u32_f64_plus_1 FROM FunctionLess_stream INTO CHECKSUM"
  "test_name": "function/comparison/FunctionLess.test"
- "query": "SELECT u64 < i8 AS u64_i8, u64 < i8 + INT8(1) AS u64_i8_plus_1, u64 < i16 AS u64_i16, u64 < i16 + INT16(1) AS u64_i16_plus_1, u64 < i32 AS u64_i32, u64 < i32 + INT32(1) AS u64_i32_plus_1, u64 < i64 AS u64_i64, u64 < i64 + INT64(1) AS u64_i64_plus_1, u64 < u8 AS u64_u8, u64 < u8 + UINT8(1) AS u64_u8_plus_1, u64 < u16 AS u64_u16, u64 < u16 + UINT16(1) AS u64_u16_plus_1, u64 < u32 AS u64_u32, u64 < u32 + UINT32(1) AS u64_u32_plus_1, u64 < u64 AS u64_u64, u64 < u64 + UINT64(1) AS u64_u64_plus_1, u64 < f32 AS u64_f32, u64 < f32 + FLOAT32(1) AS u64_f32_plus_1, u64 < f64 AS u64_f64, u64 < f64 + FLOAT64(1) AS u64_f64_plus_1 FROM FunctionLess_stream INTO CHECKSUM"
  "test_name": "function/comparison/FunctionLess.test"
- "query": "SELECT i8 <= i8 AS i8_i8, i8 <= i8 + INT8(1) AS i8_i8_plus_1, i8 <= i16 AS i8_i16, i8 <= i16 + INT16(1) AS i8_i16_plus_1, i8 <= i32 AS i8_i32, i8 <= i32 + INT32(1) AS i8_i32_plus_1, i8 <= i64 AS i8_i64, i8 <= i64 + INT64(1) AS i8_i64_plus_1, i8 <= u8  AS i8_u8, i8 <= u8 + UINT8(1) AS i8_u8_plus_1, i8 <= u16 AS i8_u16, i8 <= u16 + UINT16(1) AS i8_u16_plus_1, i8 <= u32 AS i8_u32, i8 <= u32 + UINT32(1) AS i8_u32_plus_1, i8 <= u64 AS i8_u64, i8 <= u64 + UINT64(1) AS i8_u64_plus_1, i8 <= f32 AS i8_f32, i8 <= f32 + FLOAT32(1) AS i8_f32_plus_1, i8 <= f64 AS i8_f64, i8 <= f64 + FLOAT64(1) AS i8_f64_plus_1 FROM FunctionLessEquals_stream INTO CHECKSUM"
  "test_name": "function/comparison/FunctionLessEquals.test"
- "query": "SELECT i16 <= i8 AS i16_i8, i16 <= i8 + INT8(1) AS i16_i8_plus_1, i16 <= i16 AS i16_i16, i16 <= i16 + INT16(1) AS i16_i16_plus_1, i16 <= i32 AS i16_i32, i16 <= i32 + INT32(1) AS i16_i32_plus_1, i16 <= i64 AS i16_i64, i16 <= i64 + INT64(1) AS i16_i64_plus_1, i16 <= u8 AS i16_u8, i16 <= u8 + UINT8(1) AS i16_u8_plus_1, u16 <= i16 AS i16_u16, u16 <= i16 + INT16(1) AS i16_u16_plus_1, i16 <= u32 AS i16_u32, i16 <= u32 + UINT32(1) AS i16_u32_plus_1, i16 <= u64 AS i16_u64, i16 <= u64 + UINT64(1) AS i16_u64_plus_1, i16 <= f32 AS i16_f32, i16 <= f32 + FLOAT32(1) AS i16_f32_plus_1, i16 <= f64 AS i16_f64, i16 <= f64 + FLOAT64(1) AS i16_f64_plus_1 FROM FunctionLessEquals_stream INTO CHECKSUM"
  "test_name": "function/comparison/FunctionLessEquals.test"
- "query": "SELECT i32 <= i8 AS i32_i8, i32 <= i8 + INT8(1) AS i32_i8_plus_1, i32 <= i16 AS i32_i16, i32 <= i16 + INT16(1) AS i32_i16_plus_1, i32 <= i32 AS i32_i32, i32 <= i32 + INT32(1) AS i32_i32_plus_1, i32 <= i64 AS i32_i64, i32 <= i64 + INT64(1) AS i32_i64_plus_1, i32 <= u8 AS i32_u8, i32 <= u8 + UINT8(1) AS i32_u8_plus_1, i32 <= u16 AS i32_u16, i32 <= u16 + UINT16(1) AS i32_u16_plus_1, i32 <= u32 AS i32_u32, i32 <= u32 + UINT32(1) AS i32_u32_plus_1, i32 <= u64 AS i32_u64, i32 <= u64 + UINT64(1) AS i32_u64_plus_1, i32 <= f32 AS i32_f32, i32 <= f32 + FLOAT32(1) AS i32_f32_plus_1, i32 <= f64 AS i32_f64, i32 <= f64 + FLOAT64(1) AS i32_f64_plus_1 FROM FunctionLessEquals_stream INTO CHECKSUM"
  "test_name": "function/comparison/FunctionLessEquals.test"
- "query": "SELECT i64 <= i8 AS i64_i8, i64 <= i8 + INT8(1) AS i64_i8_plus_1, i64 <= i16 AS i64_i16, i64 <= i16 + INT16(1) AS i64_i16_plus_1, i64 <= i32 AS i64_i32, i64 <= i32 + INT32(1) AS i64_i32_plus_1, i64 <= i64 AS i64_i64, i64 <= i64 + INT64(1) AS i64_i64_plus_1, i64 <= u8 AS i64_u8, i64 <= u8 + UINT8(1) AS i64_u8_plus_1, i64 <= u16 AS i64_u16, i64 <= u16 + UINT16(1) AS i64_u16_plus_1, i64 <= u32 AS i64_u32, i64 <= u32 + UINT32(1) AS i64_u32_plus_1, i64 <= u64 AS i64_u64, i64 <= u64 + UINT64(1) AS i64_u64_plus_1, i64 <= f32 AS i64_f32, i64 <= f32 + FLOAT32(1) AS i64_f32_plus_1, i64 <= f64 AS i64_f64, i64 <= f64 + FLOAT64(1) AS i64_f64_plus_1 FROM FunctionLessEquals_stream INTO CHECKSUM"
  "test_name": "function/comparison/FunctionLessEquals.test"
- "query": "SELECT u8 <= i8 AS u8_i8, u8 <= i8 + INT8(1) AS u8_i8_plus_1, u8 <= i16 AS u8_i16, u8 <= i16 + INT16(1) AS u8_i16_plus_1, u8 <= i32 AS u8_i32, u8 <= i32 + INT32(1) AS u8_i32_plus_1, u8 <= i64 AS u8_i64, u8 <= i64 + INT64(1) AS u8_i64_plus_1, u8 <= u8  AS u8_u8, u8 <= u8 + UINT8(1) AS u8_u8_plus_1, u8 <= u16 AS u8_u16, u8 <= u16 + UINT16(1) AS u8_u16_plus_1, u8 <= u32 AS u8_u32, u8 <= u32 + UINT32(1) AS u8_u32_plus_1, u8 <= u64 AS u8_u64, u8 <= u64 + UINT64(1) AS u8_u64_plus_1, u8 <= f32 AS u8_f32, u8 <= f32 + FLOAT32(1) AS u8_f32_plus_1, u8 <= f64 AS u8_f64, u8 <= f64 + FLOAT64(1) AS u8_f64_plus_1 FROM FunctionLessEquals_stream INTO CHECKSUM"
  "test_name": "function/comparison/FunctionLessEquals.test"
- "query": "SELECT u16 <= i8 AS u16_i8, u16 <= i8 + INT8(1) AS u16_i8_plus_1, u16 <= i16 AS u16_i16, u16 <= i16 + INT16(1) AS u16_i16_plus_1, u16 <= i32 AS u16_i32, u16 <= i32 + INT32(1) AS u16_i32_plus_1, u16 <= i64 AS u16_i64, u16 <= i64 + INT64(1) AS u16_i64_plus_1, u16 <= u8 AS u16_u8, u16 <= u8 + UINT8(1) AS u16_u8_plus_1, u16 <= i16 AS u16_u16, u16 <= i16 + INT16(1) AS u16_u16_plus_1, u16 <= u32 AS u16_u32, u16 <= u32 + UINT32(1) AS u16_u32_plus_1, u16 <= u64 AS u16_u64, u16 <= u64 + UINT64(1) AS u16_u64_plus_1, u16 <= f32 AS u16_f32, u16 <= f32 + FLOAT32(1) AS u16_f32_plus_1, u16 <= f64 AS u16_f64, u16 <= f64 + FLOAT64(1) AS u16_f64_plus_1 FROM FunctionLessEquals_stream INTO CHECKSUM"
  "test_name": "function/comparison/FunctionLessEquals.test"
- "query": "SELECT u32 <= i8 AS u32_i8, u32 <= i8 + INT8(1) AS u32_i8_plus_1, u32 <= i16 AS u32_i16, u32 <= i16 + INT16(1) AS u32_i16_plus_1, u32 <= i32 AS u32_i32, u32 <= i32 + INT32(1) AS u32_i32_plus_1, u32 <= i64 AS u32_i64, u32 <= i64 + INT64(1) AS u32_i64_plus_1, u32 <= u8 AS u32_u8, u32 <= u8 + UINT8(1) AS u32_u8_plus_1, u32 <= u16 AS u32_u16, u32 <= u16 + UINT16(1) AS u32_u16_plus_1, u32 <= u32 AS u32_u32, u32 <= u32 + UINT32(1) AS u32_u32_plus_1, u32 <= u64 AS u32_u64, u32 <= u64 + UINT64(1) AS u32_u64_plus_1, u32 <= f32 AS u32_f32, u32 <= f32 + FLOAT32(1) AS u32_f32_plus_1, u32 <= f64 AS u32_f64, u32 <= f64 + FLOAT64(1) AS u32_f64_plus_1 FROM FunctionLessEquals_stream INTO CHECKSUM"
  "test_name": "function/comparison/FunctionLessEquals.test"
- "query": "SELECT u64 <= i8 AS u64_i8, u64 <= i8 + INT8(1) AS u64_i8_plus_1, u64 <= i16 AS u64_i16, u64 <= i16 + INT16(1) AS u64_i16_plus_1, u64 <= i32 AS u64_i32, u64 <= i32 + INT32(1) AS u64_i32_plus_1, u64 <= i64 AS u64_i64, u64 <= i64 + INT64(1) AS u64_i64_plus_1, u64 <= u8 AS u64_u8, u64 <= u8 + UINT8(1) AS u64_u8_plus_1, u64 <= u16 AS u64_u16, u64 <= u16 + UINT16(1) AS u64_u16_plus_1, u64 <= u32 AS u64_u32, u64 <= u32 + UINT32(1) AS u64_u32_plus_1, u64 <= u64 AS u64_u64, u64 <= u64 + UINT64(1) AS u64_u64_plus_1, u64 <= f32 AS u64_f32, u64 <= f32 + FLOAT32(1) AS u64_f32_plus_1, u64 <= f64 AS u64_f64, u64 <= f64 + FLOAT64(1) AS u64_f64_plus_1 FROM FunctionLessEquals_stream INTO CHECKSUM"
  "test_name": "function/comparison/FunctionLessEquals.test"
- "query": "SELECT i8 % i8 AS i8_i8, i8 % (i8 + INT8(1)) AS i8_i8_plus_1, i8 % i16 AS i8_i16, i8 % (i16 + INT16(1)) AS i8_i16_plus_1, i8 % i32 AS i8_i32, i8 % (i32 + INT32(1)) AS i8_i32_plus_1, i8 % i64 AS i8_i64, i8 % (i64 + INT64(1)) AS i8_i64_plus_1, i8 % u8 AS i8_u8, i8 % (u8 + UINT8(1)) AS i8_u8_plus_1, i8 % u16 AS i8_u16, i8 % (u16 + UINT16(1)) AS i8_u16_plus_1, i8 % u32 AS i8_u32, i8 % (u32 + UINT32(1)) AS i8_u32_plus_1, i8 % u64 AS i8_u64, i8 % (u64 + UINT64(1)) AS i8_u64_plus_1 FROM FunctionModulo_stream INTO CHECKSUM"
  "test_name": "function/arithmetical/FunctionModulo.test"
- "query": "SELECT i16 % i8 AS i16_i8, i16 % (i8 + INT8(1)) AS i16_i8_plus_1, i16 % i16 AS i16_i16, i16 % (i16 + INT16(1)) AS i16_i16_plus_1, i16 % i32 AS i16_i32, i16 % (i32 + INT32(1)) AS i16_i32_plus_1, i16 % i64 AS i16_i64, i16 % (i64 + INT64(1)) AS i16_i64_plus_1, i16 % u8 AS i16_u8, i16 % (u8 + UINT8(1)) AS i16_u8_plus_1, i16 % u16 AS i16_u16, i16 % (u16 + UINT16(1)) AS i16_u16_plus_1, i16 % u32 AS i16_u32, i16 % (u32 + UINT32(1)) AS i16_u32_plus_1, i16 % u64 AS i16_u64, i16 % (u64 + UINT64(1)) AS i16_u64_plus_1 FROM FunctionModulo_stream INTO CHECKSUM"
  "test_name": "function/arithmetical/FunctionModulo.test"
- "query": "SELECT i32 % i8 AS i32_i8, i32 % (i8 + INT8(1)) AS i32_i8_plus_1, i32 % i16 AS i32_i16, i32 % (i16 + INT16(1)) AS i32_i16_plus_1, i32 % i32 AS i32_i32, i32 % (i32 + INT32(1)) AS i32_i32_plus_1, i32 % i64 AS i32_i64, i32 % (i64 + INT64(1)) AS i32_i64_plus_1, i32 % u8 AS i32_u8, i32 % (u8 + UINT8(1)) AS i32_u8_plus_1, i32 % u16 AS i32_u16, i32 % (u16 + UINT16(1)) AS i32_u16_plus_1, i32 % u32 AS i32_u32, i32 % (u32 + UINT32(1)) AS i32_u32_plus_1, i32 % u64 AS i32_u64, i32 % (u64 + UINT64(1)) AS i32_u64_plus_1 FROM FunctionModulo_stream INTO CHECKSUM"
  "test_name": "function/arithmetical/FunctionModulo.test"
- "query": "SELECT i64 % i8 AS i64_i8, i64 % (i8 + INT8(1)) AS i64_i8_plus_1, i64 % i16 AS i64_i16, i64 % (i16 + INT16(1)) AS i64_i16_plus_1, i64 % i32 AS i64_i32, i64 % (i32 + INT32(1)) AS i64_i32_plus_1, i64 % i64 AS i64_i64, i64 % (i64 + INT64(1)) AS i64_i64_plus_1, i64 % u8 AS i64_u8, i64 % (u8 + UINT8(1)) AS i64_u8_plus_1, i64 % u16 AS i64_u16, i64 % (u16 + UINT16(1)) AS i64_u16_plus_1, i64 % u32 AS i64_u32, i64 % (u32 + UINT32(1)) AS i64_u32_plus_1, i64 % u64 AS i64_u64, i64 % (u64 + UINT64(1)) AS i64_u64_plus_1 FROM FunctionModulo_stream INTO CHECKSUM"
  "test_name": "function/arithmetical/FunctionModulo.test"
- "query": "SELECT u8 % i8 AS u8_i8, u8 % (i8 + INT8(1)) AS u8_i8_plus_1, u8 % i16 AS u8_i16, u8 % (i16 + INT16(1)) AS u8_i16_plus_1, u8 % i32 AS u8_i32, u8 % (i32 + INT32(1)) AS u8_i32_plus_1, u8 % i64 AS u8_i64, u8 % (i64 + INT64(1)) AS u8_i64_plus_1, u8 % u8 AS u8_u8, u8 % (u8 + UINT8(1)) AS u8_u8_plus_1, u8 % u16 AS u8_u16, u8 % (u16 + UINT16(1)) AS u8_u16_plus_1, u8 % u32 AS u8_u32, u8 % (u32 + UINT32(1)) AS u8_u32_plus_1, u8 % u64 AS u8_u64, u8 % (u64 + UINT64(1)) AS u8_u64_plus_1 FROM FunctionModulo_stream INTO CHECKSUM"
  "test_name": "function/arithmetical/FunctionModulo.test"
- "query": "SELECT u16 % i8 AS u16_i8, u16 % (i8 + INT8(1)) AS u16_i8_plus_1, u16 % i16 AS u16_i16, u16 % (i16 + INT16(1)) AS u16_i16_plus_1, u16 % i32 AS u16_i32, u16 % (i32 + INT32(1)) AS u16_i32_plus_1, u16 % i64 AS u16_i64, u16 % (i64 + INT64(1)) AS u16_i64_plus_1, u16 % u8 AS u16_u8, u16 % (u8 + UINT8(1)) AS u16_u8_plus_1, u16 % u16 AS u16_u16, u16 % (u16 + UINT16(1)) AS u16_u16_plus_1, u16 % u32 AS u16_u32, u16 % (u32 + UINT32(1)) AS u16_u32_plus_1, u16 % u64 AS u16_u64, u16 % (u64 + UINT64(1)) AS u16_u64_plus_1 FROM FunctionModulo_stream INTO CHECKSUM"
  "test_name": "function/arithmetical/FunctionModulo.test"
- "query": "SELECT u32 % i8 AS u32_i8, u32 % (i8 + INT8(1)) AS u32_i8_plus_1, u32 % i16 AS u32_i16, u32 % (i16 + INT16(1)) AS u32_i16_plus_1, u32 % i32 AS u32_i32, u32 % (i32 + INT32(1)) AS u32_i32_plus_1, u32 % i64 AS u32_i64, u32 % (i64 + INT64(1)) AS u32_i64_plus_1, u32 % u8 AS u32_u8, u32 % (u8 + UINT8(1)) AS u32_u8_plus_1, u32 % u16 AS u32_u16, u32 % (u16 + UINT16(1)) AS u32_u16_plus_1, u32 % u32 AS u32_u32, u32 % (u32 + UINT32(1)) AS u32_u32_plus_1, u32 % u64 AS u32_u64, u32 % (u64 + UINT64(1)) AS u32_u64_plus_1 FROM FunctionModulo_stream INTO CHECKSUM"
  "test_name": "function/arithmetical/FunctionModulo.test"
- "query": "SELECT u64 % i8 AS u64_i8, u64 % (i8 + INT8(1)) AS u64_i8_plus_1, u64 % i16 AS u64_i16, u64 % (i16 + INT16(1)) AS u64_i16_plus_1, u64 % i32 AS u64_i32, u64 % (i32 + INT32(1)) AS u64_i32_plus_1, u64 % i64 AS u64_i64, u64 % (i64 + INT64(1)) AS u64_i64_plus_1, u64 % u8 AS u64_u8, u64 % (u8 + UINT8(1)) AS u64_u8_plus_1, u64 % u16 AS u64_u16, u64 % (u16 + UINT16(1)) AS u64_u16_plus_1, u64 % u32 AS u64_u32, u64 % (u32 + UINT32(1)) AS u64_u32_plus_1, u64 % u64 AS u64_u64, u64 % (u64 + UINT64(1)) AS u64_u64_plus_1 FROM FunctionModulo_stream INTO CHECKSUM"
  "test_name": "function/arithmetical/FunctionModulo.test"
- "query": "SELECT i8 * i8 AS i8_i8, i8 * (i8 + INT32(1)) AS i8_i8_plus_1, i8 * i16 AS i8_i16, i8 * (i16 + INT32(1)) AS i8_i16_plus_1, i8 * i32 AS i8_i32, i8 * (i32 + INT32(1)) AS i8_i32_plus_1, i8 * i64 AS i8_i64, i8 * (i64 + INT32(1)) AS i8_i64_plus_1, i8 * u8 AS i8_u8, i8 * (u8 + UINT8(1)) AS i8_u8_plus_1, i8 * u16 AS i8_u16, i8 * (u16 + UINT16(1)) AS i8_u16_plus_1, i8 * u32 AS i8_u32, i8 * (u32 + UINT32(1)) AS i8_u32_plus_1, i8 * u64 AS i8_u64, i8 * (u64 + UINT64(1)) AS i8_u64_plus_1, i8 * f32 AS i8_f32, i8 * (f32 + FLOAT32(1)) AS i8_f32_plus_1, i8 * f64 AS i8_f64, i8 * (f64 + FLOAT64(1)) AS i8_f64_plus_1 FROM FunctionMul_stream INTO CHECKSUM"
  "test_name": "function/arithmetical/FunctionMul.test"
- "query": "SELECT i16 * i8 AS i16_i8, i16 * (i8 + INT8(1)) AS i16_i8_plus_1, i16 * i16 AS i16_i16, i16 * (i16 + INT16(1)) AS i16_i16_plus_1, i16 * i32 AS i16_i32, i16 * (i32 + INT32(1)) AS i16_i32_plus_1, i16 * i64 AS i16_i64, i16 * (i64 + INT64(1)) AS i16_i64_plus_1, i16 * u8 AS i16_u8, i16 * (u8 + UINT8(1)) AS i16_u8_plus_1, i16 * u16 AS i16_u16, i16 * (u16 + UINT16(1)) AS i16_u16_plus_1, i16 * u32 AS i16_u32, i16 * (u32 + UINT32(1)) AS i16_u32_plus_1, i16 * u64 AS i16_u64, i16 * (u64 + UINT64(1)) AS i16_u64_plus_1, i16 * f32 AS i16_f32, i16 * (f32 + FLOAT32(1)) AS i16_f32_plus_1, i16 * f64 AS i16_f64, i16 * (f64 + FLOAT64(1)) AS i16_f64_plus_1 FROM FunctionMul_stream INTO CHECKSUM"
  "test_name": "function/arithmetical/FunctionMul.test"
- "query": "SELECT i32 * i8 AS i32_i8, i32 * (i8 + INT8(1)) AS i32_i8_plus_1, i32 * i16 AS i32_i16, i32 * (i16 + INT16(1)) AS i32_i16_plus_1, i32 * i32 AS i32_i32, i32 * (i32 + INT32(1)) AS i32_i32_plus_1, i32 * i64 AS i32_i64, i32 * (i64 + INT64(1)) AS i32_i64_plus_1, i32 * u8 AS i32_u8, i32 * (u8 + UINT8(1)) AS i32_u8_plus_1, i32 * u16 AS i32_u16, i32 * (u16 + UINT16(1)) AS i32_u16_plus_1, i32 * u32 AS i32_u32, i32 * (u32 + UINT32(1)) AS i32_u32_plus_1, i32 * u64 AS i32_u64, i32 * (u64 + UINT64(1)) AS i32_u64_plus_1, i32 * f32 AS i32_f32, i32 * (f32 + FLOAT32(1)) AS i32_f32_plus_1, i32 * f64 AS i32_f64, i32 * (f64 + FLOAT64(1)) AS i32_f64_plus_1 FROM FunctionMul_stream INTO CHECKSUM"
  "test_name": "function/arithmetical/FunctionMul.test"
- "query": "SELECT i64 * i8 AS i64_i8, i64 * (i8 + INT8(1)) AS i64_i8_plus_1, i64 * i16 AS i64_i16, i64 * (i16 + INT16(1)) AS i64_i16_plus_1, i64 * i32 AS i64_i32, i64 * (i32 + INT32(1)) AS i64_i32_plus_1, i64 * i64 AS i64_i64, i64 * (i64 + INT64(1)) AS i64_i64_plus_1, i64 * u8 AS i64_u8, i64 * (u8 + UINT8(1)) AS i64_u8_plus_1, i64 * u16 AS i64_u16, i64 * (u16 + UINT16(1)) AS i64_u16_plus_1, i64 * u32 AS i64_u32, i64 * (u32 + UINT32(1)) AS i64_u32_plus_1, i64 * u64 AS i64_u64, i64 * (u64 + UINT64(1)) AS i64_u64_plus_1, i64 * f32 AS i64_f32, i64 * (f32 + FLOAT32(1)) AS i64_f32_plus_1, i64 * f64 AS i64_f64, i64 * (f64 + FLOAT64(1)) AS i64_f64_plus_1 FROM FunctionMul_stream INTO CHECKSUM"
  "test_name": "function/arithmetical/FunctionMul.test"
- "query": "SELECT i8 != i8 AS bool1, i8 != i8 + INT8(1) AS bool2, i8 != i16 AS bool3, i8 != i16 + INT16(1) AS bool4, i8 != i32 AS bool5, i8 != i32 + INT32(1) AS bool6, i8 != i64 AS bool7, i8 != i64 + INT64(1) AS bool8, i8 != u8 AS bool9, i8 != u8 + UINT8(1) AS bool10, i8 != u16 AS bool11, i8 != u16 + UINT16(1) AS bool12, i8 != u32 AS bool13, i8 != u32 + UINT32(1) AS bool14, i8 != u64 AS bool15, i8 != u64 + UINT64(1) AS bool16, i8 != f32 AS bool17, i8 != f32 + FLOAT32(1) AS bool18, i8 != f64 AS bool19, i8 != f64 + FLOAT64(1) AS bool20 FROM FunctionNotEqual_stream INTO CHECKSUM"
  "test_name": "function/logical/FunctionNotEqual.test"
- "query": "SELECT i16 != i8 AS bool1, i16 != i8 + INT8(1) AS bool2, i16 != i16 AS bool3, i16 != i16 + INT16(1) AS bool4, i16 != i32 AS bool5, i16 != i32 + INT32(1) AS bool6, i16 != i64 AS bool7, i16 != i64 + INT64(1) AS bool8, i16 != u8 AS bool9, i16 != u8 + UINT8(1) AS bool10, i16 != u16 AS bool11, i16 != u16 + UINT16(1) AS bool12, i16 != u32 AS bool13, i16 != u32 + UINT32(1) AS bool14, i16 != u64 AS bool15, i16 != u64 + UINT64(1) AS bool16, i16 != f32 AS bool17, i16 != f32 + FLOAT32(1) AS bool18, i16 != f64 AS bool19, i16 != f64 + FLOAT64(1) AS bool20 FROM FunctionNotEqual_stream INTO CHECKSUM"
  "test_name": "function/logical/FunctionNotEqual.test"
- "query": "SELECT i32 != i8 AS bool1, i32 != i8 + INT8(1) AS bool2, i32 != i16 AS bool3, i32 != i16 + INT16(1) AS bool4, i32 != i32 AS bool5, i32 != i32 + INT32(1) AS bool6, i32 != i64 AS bool7, i32 != i64 + INT64(1) AS bool8, i32 != u8 AS bool9, i32 != u8 + UINT8(1) AS bool10, i32 != u16 AS bool11, i32 != u16 + UINT16(1) AS bool12, i32 != u32 AS bool13, i32 != u32 + UINT32(1) AS bool14, i32 != u64 AS bool15, i32 != u64 + UINT64(1) AS bool16, i32 != f32 AS bool17, i32 != f32 + FLOAT32(1) AS bool18, i32 != f64 AS bool19, i32 != f64 + FLOAT64(1) AS bool20 FROM FunctionNotEqual_stream INTO CHECKSUM"
  "test_name": "function/logical/FunctionNotEqual.test"
- "query": "SELECT i64 != i8 AS bool1, i64 != i8 + INT8(1) AS bool2, i64 != i16 AS bool3, i64 != i16 + INT16(1) AS bool4, i64 != i32 AS bool5, i64 != i32 + INT32(1) AS bool6, i64 != i64 AS bool7, i64 != i64 + INT64(1) AS bool8, i64 != u8 AS bool9, i64 != u8 + UINT8(1) AS bool10, i64 != u16 AS bool11, i64 != u16 + UINT16(1) AS bool12, i64 != u32 AS bool13, i64 != u32 + UINT32(1) AS bool14, i64 != u64 AS bool15, i64 != u64 + UINT64(1) AS bool16, i64 != f32 AS bool17, i64 != f32 + FLOAT32(1) AS bool18, i64 != f64 AS bool19, i64 != f64 + FLOAT64(1) AS bool20 FROM FunctionNotEqual_stream INTO CHECKSUM"
  "test_name": "function/logical/FunctionNotEqual.test"
- "query": "SELECT (i8 == INT32(2)) or ((i16 == INT32(2)) or (u32 == INT32(1))) AS a, (i32 == INT32(2)) or ((i64 == INT32(2)) or (u8 == INT32(2))) AS b, (u8 == INT32(2)) or ((u16 == INT32(1)) or (u32 == INT32(1))) AS c, (u8 == INT32(2)) or ((u16 == INT32(1)) or (u32 == INT32(1))) AS d, (i8 == INT32(1)) or not ((i16 == INT32(2)) or (i32 == INT32(1))) AS e FROM FunctionOr_stream INTO CHECKSUM"
  "test_name": "function/logical/FunctionOr.test"
- "query": "SELECT (i8 == INT32(2)) or (i16 < INT32(0)) AS a, (i32 == INT32(2)) or (i64 > INT32(0)) AS b, (u8 == INT32(2)) or (u16 <= INT32(2)) AS c, (u8 == INT32(2)) or (u16 >= INT32(2)) AS d, (i8 == INT32(1)) or not (i16 == INT32(2)) AS e FROM FunctionOr_stream INTO CHECKSUM"
  "test_name": "function/logical/FunctionOr.test"
- "query": "SELECT (i8 == INT32(2)) or ((i16 < INT32(0)) or (i32 == INT32(2))) AS a, (i32 == INT32(2)) or ((i64 > INT32(0)) or (u8 == INT32(2))) AS b, (u8 == INT32(2)) or ((u16 <= INT32(2)) or (u32 == INT32(1))) AS c, (u8 == INT32(2)) or ((u16 >= INT32(2)) or (u32 == INT32(1))) AS d, (i8 == INT32(1)) or not ((i16 == INT32(2)) or (i32 == INT32(1))) AS e FROM FunctionOr_stream INTO CHECKSUM"
  "test_name": "function/logical/FunctionOr.test"
- "query": "SELECT i8 - i8 AS i8_i8, i8 - i8 + INT8(1) AS i8_i8_plus_1, i8 - i16 AS i8_i16, i8 - i16 + INT16(1) AS i8_i16_plus_1, i8 - i32 AS i8_i32, i8 - i32 + INT32(1) AS i8_i32_plus_1, i8 - i64 AS i8_i64, i8 - i64 + INT64(1) AS i8_i64_plus_1, i8 - u8  AS i8_u8, i8 - u8 + UINT8(1) AS i8_u8_plus_1, i8 - u16 AS i8_u16, i8 - u16 + UINT16(1) AS i8_u16_plus_1, i8 - u32 AS i8_u32, i8 - u32 + UINT32(1) AS i8_u32_plus_1, i8 - u64 AS i8_u64, i8 - u64 + UINT64(1) AS i8_u64_plus_1, i8 - f32 AS i8_f32, i8 - f32 + FLOAT32(1) AS i8_f32_plus_1, i8 - f64 AS i8_f64, i8 - f64 + FLOAT64(1) AS i8_f64_plus_1 FROM FunctionSub_stream INTO CHECKSUM"
  "test_name": "function/arithmetical/FunctionAdd.test"
- "query": "SELECT i16 - i8 AS i16_i8, i16 - i8 + INT8(1) AS i16_i8_plus_1, i16 - i16 AS i16_i16, i16 - i16 + INT16(1) AS i16_i16_plus_1, i16 - i32 AS i16_i32, i16 - i32 + INT32(1) AS i16_i32_plus_1, i16 - i64 AS i16_i64, i16 - i64 + INT64(1) AS i16_i64_plus_1, i16 - u8 AS i16_u8, i16 - u8 + UINT8(1) AS i16_u8_plus_1, u16 - i16 AS i16_u16, u16 - i16 + UINT16(1) AS i16_u16_plus_1, i16 - u32 AS i16_u32, i16 - u32 + UINT32(1) AS i16_u32_plus_1, i16 - u64 AS i16_u64, i16 - u64 + UINT32(1) AS i16_u64_plus_1, i16 - f32 AS i16_f32, i16 - f32 + FLOAT32(1) AS i16_f32_plus_1, i16 - f64 AS i16_f64, i16 - f64 + FLOAT64(1) AS i16_f64_plus_1 FROM FunctionSub_stream INTO CHECKSUM"
  "test_name": "function/arithmetical/FunctionAdd.test"
- "query": "SELECT i32 - i8 AS i32_i8, i32 - i8 + INT8(1) AS i32_i8_plus_1, i32 - i16 AS i32_i16, i32 - i16 + INT16(1) AS i32_i16_plus_1, i32 - i32 AS i32_i32, i32 - i32 + INT32(1) AS i32_i32_plus_1, i32 - i64 AS i32_i64, i32 - i64 + INT64(1) AS i32_i64_plus_1, i32 - u8 AS i32_u8, i32 - u8 + UINT8(1) AS i32_u8_plus_1, i32 - u16 AS i32_u16, i32 - u16 + UINT16(1) AS i32_u16_plus_1, i32 - u32 AS i32_u32, i32 - u32 + UINT32(1) AS i32_u32_plus_1, i32 - u64 AS i32_u64, i32 - u64 + UINT32(1) AS i32_u64_plus_1, i32 - f32 AS i32_f32, i32 - f32 + FLOAT32(1) AS i32_f32_plus_1, i32 - f64 AS i32_f64, i32 - f64 + FLOAT64(1) AS i32_f64_plus_1 FROM FunctionSub_stream INTO CHECKSUM"
  "test_name": "function/arithmetical/FunctionAdd.test"
- "query": "SELECT i64 - i8 AS i64_i8, i64 - i8 + INT8(1) AS i64_i8_plus_1, i64 - i16 AS i64_i16, i64 - i16 + INT16(1) AS i64_i16_plus_1, i64 - i32 AS i64_i32, i64 - i32 + INT32(1) AS i64_i32_plus_1, i64 - i64 AS i64_i64, i64 - i64 + INT64(1) AS i64_i64_plus_1, i64 - u8 AS i64_u8, i64 - u8 + UINT32(1) AS i64_u8_plus_1, i64 - u16 AS i64_u16, i64 - u16 + UINT32(1) AS i64_u16_plus_1, i64 - u32 AS i64_u32, i64 - u32 + UINT32(1) AS i64_u32_plus_1, i64 - u64 AS i64_u64, i64 - u64 + UINT32(1) AS i64_u64_plus_1, i64 - f32 AS i64_f32, i64 - f32 + FLOAT32(1) AS i64_f32_plus_1, i64 - f64 AS i64_f64, i64 - f64 + FLOAT64(1) AS i64_f64_plus_1 FROM FunctionSub_stream INTO CHECKSUM"
  "test_name": "function/arithmetical/FunctionAdd.test"
- "query": "SELECT u8 - i8 AS u8_i8, u8 - i8 + INT8(1) AS u8_i8_plus_1, u8 - i16 AS u8_i16, u8 - i16 + INT16(1) AS u8_i16_plus_1, u8 - i32 AS u8_i32, u8 - i32 + INT32(1) AS u8_i32_plus_1, u8 - i64 AS u8_i64, u8 - i64 + INT64(1) AS u8_i64_plus_1, u8 - u8  AS u8_u8, u8 - u8 + UINT8(1) AS u8_u8_plus_1, u8 - u16 AS u8_u16, u8 - u16 + UINT16(1) AS u8_u16_plus_1, u8 - u32 AS u8_u32, u8 - u32 + UINT32(1) AS u8_u32_plus_1, u8 - u64 AS u8_u64, u8 - u64 + UINT64(1) AS u8_u64_plus_1, u8 - f32 AS u8_f32, u8 - f32 + FLOAT32(1) AS u8_f32_plus_1, u8 - f64 AS u8_f64, u8 - f64 + FLOAT64(1) AS u8_f64_plus_1 FROM FunctionSub_stream INTO CHECKSUM"
  "test_name": "function/arithmetical/FunctionAdd.test"
- "query": "SELECT u16 - i8 AS u16_i8, u16 - i8 + INT8(1) AS u16_i8_plus_1, u16 - i16 AS u16_i16, u16 - i16 + INT16(1) AS u16_i16_plus_1, u16 - i32 AS u16_i32, u16 - i32 + INT32(1) AS u16_i32_plus_1, u16 - i64 AS u16_i64, u16 - i64 + INT64(1) AS u16_i64_plus_1, u16 - u8 AS u16_u8, u16 - u8 + UINT8(1) AS u16_u8_plus_1, u16 - i16 AS u16_u16, u16 - i16 + INT16(1) AS u16_u16_plus_1, u16 - u32 AS u16_u32, u16 - u32 + UINT32(1) AS u16_u32_plus_1, u16 - u64 AS u16_u64, u16 - u64 + UINT32(1) AS u16_u64_plus_1, u16 - f32 AS u16_f32, u16 - f32 + FLOAT32(1) AS u16_f32_plus_1, u16 - f64 AS u16_f64, u16 - f64 + FLOAT64(1) AS u16_f64_plus_1 FROM FunctionSub_stream INTO CHECKSUM"
  "test_name": "function/arithmetical/FunctionAdd.test"
- "query": "SELECT u32 - i8 AS u32_i8, u32 - i8 + INT8(1) AS u32_i8_plus_1, u32 - i16 AS u32_i16, u32 - i16 + INT16(1) AS u32_i16_plus_1, u32 - i32 AS u32_i32, u32 - i32 + INT32(1) AS u32_i32_plus_1, u32 - i64 AS u32_i64, u32 - i64 + INT64(1) AS u32_i64_plus_1, u32 - u8 AS u32_u8, u32 - u8 + UINT32(1) AS u32_u8_plus_1, u32 - u16 AS u32_u16, u32 - u16 + UINT32(1) AS u32_u16_plus_1, u32 - u32 AS u32_u32, u32 - u32 + UINT32(1) AS u32_u32_plus_1, u32 - u64 AS u32_u64, u32 - u64 + UINT32(1) AS u32_u64_plus_1, u32 - f32 AS u32_f32, u32 - f32 + FLOAT32(1) AS u32_f32_plus_1, u32 - f64 AS u32_f64, u32 - f64 + FLOAT64(1) AS u32_f64_plus_1 FROM FunctionSub_stream INTO CHECKSUM"
  "test_name": "function/arithmetical/FunctionAdd.test"
- "query": "SELECT u64 - i8 AS u64_i8, u64 - i8 + INT8(1) AS u64_i8_plus_1, u64 - i16 AS u64_i16, u64 - i16 + INT16(1) AS u64_i16_plus_1, u64 - i32 AS u64_i32, u64 - i32 + INT32(1) AS u64_i32_plus_1, u64 - i64 AS u64_i64, u64 - i64 + INT64(1) AS u64_i64_plus_1, u64 - u8 AS u64_u8, u64 - u8 + UINT32(1) AS u64_u8_plus_1, u64 - u16 AS u64_u16, u64 - u16 + UINT32(1) AS u64_u16_plus_1, u64 - u32 AS u64_u32, u64 - u32 + UINT32(1) AS u64_u32_plus_1, u64 - u64 AS u64_u64, u64 - u64 + UINT32(1) AS u64_u64_plus_1, u64 - f32 AS u64_f32, u64 - f32 + FLOAT32(1) AS u64_f32_plus_1, u64 - f64 AS u64_f64, u64 - f64 + FLOAT64(1) AS u64_f64_plus_1 FROM FunctionSub_stream INTO CHECKSUM"
  "test_name": "function/arithmetical/FunctionAdd.test"
- "query": "SELECT f32 - i8 AS f32_i8, f32 - i8 + INT8(1) AS f32_i8_plus_1, f32 - i16 AS f32_i16, f32 - i16 + INT16(1) AS f32_i16_plus_1, f32 - i32 AS f32_i32, f32 - i32 + INT32(1) AS f32_i32_plus_1, f32 - i64 AS f32_i64, f32 - i64 + INT64(1) AS f32_i64_plus_1, f32 - u8 AS f32_u8, f32 - u8 + UINT32(1) AS f32_u8_plus_1, f32 - u16 AS f32_u16, f32 - u16 + UINT32(1) AS f32_u16_plus_1, f32 - u32 AS f32_u32, f32 - u32 + UINT32(1) AS f32_u32_plus_1, f32 - u64 AS f32_u64, f32 - u64 + UINT32(1) AS f32_u64_plus_1, f32 - f32 AS f32_f32, f32 - f32 + FLOAT32(1) AS f32_f32_plus_1, f32 - f64 AS f32_f64, f32 - f64 + FLOAT64(1) AS f32_f64_plus_1 FROM FunctionSub_stream INTO CHECKSUM"
  "test_name": "function/arithmetical/FunctionAdd.test"
- "query": "SELECT f64 - i8 AS f64_i8, f64 - i8 + INT8(1) AS f64_i8_plus_1, f64 - i16 AS f64_i16, f64 - i16 + INT16(1) AS f64_i16_plus_1, f64 - i32 AS f64_i32, f64 - i32 + INT32(1) AS f64_i32_plus_1, f64 - i64 AS f64_i64, f64 - i64 + INT64(1) AS f64_i64_plus_1, f64 - u8 AS f64_u8, f64 - u8 + UINT32(1) AS f64_u8_plus_1, f64 - u16 AS f64_u16, f64 - u16 + UINT32(1) AS f64_u16_plus_1, f64 - u32 AS f64_u32, f64 - u32 + UINT32(1) AS f64_u32_plus_1, f64 - u64 AS f64_u64, f64 - u64 + UINT32(1) AS f64_u64_plus_1, f64 - f32 AS f64_f32, f64 - f32 + FLOAT32(1) AS f64_f32_plus_1, f64 - f64 AS f64_f64, f64 - f64 + FLOAT64(1) AS f64_f64_plus_1 FROM FunctionSub_stream INTO CHECKSUM"
  "test_name": "function/arithmetical/FunctionAdd.test"
- "query": "SELECT * FROM (SELECT * FROM JoinMultipleStreams_stream) INNER JOIN (SELECT * FROM JoinMultipleStreams_stream2) ON id = id2 WINDOW TUMBLING (timestamp, size 1 sec) INNER JOIN (SELECT * FROM JoinMultipleStreams_stream4) ON id = id4 WINDOW TUMBLING (timestamp, size 1 sec) INTO CHECKSUM"
  "test_name": "join/JoinMultipleStreams.test"
- "query": "SELECT * FROM (SELECT * FROM JoinMultipleStreams_stream) INNER JOIN (SELECT * FROM JoinMultipleStreams_stream2) ON id = id2 WINDOW TUMBLING (timestamp, size 1 sec) INNER JOIN (SELECT * FROM JoinMultipleStreams_stream4) ON id = id4 WINDOW TUMBLING (timestamp, size 1 sec) INNER JOIN (SELECT * FROM JoinMultipleStreams_stream4_1) ON id = id4_1 WINDOW TUMBLING (timestamp, size 1 sec) INTO CHECKSUM"
  "test_name": "join/JoinMultipleStreams.test"
- "query": "SELECT * FROM (SELECT * FROM JoinMultipleStreams_stream7) INNER JOIN (SELECT * FROM JoinMultipleStreams_stream7_1) ON id7 = id7_1 WINDOW SLIDING (timestamp, size 1 sec, advance by 250 ms) INTO CHECKSUM"
  "test_name": "join/JoinMultipleStreams.test"
- "query": "SELECT * FROM (SELECT * FROM JoinMultipleStreams_stream) INNER JOIN (SELECT * FROM JoinMultipleStreams_stream2) ON id = id2 WINDOW SLIDING (timestamp, size 1 sec, advance by 500 ms) INNER JOIN (SELECT * FROM JoinMultipleStreams_stream4) ON id = id4 WINDOW SLIDING (timestamp, size 1 sec, advance by 500 ms) INNER JOIN (SELECT * FROM JoinMultipleStreams_stream4_1) ON id = id4_1 WINDOW SLIDING (timestamp, size 1 sec, advance by 500 ms) INTO CHECKSUM"
  "test_name": "join/JoinMultipleStreams.test"
- "query": "SELECT * FROM (SELECT * FROM JoinWithDifferentDataTypes_stream1) JOIN (SELECT * FROM JoinWithDifferentDataTypes_stream2) ON i16_s1 = i8_s2 and i16_s1 = i16_s2 and i16_s1 = i32_s2 and i16_s1 = i64_s2 and i16_s1 = u8_s2 and i16_s1 = u16_s2 and i16_s1 = u32_s2 and i16_s1 = u64_s2 and i16_s1 = f32_s2 and i16_s1 = f64_s2 WINDOW TUMBLING (ts, size 1 sec) INTO CHECKSUM"
  "test_name": "join/JoinWithDifferentDataTypes.test"
- "query": "SELECT * FROM (SELECT * FROM JoinWithDifferentDataTypes_stream1) JOIN (SELECT * FROM JoinWithDifferentDataTypes_stream2) ON i32_s1 = i8_s2 and i32_s1 = i16_s2 and i32_s1 = i32_s2 and i32_s1 = i64_s2 and i32_s1 = u8_s2 and i32_s1 = u16_s2 and i32_s1 = u32_s2 and i32_s1 = u64_s2 and i32_s1 = f32_s2 and i32_s1 = f64_s2 WINDOW TUMBLING (ts, size 1 sec) INTO CHECKSUM"
  "test_name": "join/JoinWithDifferentDataTypes.test"
- "query": "SELECT * FROM (SELECT * FROM JoinWithDifferentDataTypes_stream1) JOIN (SELECT * FROM JoinWithDifferentDataTypes_stream2) ON i64_s1 = i8_s2 and i64_s1 = i16_s2 and i64_s1 = i32_s2 and i64_s1 = i64_s2 and i64_s1 = u8_s2 and i64_s1 = u16_s2 and i64_s1 = u32_s2 and i64_s1 = u64_s2 and i64_s1 = f32_s2 and i64_s1 = f64_s2 WINDOW TUMBLING (ts, size 1 sec) INTO CHECKSUM"
  "test_name": "join/JoinWithDifferentDataTypes.test"
- "query": "SELECT * FROM (SELECT * FROM JoinWithDifferentDataTypes_stream1) JOIN (SELECT * FROM JoinWithDifferentDataTypes_stream2) ON u8_s1 = i8_s2 and u8_s1 = i16_s2 and u8_s1 = i32_s2 and u8_s1 = i64_s2 and u8_s1 = u8_s2 and u8_s1 = u16_s2 and u8_s1 = u32_s2 and u8_s1 = u64_s2 and u8_s1 = f32_s2 and u8_s1 = f64_s2 WINDOW TUMBLING (ts, size 1 sec) INTO CHECKSUM"
  "test_name": "join/JoinWithDifferentDataTypes.test"
- "query": "SELECT * FROM (SELECT * FROM JoinWithDifferentDataTypes_stream1) JOIN (SELECT * FROM JoinWithDifferentDataTypes_stream2) ON u16_s1 = i8_s2 and u16_s1 = i16_s2 and u16_s1 = i32_s2 and u16_s1 = i64_s2 and u16_s1 = u8_s2 and u16_s1 = u16_s2 and u16_s1 = u32_s2 and u16_s1 = u64_s2 and u16_s1 = f32_s2 and u16_s1 = f64_s2 WINDOW TUMBLING (ts, size 1 sec) INTO CHECKSUM"
  "test_name": "join/JoinWithDifferentDataTypes.test"
- "query": "SELECT * FROM (SELECT * FROM JoinWithDifferentDataTypes_stream1) JOIN (SELECT * FROM JoinWithDifferentDataTypes_stream2) ON u32_s1 = i8_s2 and u32_s1 = i16_s2 and u32_s1 = i32_s2 and u32_s1 = i64_s2 and u32_s1 = u8_s2 and u32_s1 = u16_s2 and u32_s1 = u32_s2 and u32_s1 = u64_s2 and u32_s1 = f32_s2 and u32_s1 = f64_s2 WINDOW TUMBLING (ts, size 1 sec) INTO CHECKSUM"
  "test_name": "join/JoinWithDifferentDataTypes.test"
- "query": "SELECT * FROM (SELECT * FROM JoinWithDifferentDataTypes_stream1) JOIN (SELECT * FROM JoinWithDifferentDataTypes_stream2) ON u64_s1 = i8_s2 and u64_s1 = i16_s2 and u64_s1 = i32_s2 and u64_s1 = i64_s2 and u64_s1 = u8_s2 and u64_s1 = u16_s2 and u64_s1 = u32_s2 and u64_s1 = u64_s2 and u64_s1 = f32_s2 and u64_s1 = f64_s2 WINDOW TUMBLING (ts, size 1 sec) INTO CHECKSUM"
  "test_name": "join/JoinWithDifferentDataTypes.test"
- "query": "SELECT * FROM (SELECT * FROM JoinWithDifferentDataTypes_stream1) JOIN (SELECT * FROM JoinWithDifferentDataTypes_stream2) ON f32_s1 = i8_s2 and f32_s1 = i16_s2 and f32_s1 = i32_s2 and f32_s1 = i64_s2 and f32_s1 = u8_s2 and f32_s1 = u16_s2 and f32_s1 = u32_s2 and f32_s1 = u64_s2 and f32_s1 = f32_s2 and f32_s1 = f64_s2 WINDOW TUMBLING (ts, size 1 sec) INTO CHECKSUM"
  "test_name": "join/JoinWithDifferentDataTypes.test"
- "query": "SELECT * FROM (SELECT * FROM JoinWithDifferentDataTypes_stream1) JOIN (SELECT * FROM JoinWithDifferentDataTypes_stream2) ON f64_s1 = i8_s2 and f64_s1 = i16_s2 and f64_s1 = i32_s2 and f64_s1 = i64_s2 and f64_s1 = u8_s2 and f64_s1 = u16_s2 and f64_s1 = u32_s2 and f64_s1 = u64_s2 and f64_s1 = f32_s2 and f64_s1 = f64_s2 WINDOW TUMBLING (ts, size 1 sec) INTO CHECKSUM"
  "test_name": "join/JoinWithDifferentDataTypes.test"
- "query": "SELECT start, end, vehicle, highway, direction, positionDiv5280, COUNT(speed) AS cntSpeed FROM (SELECT creationTS, vehicle, highway, direction, position / INT32(5280) AS positionDiv5280, speed FROM LinearRoadBenchmark_lrb) GROUP BY (vehicle, highway, direction, positionDiv5280) WINDOW SLIDING(creationTS, SIZE 30 SEC, ADVANCE BY 1 SEC) INTO CHECKSUM"
  "test_name": "milestone/LinearRoadBenchmark.test"
- "query": "SELECT id + value AS id, value, timestamp FROM Map_Add_stream INTO CHECKSUM"
  "test_name": "map/Map_Add.test"
- "query": "SELECT id, value, timestamp, id + value AS new FROM Map_Add_stream INTO CHECKSUM"
  "test_name": "map/Map_Add.test"
- "query": "SELECT id + UINT64(1) + value AS id, value, timestamp FROM Map_Add_stream INTO CHECKSUM"
  "test_name": "map/Map_Add.test"
- "query": "SELECT id + UINT64(1) AS id, value, timestamp, id + value AS new, new + value AS new2 FROM Map_Add_stream INTO CHECKSUM"
  "test_name": "map/Map_Add.test"
- "query": "SELECT value + (id + UINT64(1)) + value AS new2, (id + UINT64(1)) + new2 AS id FROM Map_Add_stream INTO CHECKSUM"
  "test_name": "map/Map_Add.test"
- "query": "SELECT id / value AS id, value, timestamp FROM Map_Div_stream INTO CHECKSUM"
  "test_name": "map/Map_Div.test"
- "query": "SELECT id, value, timestamp, id / value AS new FROM Map_Div_stream INTO CHECKSUM"
  "test_name": "map/Map_Div.test"
- "query": "SELECT id / UINT32(5) AS id, value / id AS value, timestamp FROM Map_Div_stream INTO CHECKSUM"
  "test_name": "map/Map_Div.test"
- "query": "SELECT id * value AS id, value, timestamp FROM Map_Mul_stream INTO CHECKSUM"
  "test_name": "map/Map_Add.test"
- "query": "SELECT id, value, timestamp, id * value AS new FROM Map_Mul_stream INTO CHECKSUM"
  "test_name": "map/Map_Add.test"
- "query": "SELECT id * UINT32(3) AS id, id * value AS value, timestamp FROM Map_Mul_stream INTO CHECKSUM"
  "test_name": "map/Map_Add.test"
- "query": "SELECT id - value AS id, value, timestamp FROM Map_Sub_stream INTO CHECKSUM"
  "test_name": "map/Map_Sub.test"
- "query": "SELECT id, value, timestamp, id - value AS new FROM Map_Sub_stream INTO CHECKSUM"
  "test_name": "map/Map_Sub.test"
- "query": "SELECT id - UINT32(1) AS id, value - id AS value, timestamp FROM Map_Sub_stream INTO CHECKSUM"
  "test_name": "map/Map_Sub.test"
- "query": "SELECT price * FLOAT64(89) / FLOAT64(100) AS price FROM Nexmark_bid INTO CHECKSUM"
  "test_name": "milestone/Nexmark.test"
- "query": "SELECT * FROM Nexmark_bid WHERE auctionId % INT32(123) = INT32(0) INTO CHECKSUM"
  "test_name": "milestone/Nexmark.test"
- "query": "SELECT start, end, start, end, auctionId, num, start, end, max_tmp FROM (SELECT auctionId, COUNT(auctionId) AS num, start, end FROM Nexmark_bid GROUP BY auctionId WINDOW SLIDING(timestamp, SIZE 10 SEC, ADVANCE BY 2 SEC)) INNER JOIN (SELECT auctionId, MAX(num_ids) AS max_tmp, start, end FROM (SELECT auctionId, COUNT(auctionId) AS num_ids, start FROM Nexmark_bid GROUP BY auctionId WINDOW SLIDING(timestamp, SIZE 10 SEC, ADVANCE BY 2 SEC)) WINDOW TUMBLING(start, SIZE 2 SEC)) ON num >= max_tmp WINDOW TUMBLING(start, SIZE 2 SEC) INTO CHECKSUM"
  "test_name": "milestone/Nexmark.test"
- "query": "SELECT start, end, timestamp, auctionId, bidder, datetime, price, timestamp, id, initialbid, reserve, expires, seller, category FROM (SELECT * FROM Nexmark_bid) INNER JOIN (SELECT * FROM Nexmark_auction) ON auctionId = id WINDOW TUMBLING (timestamp, size 10 sec) INTO CHECKSUM"
  "test_name": "milestone/Nexmark.test"
- "query": "SELECT value FROM Projection_stream INTO CHECKSUM"
  "test_name": "projection/Projection.test"
- "query": "SELECT timestamp FROM Projection_stream INTO CHECKSUM"
  "test_name": "projection/Projection.test"
- "query": "SELECT id, value FROM Projection_stream INTO CHECKSUM"
  "test_name": "projection/Projection.test"
- "query": "SELECT id, timestamp FROM Projection_stream INTO CHECKSUM"
  "test_name": "projection/Projection.test"
- "query": "SELECT value, timestamp FROM Projection_stream INTO CHECKSUM"
  "test_name": "projection/Projection.test"
- "query": "SELECT id, value, timestamp FROM Projection_stream INTO CHECKSUM"
  "test_name": "projection/Projection.test"
- "query": "SELECT id, timestamp, value FROM Projection_stream INTO CHECKSUM"
  "test_name": "projection/Projection.test"
- "query": "SELECT value, id, timestamp FROM Projection_stream INTO CHECKSUM"
  "test_name": "projection/Projection.test"
- "query": "SELECT value, timestamp, id FROM Projection_stream INTO CHECKSUM"
  "test_name": "projection/Projection.test"
- "query": "SELECT timestamp, id, value FROM Projection_stream INTO CHECKSUM"
  "test_name": "projection/Projection.test"
- "query": "SELECT timestamp, value, id FROM Projection_stream INTO CHECKSUM"
  "test_name": "projection/Projection.test"
- "query": "SELECT id FROM ProjectionWithFilterAndMap_stream WHERE timestamp == UINT64(1002) AND value == UINT64(1) INTO CHECKSUM"
  "test_name": "projection/ProjectionWithFilterAndMap.test"
- "query": "SELECT id FROM ProjectionWithFilterAndMap_stream WHERE id == UINT64(1) INTO CHECKSUM"
  "test_name": "projection/ProjectionWithFilterAndMap.test"
- "query": "SELECT id * UINT64(2) AS id FROM ProjectionWithFilterAndMap_stream WHERE id == UINT64(1) INTO CHECKSUM"
  "test_name": "projection/ProjectionWithFilterAndMap.test"
- "query": "SELECT new_id FROM (SELECT id * UINT64(2) AS new_id FROM ProjectionWithFilterAndMap_stream) WHERE new_id == UINT64(2) INTO CHECKSUM"
  "test_name": "projection/ProjectionWithFilterAndMap.test"
- "query": "SELECT id * UINT64(2) AS new_id FROM ProjectionWithFilterAndMap_stream WHERE id == UINT64(1) INTO CHECKSUM"
  "test_name": "projection/ProjectionWithFilterAndMap.test"
- "query": "SELECT * FROM Selection_stream WHERE value != UINT64(1) INTO CHECKSUM"
  "test_name": "selection/Selection.test"
- "query": "SELECT * FROM Selection_Equals_stream WHERE value == UINT64(1234) INTO CHECKSUM"
  "test_name": "selection/Selection_Equals.test"
- "query": "SELECT * FROM Selection_Equals_stream WHERE value == UINT64(1) AND id == UINT64(12) INTO CHECKSUM"
  "test_name": "selection/Selection_Equals.test"
- "query": "SELECT * FROM Selection_Equals_stream WHERE value == UINT64(1) AND id == UINT64(1234) INTO CHECKSUM"
  "test_name": "selection/Selection_Equals.test"
- "query": "SELECT * FROM Selection_Equals_streamWithText WHERE text1 == VARSIZED(\"test1\") INTO CHECKSUM"
  "test_name": "selection/Selection_Equals.test"
- "query": "SELECT * FROM Selection_Equals_streamWithText WHERE text1 != VARSIZED(\"test3\") AND text1 == text2 AND id < UINT64(11) INTO CHECKSUM"
  "test_name": "selection/Selection_Equals.test"
- "query": "SELECT * FROM Selection_Equals_streamWithText WHERE text1 == VARSIZED(\"test3\") AND text2 == VARSIZED(\"test1\") AND id == UINT64(11) INTO CHECKSUM"
  "test_name": "selection/Selection_Equals.test"
- "query": "SELECT * FROM Selection_Equals_streamWithText WHERE CONCAT(text1, text2) == VARSIZED(\"test1test1\") INTO CHECKSUM"
  "test_name": "selection/Selection_Equals.test"
- "query": "SELECT * FROM Selection_Equals_streamWithText WHERE CONCAT(text2, text1) == VARSIZED(\"test2test1\") AND id > UINT64(2) INTO CHECKSUM"
  "test_name": "selection/Selection_Equals.test"
- "query": "SELECT * FROM Selection_NotEquals_stream WHERE value != UINT64(1234) INTO CHECKSUM"
  "test_name": "selection/Selection_NotEquals.test"
- "query": "SELECT * FROM Selection_NotEquals_stream WHERE value != UINT64(1) AND id != UINT64(16) INTO CHECKSUM"
  "test_name": "selection/Selection_NotEquals.test"
- "query": "SELECT * FROM Selection_NotEquals_stream WHERE value != UINT64(9999) AND id != UINT64(1234) INTO CHECKSUM"
  "test_name": "selection/Selection_NotEquals.test"
- "query": "SELECT * FROM Selection_NotEquals_streamWithText WHERE text1 != VARSIZED(\"test1\") INTO CHECKSUM"
  "test_name": "selection/Selection_NotEquals.test"
- "query": "SELECT * FROM Selection_NotEquals_streamWithText WHERE text1 != VARSIZED(\"test1\") AND text2 != VARSIZED(\"test2\") INTO CHECKSUM"
  "test_name": "selection/Selection_NotEquals.test"
- "query": "SELECT * FROM Selection_NotEquals_streamWithText WHERE CONCAT(text1, text2) != VARSIZED(\"test1test1\") INTO CHECKSUM"
  "test_name": "selection/Selection_NotEquals.test"
- "query": "SELECT * FROM Selection_NotEquals_streamWithText WHERE CONCAT(text1, text2) != VARSIZED(\"test1test1\") AND id <= UINT64(8) INTO CHECKSUM"
  "test_name": "selection/Selection_NotEquals.test"
- "query": "SELECT field_1 FROM TwoSources_sixTuples INTO CHECKSUM"
  "test_name": "sources/TESTDATACanNotAppearInTestName.test"
- "query": "SELECT field_1 FROM TwoSourcesOneEmtpy_oneTuple INTO CHECKSUM"
  "test_name": "buffersize/TwoSourcesOneEmtpy.test"
- "query": "SELECT AVG(i8) as i8_out, AVG(i16) as i16_out, AVG(i32) as i32_out, AVG(i64) as i64_out, AVG(u8) as u8_out, AVG(u16) as u16_out, AVG(u32) as u32_out, AVG(u64) as u64_out, AVG(f32) as f32_out, AVG(f64) as f64_out FROM WindowAggregationDifferentDataTypes_stream WINDOW TUMBLING(ts, size 100 ms) INTO CHECKSUM"
  "test_name": "window/WindowAggregationDifferentDataTypes.test"
- "query": "SELECT SUM(i8) as i8_out, SUM(i16) as i16_out, SUM(i32) as i32_out, SUM(i64) as i64_out, SUM(u8) as u8_out, SUM(u16) as u16_out, SUM(u32) as u32_out, SUM(u64) as u64_out, SUM(f32) as f32_out, SUM(f64) as f64_out FROM WindowAggregationDifferentDataTypes_stream WINDOW TUMBLING(ts, size 100 ms) INTO CHECKSUM"
  "test_name": "window/WindowAggregationDifferentDataTypes.test"
- "query": "SELECT MIN(i8) as i8_out, MIN(i16) as i16_out, MIN(i32) as i32_out, MIN(i64) as i64_out, MIN(u8) as u8_out, MIN(u16) as u16_out, MIN(u32) as u32_out, MIN(u64) as u64_out, MIN(f32) as f32_out, MIN(f64) as f64_out FROM WindowAggregationDifferentDataTypes_stream WINDOW TUMBLING(ts, size 100 ms) INTO CHECKSUM"
  "test_name": "window/WindowAggregationDifferentDataTypes.test"
- "query": "SELECT MAX(i8) as i8_out, MAX(i16) as i16_out, MAX(i32) as i32_out, MAX(i64) as i64_out, MAX(u8) as u8_out, MAX(u16) as u16_out, MAX(u32) as u32_out, MAX(u64) as u64_out, MAX(f32) as f32_out, MAX(f64) as f64_out FROM WindowAggregationDifferentDataTypes_stream WINDOW TUMBLING(ts, size 100 ms) INTO CHECKSUM"
  "test_name": "window/WindowAggregationDifferentDataTypes.test"
- "query": "SELECT MEDIAN(i8) as i8_out, MEDIAN(i16) as i16_out, MEDIAN(i32) as i32_out, MEDIAN(i64) as i64_out, MEDIAN(u8) as u8_out, MEDIAN(u16) as u16_out, MEDIAN(u32) as u32_out, MEDIAN(u64) as u64_out, MEDIAN(f32) as f32_out, MEDIAN(f64) as f64_out FROM WindowAggregationDifferentDataTypes_stream WINDOW TUMBLING(ts, size 100 ms) INTO CHECKSUM"
  "test_name": "window/WindowAggregationDifferentDataTypes.test"
- "query": "SELECT AVG(i8) as i8_out, MIN(i16) as i16_out, MAX(i32) as i32_out, MAX(i64) as i64_out, SUM(u8) as u8_out, SUM(u16) as u16_out, AVG(u32) as u32_out, MEDIAN(u64) as u64_out, COUNT(f32) as f32_out, MEDIAN(f64) as f64_out FROM WindowAggregationDifferentDataTypes_stream WINDOW TUMBLING(ts, size 100 ms) INTO CHECKSUM"
  "test_name": "window/WindowAggregationDifferentDataTypes.test"
- "query": "SELECT COUNT(i8) as i8_out, COUNT(i16) as i16_out, COUNT(i32) as i32_out, COUNT(i64) as i64_out, COUNT(u8) as u8_out, COUNT(u16) as u16_out, COUNT(u32) as u32_out, COUNT(u64) as u64_out, COUNT(f32) as f32_out, COUNT(f64) as f64_out FROM WindowAggregationDifferentDataTypes_stream WINDOW SLIDING(ts, size 100 ms, advance by 50 ms) INTO CHECKSUM"
  "test_name": "window/WindowAggregationDifferentDataTypes.test"
- "query": "SELECT AVG(i8) as i8_out, AVG(i16) as i16_out, AVG(i32) as i32_out, AVG(i64) as i64_out, AVG(u8) as u8_out, AVG(u16) as u16_out, AVG(u32) as u32_out, AVG(u64) as u64_out, AVG(f32) as f32_out, AVG(f64) as f64_out FROM WindowAggregationDifferentDataTypes_stream WINDOW SLIDING(ts, size 100 ms, advance by 50 ms) INTO CHECKSUM"
  "test_name": "window/WindowAggregationDifferentDataTypes.test"
- "query": "SELECT SUM(i8) as i8_out, SUM(i16) as i16_out, SUM(i32) as i32_out, SUM(i64) as i64_out, SUM(u8) as u8_out, SUM(u16) as u16_out, SUM(u32) as u32_out, SUM(u64) as u64_out, SUM(f32) as f32_out, SUM(f64) as f64_out FROM WindowAggregationDifferentDataTypes_stream WINDOW SLIDING(ts, size 100 ms, advance by 50 ms) INTO CHECKSUM"
  "test_name": "window/WindowAggregationDifferentDataTypes.test"
- "query": "SELECT MIN(i8) as i8_out, MIN(i16) as i16_out, MIN(i32) as i32_out, MIN(i64) as i64_out, MIN(u8) as u8_out, MIN(u16) as u16_out, MIN(u32) as u32_out, MIN(u64) as u64_out, MIN(f32) as f32_out, MIN(f64) as f64_out FROM WindowAggregationDifferentDataTypes_stream WINDOW SLIDING(ts, size 100 ms, advance by 50 ms) INTO CHECKSUM"
  "test_name": "window/WindowAggregationDifferentDataTypes.test"
- "query": "SELECT MAX(i8) as i8_out, MAX(i16) as i16_out, MAX(i32) as i32_out, MAX(i64) as i64_out, MAX(u8) as u8_out, MAX(u16) as u16_out, MAX(u32) as u32_out, MAX(u64) as u64_out, MAX(f32) as f32_out, MAX(f64) as f64_out FROM WindowAggregationDifferentDataTypes_stream WINDOW SLIDING(ts, size 100 ms, advance by 50 ms) INTO CHECKSUM"
  "test_name": "window/WindowAggregationDifferentDataTypes.test"
- "query": "SELECT MEDIAN(i8) as i8_out, MEDIAN(i16) as i16_out, MEDIAN(i32) as i32_out, MEDIAN(i64) as i64_out, MEDIAN(u8) as u8_out, MEDIAN(u16) as u16_out, MEDIAN(u32) as u32_out, MEDIAN(u64) as u64_out, MEDIAN(f32) as f32_out, MEDIAN(f64) as f64_out FROM WindowAggregationDifferentDataTypes_stream WINDOW SLIDING(ts, size 100 ms, advance by 50 ms) INTO CHECKSUM"
  "test_name": "window/WindowAggregationDifferentDataTypes.test"
- "query": "SELECT MIN(i8) as i8_out, SUM(i16) as i16_out, AVG(i32) as i32_out, MAX(i64) as i64_out, COUNT(u8) as u8_out, SUM(u16) as u16_out, COUNT(u32) as u32_out, MEDIAN(u64) as u64_out, MAX(f32) as f32_out, MEDIAN(f64) as f64_out FROM WindowAggregationDifferentDataTypes_stream WINDOW SLIDING(ts, size 100 ms, advance by 50 ms) INTO CHECKSUM"
  "test_name": "window/WindowAggregationDifferentDataTypes.test"
- "query": "SELECT AVG(i8) as i8_out, AVG(i16) as i16_out, AVG(i32) as i32_out, AVG(i64) as i64_out, AVG(u8) as u8_out, AVG(u16) as u16_out, AVG(u32) as u32_out, AVG(u64) as u64_out, AVG(f32) as f32_out, AVG(f64) as f64_out FROM WindowAggregationDifferentDataTypesKeyed_stream GROUP BY (keyI8, keyI16, keyU64) WINDOW TUMBLING(ts, size 200 ms) INTO CHECKSUM"
  "test_name": "window/WindowAggregationDifferentDataTypesKeyed.test"
- "query": "SELECT MIN(i8) as i8_out, MIN(i16) as i16_out, MIN(i32) as i32_out, MIN(i64) as i64_out, MIN(u8) as u8_out, MIN(u16) as u16_out, MIN(u32) as u32_out, MIN(u64) as u64_out, MIN(f32) as f32_out, MIN(f64) as f64_out FROM WindowAggregationDifferentDataTypesKeyed_stream GROUP BY (keyI8, keyI16) WINDOW TUMBLING(ts, size 200 ms) INTO CHECKSUM"
  "test_name": "window/WindowAggregationDifferentDataTypesKeyed.test"
- "query": "SELECT MEDIAN(i8) as i8_out, MEDIAN(i16) as i16_out, MEDIAN(i32) as i32_out, MEDIAN(i64) as i64_out, MEDIAN(u8) as u8_out, MEDIAN(u16) as u16_out, MEDIAN(u32) as u32_out, MEDIAN(u64) as u64_out, MEDIAN(f32) as f32_out, MEDIAN(f64) as f64_out FROM WindowAggregationDifferentDataTypesKeyed_stream GROUP BY (keyI16) WINDOW SLIDING(ts, size 200 ms, advance by 100 ms) INTO CHECKSUM"
  "test_name": "window/WindowAggregationDifferentDataTypesKeyed.test"
- "query": "SELECT SUM(value) as sumValue FROM ( SELECT SUM(value) as value FROM WindowAggregationStackedAggregations_stream GROUP BY id WINDOW TUMBLING(timestamp, size 5 sec) ) GROUP BY id WINDOW SLIDING(start, size 10 sec, advance by 5 sec) INTO CHECKSUM"
  "test_name": "window/WindowAggregationStackedAggregations.test"
- "query": "SELECT SUM(inputValue) as sumValue FROM ( SELECT SUM(value) as inputValue FROM WindowAggregationStackedAggregations_stream WHERE id < UINT32(15) GROUP BY id WINDOW TUMBLING(timestamp, size 2 sec) ) WHERE id < UINT32(10) GROUP BY id WINDOW SLIDING(start, size 1 sec, advance by 500 ms) INTO CHECKSUM"
  "test_name": "window/WindowAggregationStackedAggregations.test"
- "query": "SELECT SUM(inputValue2) as sumValue FROM ( SELECT SUM(inputValue1) as inputValue2 FROM ( SELECT SUM(value) as inputValue1 FROM WindowAggregationStackedAggregations_stream WHERE id < UINT32(15) GROUP BY id WINDOW SLIDING(timestamp, size 1 sec, advance by 500 ms) )  GROUP BY id WINDOW TUMBLING(start, size 1 sec) ) WHERE id < UINT32(10) WINDOW TUMBLING(start, size 2 sec) INTO CHECKSUM"
  "test_name": "window/WindowAggregationStackedAggregations.test"
- "query": "SELECT campaign_id, SUM(user_id) AS sum_user_id FROM YahooStreamingBenchmark_ysb10k WHERE event_type < UINT64(1) GROUP BY campaign_id WINDOW TUMBLING(current_ms, SIZE 30 SEC) INTO CHECKSUM"
  "test_name": "milestone/YahooStreamingBenchmark.test"
- "query": "SELECT i8 / i8 AS i8_i8, i8 / (i8 + INT8(1)) AS i8_i8_plus_1, i8 / i16 AS i8_i16, i8 / (i16 + INT16(1)) AS i8_i16_plus_1, i8 / i32 AS i8_i32, i8 / (i32 + INT32(1)) AS i8_i32_plus_1, i8 / i64 AS i8_i64, i8 / (i64 + INT64(1)) AS i8_i64_plus_1, i8 / u8 AS i8_u8, i8 / (u8 + UINT8(1)) AS i8_u8_plus_1, i8 / u16 AS i8_u16, i8 / (u16 + UINT16(1)) AS i8_u16_plus_1, i8 / u32 AS i8_u32, i8 / (u32 + UINT32(1)) AS i8_u32_plus_1, i8 / u64 AS i8_u64, i8 / (u64 + UINT64(1)) AS i8_u64_plus_1, i8 / f32 AS i8_f32, i8 / (f32 + FLOAT32(1)) AS i8_f32_plus_1, i8 / f64 AS i8_f64, i8 / (f64 + FLOAT64(1)) AS i8_f64_plus_1 FROM modified_FunctionDiv_FunctionDiv_stream INTO CHECKSUM"
  "test_name": "function/arithmetical/FunctionDiv.test"
- "query": "SELECT i16 / i8 AS i16_i8, i16 / (i8 + INT8(1)) AS i16_i8_plus_1, i16 / i16 AS i16_i16, i16 / (i16 + INT16(1)) AS i16_i16_plus_1, i16 / i32 AS i16_i32, i16 / (i32 + INT32(1)) AS i16_i32_plus_1, i16 / i64 AS i16_i64, i16 / (i64 + INT64(1)) AS i16_i64_plus_1, i16 / u8 AS i16_u8, i16 / (u8 + UINT8(1)) AS i16_u8_plus_1, i16 / u16 AS i16_u16, i16 / (u16 + UINT16(1)) AS i16_u16_plus_1, i16 / u32 AS i16_u32, i16 / (u32 + UINT32(1)) AS i16_u32_plus_1, i16 / u64 AS i16_u64, i16 / (u64 + UINT64(1)) AS i16_u64_plus_1, i16 / f32 AS i16_f32, i16 / (f32 + FLOAT32(1)) AS i16_f32_plus_1, i16 / f64 AS i16_f64, i16 / (f64 + FLOAT64(1)) AS i16_f64_plus_1 FROM modified_FunctionDiv_FunctionDiv_stream INTO CHECKSUM"
  "test_name": "function/arithmetical/FunctionDiv.test"
- "query": "SELECT i32 / i8 AS i32_i8, i32 / (i8 + INT8(1)) AS i32_i8_plus_1, i32 / i16 AS i32_i16, i32 / (i16 + INT16(1)) AS i32_i16_plus_1, i32 / i32 AS i32_i32, i32 / (i32 + INT32(1)) AS i32_i32_plus_1, i32 / i64 AS i32_i64, i32 / (i64 + INT64(1)) AS i32_i64_plus_1, i32 / u8 AS i32_u8, i32 / (u8 + UINT8(1)) AS i32_u8_plus_1, i32 / u16 AS i32_u16, i32 / (u16 + UINT16(1)) AS i32_u16_plus_1, i32 / u32 AS i32_u32, i32 / (u32 + UINT32(1)) AS i32_u32_plus_1, i32 / u64 AS i32_u64, i32 / (u64 + UINT64(1)) AS i32_u64_plus_1, i32 / f32 AS i32_f32, i32 / (f32 + FLOAT32(1)) AS i32_f32_plus_1, i32 / f64 AS i32_f64, i32 / (f64 + FLOAT64(1)) AS i32_f64_plus_1 FROM modified_FunctionDiv_FunctionDiv_stream INTO CHECKSUM"
  "test_name": "function/arithmetical/FunctionDiv.test"
- "query": "SELECT i64 / i8 AS i64_i8, i64 / (i8 + INT8(1)) AS i64_i8_plus_1, i64 / i16 AS i64_i16, i64 / (i16 + INT16(1)) AS i64_i16_plus_1, i64 / i32 AS i64_i32, i64 / (i32 + INT32(1)) AS i64_i32_plus_1, i64 / i64 AS i64_i64, i64 / (i64 + INT64(1)) AS i64_i64_plus_1, i64 / u8 AS i64_u8, i64 / (u8 + UINT8(1)) AS i64_u8_plus_1, i64 / u16 AS i64_u16, i64 / (u16 + UINT16(1)) AS i64_u16_plus_1, i64 / u32 AS i64_u32, i64 / (u32 + UINT32(1)) AS i64_u32_plus_1, i64 / u64 AS i64_u64, i64 / (u64 + UINT64(1)) AS i64_u64_plus_1, i64 / f32 AS i64_f32, i64 / (f32 + FLOAT32(1)) AS i64_f32_plus_1, i64 / f64 AS i64_f64, i64 / (f64 + FLOAT64(1)) AS i64_f64_plus_1 FROM modified_FunctionDiv_FunctionDiv_stream INTO CHECKSUM"
  "test_name": "function/arithmetical/FunctionDiv.test"
- "query": "SELECT u8 / i8 AS u8_i8, u8 / (i8 + INT8(1)) AS u8_i8_plus_1, u8 / i16 AS u8_i16, u8 / (i16 + INT16(1)) AS u8_i16_plus_1, u8 / i32 AS u8_i32, u8 / (i32 + INT32(1)) AS u8_i32_plus_1, u8 / i64 AS u8_i64, u8 / (i64 + INT64(1)) AS u8_i64_plus_1, u8 / u8 AS u8_u8, u8 / (u8 + UINT8(1)) AS u8_u8_plus_1, u8 / u16 AS u8_u16, u8 / (u16 + UINT16(1)) AS u8_u16_plus_1, u8 / u32 AS u8_u32, u8 / (u32 + UINT32(1)) AS u8_u32_plus_1, u8 / u64 AS u8_u64, u8 / (u64 + UINT64(1)) AS u8_u64_plus_1, u8 / f32 AS u8_f32, u8 / (f32 + FLOAT32(1)) AS u8_f32_plus_1, u8 / f64 AS u8_f64, u8 / (f64 + FLOAT64(1)) AS u8_f64_plus_1 FROM modified_FunctionDiv_FunctionDiv_stream INTO CHECKSUM"
  "test_name": "function/arithmetical/FunctionDiv.test"
- "query": "SELECT u16 / i8 AS u16_i8, u16 / (i8 + INT8(1)) AS u16_i8_plus_1, u16 / i16 AS u16_i16, u16 / (i16 + INT16(1)) AS u16_i16_plus_1, u16 / i32 AS u16_i32, u16 / (i32 + INT32(1)) AS u16_i32_plus_1, u16 / i64 AS u16_i64, u16 / (i64 + INT64(1)) AS u16_i64_plus_1, u16 / u8 AS u16_u8, u16 / (u8 + UINT8(1)) AS u16_u8_plus_1, u16 / u16 AS u16_u16, u16 / (u16 + UINT16(1)) AS u16_u16_plus_1, u16 / u32 AS u16_u32, u16 / (u32 + UINT32(1)) AS u16_u32_plus_1, u16 / u64 AS u16_u64, u16 / (u64 + UINT64(1)) AS u16_u64_plus_1, u16 / f32 AS u16_f32, u16 / (f32 + FLOAT32(1)) AS u16_f32_plus_1, u16 / f64 AS u16_f64, u16 / (f64 + FLOAT64(1)) AS u16_f64_plus_1 FROM modified_FunctionDiv_FunctionDiv_stream INTO CHECKSUM"
  "test_name": "function/arithmetical/FunctionDiv.test"
- "query": "SELECT u32 / i8 AS u32_i8, u32 / (i8 + INT8(1)) AS u32_i8_plus_1, u32 / i16 AS u32_i16, u32 / (i16 + INT16(1)) AS u32_i16_plus_1, u32 / i32 AS u32_i32, u32 / (i32 + INT32(1)) AS u32_i32_plus_1, u32 / i64 AS u32_i64, u32 / (i64 + INT64(1)) AS u32_i64_plus_1, u32 / u8 AS u32_u8, u32 / (u8 + UINT8(1)) AS u32_u8_plus_1, u32 / u16 AS u32_u16, u32 / (u16 + UINT16(1)) AS u32_u16_plus_1, u32 / u32 AS u32_u32, u32 / (u32 + UINT32(1)) AS u32_u32_plus_1, u32 / u64 AS u32_u64, u32 / (u64 + UINT64(1)) AS u32_u64_plus_1, u32 / f32 AS u32_f32, u32 / (f32 + FLOAT32(1)) AS u32_f32_plus_1, u32 / f64 AS u32_f64, u32 / (f64 + FLOAT64(1)) AS u32_f64_plus_1 FROM modified_FunctionDiv_FunctionDiv_stream INTO CHECKSUM"
  "test_name": "function/arithmetical/FunctionDiv.test"
- "query": "SELECT u64 / i8 AS u64_i8, u64 / (i8 + INT8(1)) AS u64_i8_plus_1, u64 / i16 AS u64_i16, u64 / (i16 + INT16(1)) AS u64_i16_plus_1, u64 / i32 AS u64_i32, u64 / (i32 + INT32(1)) AS u64_i32_plus_1, u64 / i64 AS u64_i64, u64 / (i64 + INT64(1)) AS u64_i64_plus_1, u64 / u8 AS u64_u8, u64 / (u8 + UINT8(1)) AS u64_u8_plus_1, u64 / u16 AS u64_u16, u64 / (u16 + UINT16(1)) AS u64_u16_plus_1, u64 / u32 AS u64_u32, u64 / (u32 + UINT32(1)) AS u64_u32_plus_1, u64 / u64 AS u64_u64, u64 / (u64 + UINT64(1)) AS u64_u64_plus_1, u64 / f32 AS u64_f32, u64 / (f32 + FLOAT32(1)) AS u64_f32_plus_1, u64 / f64 AS u64_f64, u64 / (f64 + FLOAT64(1)) AS u64_f64_plus_1 FROM modified_FunctionDiv_FunctionDiv_stream INTO CHECKSUM"
  "test_name": "function/arithmetical/FunctionDiv.test"
- "query": "SELECT f32 / i8 AS f32_i8, f32 / (i8 + INT8(1)) AS f32_i8_plus_1, f32 / i16 AS f32_i16, f32 / (i16 + INT16(1)) AS f32_i16_plus_1, f32 / i32 AS f32_i32, f32 / (i32 + INT32(1)) AS f32_i32_plus_1, f32 / i64 AS f32_i64, f32 / (i64 + INT64(1)) AS f32_i64_plus_1, f32 / u8 AS f32_u8, f32 / (u8 + UINT8(1)) AS f32_u8_plus_1, f32 / u16 AS f32_u16, f32 / (u16 + UINT16(1)) AS f32_u16_plus_1, f32 / u32 AS f32_u32, f32 / (u32 + UINT32(1)) AS f32_u32_plus_1, f32 / u64 AS f32_u64, f32 / (u64 + UINT64(1)) AS f32_u64_plus_1, f32 / f32 AS f32_f32, f32 / (f32 + FLOAT32(1)) AS f32_f32_plus_1, f32 / f64 AS f32_f64, f32 / (f64 + FLOAT64(1)) AS f32_f64_plus_1 FROM modified_FunctionDiv_FunctionDiv_stream INTO CHECKSUM"
  "test_name": "function/arithmetical/FunctionDiv.test"
- "query": "SELECT f64 / i8 AS f64_i8, f64 / (i8 + INT8(1)) AS f64_i8_plus_1, f64 / i16 AS f64_i16, f64 / (i16 + INT16(1)) AS f64_i16_plus_1, f64 / i32 AS f64_i32, f64 / (i32 + INT32(1)) AS f64_i32_plus_1, f64 / i64 AS f64_i64, f64 / (i64 + INT64(1)) AS f64_i64_plus_1, f64 / u8 AS f64_u8, f64 / (u8 + UINT8(1)) AS f64_u8_plus_1, f64 / u16 AS f64_u16, f64 / (u16 + UINT16(1)) AS f64_u16_plus_1, f64 / u32 AS f64_u32, f64 / (u32 + UINT32(1)) AS f64_u32_plus_1, f64 / u64 AS f64_u64, f64 / (u64 + UINT64(1)) AS f64_u64_plus_1, f64 / f32 AS f64_f32, f64 / (f32 + FLOAT32(1)) AS f64_f32_plus_1, f64 / f64 AS f64_f64, f64 / (f64 + FLOAT64(1)) AS f64_f64_plus_1 FROM modified_FunctionDiv_FunctionDiv_stream INTO CHECKSUM"
  "test_name": "function/arithmetical/FunctionDiv.test"
- "query": "SELECT start, end, SUM(cpu) AS totalCpu, jobId FROM ClusterMonitoring_monitoringLightsaber WHERE eventType == INT16(3) GROUP BY jobId WINDOW SLIDING(creationTS, SIZE 60 SEC, ADVANCE BY 1 SEC) INTO CHECKSUM"
  "test_name": "milestone/ClusterMonitoring.test"
- "query": "SELECT * FROM DEBS_solarPanels INTO CHECKSUM"
  "test_name": "milestone/DEBS.test"
- "query": "SELECT * FROM DEBS_consumers WHERE consumedPower >= FLOAT64(400) INTO CHECKSUM"
  "test_name": "milestone/DEBS.test"
- "query": "SELECT * FROM DEBS_consumers WHERE consumedPower >= FLOAT64(400) AND sectorId = INT32(1) INTO CHECKSUM"
  "test_name": "milestone/DEBS.test"
- "query": "SELECT * FROM DEBS_consumers WHERE consumedPower >= FLOAT64(1) AND consumedPower < FLOAT64(61) INTO CHECKSUM"
  "test_name": "milestone/DEBS.test"
- "query": "SELECT consumedPower / FLOAT64(1000) AS consumedPower FROM DEBS_consumers INTO CHECKSUM"
  "test_name": "milestone/DEBS.test"
- "query": "SELECT groupId, SUM(producedPower) AS producedPower FROM DEBS_solarPanels GROUP BY groupId WINDOW TUMBLING(timestamp, SIZE 1 HOUR) INTO CHECKSUM"
  "test_name": "milestone/DEBS.test"
- "query": "SELECT groupId, SUM(producedPower) AS producedPower FROM DEBS_solarPanels GROUP BY groupId WINDOW SLIDING(timestamp, SIZE 1 HOUR, ADVANCE BY 10 MINUTES) INTO CHECKSUM"
  "test_name": "milestone/DEBS.test"
- "query": "SELECT start, end, vehicle, highway, direction, positionDiv5280, COUNT(speed) AS cntSpeed FROM (SELECT creationTS, vehicle, highway, direction, position / INT32(5280) AS positionDiv5280, speed FROM LinearRoadBenchmark_lrb) GROUP BY (vehicle, highway, direction, positionDiv5280) WINDOW SLIDING(creationTS, SIZE 30 SEC, ADVANCE BY 1 SEC) INTO CHECKSUM"
  "test_name": "milestone/LinearRoadBenchmark.test"
- "query": "SELECT price * FLOAT64(89) / FLOAT64(100) AS price FROM Nexmark_bid INTO CHECKSUM"
  "test_name": "milestone/Nexmark.test"
- "query": "SELECT * FROM Nexmark_bid WHERE auctionId % INT32(123) = INT32(0) INTO CHECKSUM"
  "test_name": "milestone/Nexmark.test"
- "query": "SELECT start, end, start, end, auctionId, num, start, end, max_tmp FROM (SELECT auctionId, COUNT(auctionId) AS num, start, end FROM Nexmark_bid GROUP BY auctionId WINDOW SLIDING(timestamp, SIZE 10 SEC, ADVANCE BY 2 SEC)) INNER JOIN (SELECT auctionId, MAX(num_ids) AS max_tmp, start, end FROM (SELECT auctionId, COUNT(auctionId) AS num_ids, start FROM Nexmark_bid GROUP BY auctionId WINDOW SLIDING(timestamp, SIZE 10 SEC, ADVANCE BY 2 SEC)) WINDOW TUMBLING(start, SIZE 2 SEC)) ON num >= max_tmp WINDOW TUMBLING(start, SIZE 2 SEC) INTO CHECKSUM"
  "test_name": "milestone/Nexmark.test"
- "query": "SELECT start, end, timestamp, auctionId, bidder, datetime, price, timestamp, id, initialbid, reserve, expires, seller, category FROM (SELECT * FROM Nexmark_bid) INNER JOIN (SELECT * FROM Nexmark_auction) ON auctionId = id WINDOW TUMBLING (timestamp, size 10 sec) INTO CHECKSUM"
  "test_name": "milestone/Nexmark.test"
- "query": "SELECT campaign_id, SUM(user_id) AS sum_user_id FROM YahooStreamingBenchmark_ysb10k WHERE event_type < UINT64(1) GROUP BY campaign_id WINDOW TUMBLING(current_ms, SIZE 30 SEC) INTO CHECKSUM"
  "test_name": "milestone/YahooStreamingBenchmark.test"
- "query": "SELECT field_1 FROM TwoSources_sixTuples INTO CHECKSUM"
  "test_name": "sources/TESTDATACanNotAppearInTestName.test"
- "query": "SELECT field_1 FROM TwoSourcesOneEmtpy_oneTuple INTO CHECKSUM"
  "test_name": "buffersize/TwoSourcesOneEmtpy.test"
- "query": "SELECT i8 + i8 AS i8_i8, i8 + i8 + INT8(1) AS i8_i8_plus_1, i8 + i16 AS i8_i16, i8 + i16 + INT16(1) AS i8_i16_plus_1, i8 + i32 AS i8_i32, i8 + i32 + INT32(1) AS i8_i32_plus_1, i8 + i64 AS i8_i64, i8 + i64 + INT32(1) AS i8_i64_plus_1, i8 + u8  AS i8_u8, i8 + u8  + UINT8(1) AS i8_u8_plus_1, i8 + u16 AS i8_u16, i8 + u16 + UINT16(1) AS i8_u16_plus_1, i8 + u32 AS i8_u32, i8 + u32 + UINT32(1) AS i8_u32_plus_1, i8 + u64 AS i8_u64, i8 + u64 + UINT64(1) AS i8_u64_plus_1, i8 + f32 AS i8_f32, i8 + f32 + FLOAT32(1) AS i8_f32_plus_1, i8 + f64 AS i8_f64, i8 + f64 + FLOAT64(1) AS i8_f64_plus_1 FROM FunctionAdd_stream INTO CHECKSUM"
  "test_name": "function/arithmetical/FunctionAdd.test"
- "query": "SELECT i16 + i8 AS i16_i8, i16 + i8 + INT8(1) AS i16_i8_plus_1, i16 + i16 AS i16_i16, i16 + i16 + INT16(1) AS i16_i16_plus_1, i16 + i32 AS i16_i32, i16 + i32 + INT32(1) AS i16_i32_plus_1, i16 + i64 AS i16_i64, i16 + i64 + INT64(1) AS i16_i64_plus_1, i16 + u8 AS i16_u8, i16 + u8 + UINT8(1) AS i16_u8_plus_1, u16 + i16 AS i16_u16, u16 + i16 + UINT16(1) AS i16_u16_plus_1, i16 + u32 AS i16_u32, i16 + u32 + UINT32(1) AS i16_u32_plus_1, i16 + u64 AS i16_u64, i16 + u64 + UINT64(1) AS i16_u64_plus_1, i16 + f32 AS i16_f32, i16 + f32 + FLOAT32(1) AS i16_f32_plus_1, i16 + f64 AS i16_f64, i16 + f64 + FLOAT64(1) AS i16_f64_plus_1 FROM FunctionAdd_stream INTO CHECKSUM"
  "test_name": "function/arithmetical/FunctionAdd.test"
- "query": "SELECT i32 + i8 AS i32_i8, i32 + i8 + INT8(1) AS i32_i8_plus_1, i32 + i16 AS i32_i16, i32 + i16 + INT16(1) AS i32_i16_plus_1, i32 + i32 AS i32_i32, i32 + i32 + INT32(1) AS i32_i32_plus_1, i32 + i64 AS i32_i64, i32 + i64 + INT64(1) AS i32_i64_plus_1, i32 + u8 AS i32_u8, i32 + u8 + UINT8(1) AS i32_u8_plus_1, i32 + u16 AS i32_u16, i32 + u16 + UINT16(1) AS i32_u16_plus_1, i32 + u32 AS i32_u32, i32 + u32 + UINT32(1) AS i32_u32_plus_1, i32 + u64 AS i32_u64, i32 + u64 + UINT64(1) AS i32_u64_plus_1, i32 + f32 AS i32_f32, i32 + f32 + FLOAT32(1) AS i32_f32_plus_1, i32 + f64 AS i32_f64, i32 + f64 + FLOAT64(1) AS i32_f64_plus_1 FROM FunctionAdd_stream INTO CHECKSUM"
  "test_name": "function/arithmetical/FunctionAdd.test"
- "query": "SELECT i64 + i8 AS i64_i8, i64 + i8 + INT8(1) AS i64_i8_plus_1, i64 + i16 AS i64_i16, i64 + i16 + INT16(1) AS i64_i16_plus_1, i64 + i32 AS i64_i32, i64 + i32 + INT32(1) AS i64_i32_plus_1, i64 + i64 AS i64_i64, i64 + i64 + INT64(1) AS i64_i64_plus_1, i64 + u8 AS i64_u8, i64 + u8 + UINT8(1) AS i64_u8_plus_1, i64 + u16 AS i64_u16, i64 + u16 + UINT16(1) AS i64_u16_plus_1, i64 + u32 AS i64_u32, i64 + u32 + UINT32(1) AS i64_u32_plus_1, i64 + u64 AS i64_u64, i64 + u64 + UINT64(1) AS i64_u64_plus_1, i64 + f32 AS i64_f32, i64 + f32 + FLOAT32(1) AS i64_f32_plus_1, i64 + f64 AS i64_f64, i64 + f64 + FLOAT64(1) AS i64_f64_plus_1 FROM FunctionAdd_stream INTO CHECKSUM"
  "test_name": "function/arithmetical/FunctionAdd.test"
- "query": "SELECT i8 / i8 AS i8_i8, i8 / (i8 + INT8(1)) AS i8_i8_plus_1, i8 / i16 AS i8_i16, i8 / (i16 + INT16(1)) AS i8_i16_plus_1, i8 / i32 AS i8_i32, i8 / (i32 + INT32(1)) AS i8_i32_plus_1, i8 / i64 AS i8_i64, i8 / (i64 + INT64(1)) AS i8_i64_plus_1, i8 / u8 AS i8_u8, i8 / (u8 + UINT8(1)) AS i8_u8_plus_1, i8 / u16 AS i8_u16, i8 / (u16 + UINT16(1)) AS i8_u16_plus_1, i8 / u32 AS i8_u32, i8 / (u32 + UINT32(1)) AS i8_u32_plus_1, i8 / u64 AS i8_u64, i8 / (u64 + UINT64(1)) AS i8_u64_plus_1, i8 / f32 AS i8_f32, i8 / (f32 + FLOAT32(1)) AS i8_f32_plus_1, i8 / f64 AS i8_f64, i8 / (f64 + FLOAT64(1)) AS i8_f64_plus_1 FROM FunctionDiv_stream INTO CHECKSUM"
  "test_name": "function/arithmetical/FunctionDiv.test"
- "query": "SELECT i16 / i8 AS i16_i8, i16 / (i8 + INT8(1)) AS i16_i8_plus_1, i16 / i16 AS i16_i16, i16 / (i16 + INT16(1)) AS i16_i16_plus_1, i16 / i32 AS i16_i32, i16 / (i32 + INT32(1)) AS i16_i32_plus_1, i16 / i64 AS i16_i64, i16 / (i64 + INT64(1)) AS i16_i64_plus_1, i16 / u8 AS i16_u8, i16 / (u8 + UINT8(1)) AS i16_u8_plus_1, i16 / u16 AS i16_u16, i16 / (u16 + UINT16(1)) AS i16_u16_plus_1, i16 / u32 AS i16_u32, i16 / (u32 + UINT32(1)) AS i16_u32_plus_1, i16 / u64 AS i16_u64, i16 / (u64 + UINT64(1)) AS i16_u64_plus_1, i16 / f32 AS i16_f32, i16 / (f32 + FLOAT32(1)) AS i16_f32_plus_1, i16 / f64 AS i16_f64, i16 / (f64 + FLOAT64(1)) AS i16_f64_plus_1 FROM FunctionDiv_stream INTO CHECKSUM"
  "test_name": "function/arithmetical/FunctionDiv.test"
- "query": "SELECT i32 / i8 AS i32_i8, i32 / (i8 + INT8(1)) AS i32_i8_plus_1, i32 / i16 AS i32_i16, i32 / (i16 + INT16(1)) AS i32_i16_plus_1, i32 / i32 AS i32_i32, i32 / (i32 + INT32(1)) AS i32_i32_plus_1, i32 / i64 AS i32_i64, i32 / (i64 + INT64(1)) AS i32_i64_plus_1, i32 / u8 AS i32_u8, i32 / (u8 + UINT8(1)) AS i32_u8_plus_1, i32 / u16 AS i32_u16, i32 / (u16 + UINT16(1)) AS i32_u16_plus_1, i32 / u32 AS i32_u32, i32 / (u32 + UINT32(1)) AS i32_u32_plus_1, i32 / u64 AS i32_u64, i32 / (u64 + UINT64(1)) AS i32_u64_plus_1, i32 / f32 AS i32_f32, i32 / (f32 + FLOAT32(1)) AS i32_f32_plus_1, i32 / f64 AS i32_f64, i32 / (f64 + FLOAT64(1)) AS i32_f64_plus_1 FROM FunctionDiv_stream INTO CHECKSUM"
  "test_name": "function/arithmetical/FunctionDiv.test"
- "query": "SELECT i64 / i8 AS i64_i8, i64 / (i8 + INT8(1)) AS i64_i8_plus_1, i64 / i16 AS i64_i16, i64 / (i16 + INT16(1)) AS i64_i16_plus_1, i64 / i32 AS i64_i32, i64 / (i32 + INT32(1)) AS i64_i32_plus_1, i64 / i64 AS i64_i64, i64 / (i64 + INT64(1)) AS i64_i64_plus_1, i64 / u8 AS i64_u8, i64 / (u8 + UINT8(1)) AS i64_u8_plus_1, i64 / u16 AS i64_u16, i64 / (u16 + UINT16(1)) AS i64_u16_plus_1, i64 / u32 AS i64_u32, i64 / (u32 + UINT32(1)) AS i64_u32_plus_1, i64 / u64 AS i64_u64, i64 / (u64 + UINT64(1)) AS i64_u64_plus_1, i64 / f32 AS i64_f32, i64 / (f32 + FLOAT32(1)) AS i64_f32_plus_1, i64 / f64 AS i64_f64, i64 / (f64 + FLOAT64(1)) AS i64_f64_plus_1 FROM FunctionDiv_stream INTO CHECKSUM"
  "test_name": "function/arithmetical/FunctionDiv.test"
- "query": "SELECT u8 / i8 AS u8_i8, u8 / (i8 + INT8(1)) AS u8_i8_plus_1, u8 / i16 AS u8_i16, u8 / (i16 + INT16(1)) AS u8_i16_plus_1, u8 / i32 AS u8_i32, u8 / (i32 + INT32(1)) AS u8_i32_plus_1, u8 / i64 AS u8_i64, u8 / (i64 + INT64(1)) AS u8_i64_plus_1, u8 / u8 AS u8_u8, u8 / (u8 + UINT8(1)) AS u8_u8_plus_1, u8 / u16 AS u8_u16, u8 / (u16 + UINT16(1)) AS u8_u16_plus_1, u8 / u32 AS u8_u32, u8 / (u32 + UINT32(1)) AS u8_u32_plus_1, u8 / u64 AS u8_u64, u8 / (u64 + UINT64(1)) AS u8_u64_plus_1, u8 / f32 AS u8_f32, u8 / (f32 + FLOAT32(1)) AS u8_f32_plus_1, u8 / f64 AS u8_f64, u8 / (f64 + FLOAT64(1)) AS u8_f64_plus_1 FROM FunctionDiv_stream INTO CHECKSUM"
  "test_name": "function/arithmetical/FunctionDiv.test"
- "query": "SELECT u16 / i8 AS u16_i8, u16 / (i8 + INT8(1)) AS u16_i8_plus_1, u16 / i16 AS u16_i16, u16 / (i16 + INT16(1)) AS u16_i16_plus_1, u16 / i32 AS u16_i32, u16 / (i32 + INT32(1)) AS u16_i32_plus_1, u16 / i64 AS u16_i64, u16 / (i64 + INT64(1)) AS u16_i64_plus_1, u16 / u8 AS u16_u8, u16 / (u8 + UINT8(1)) AS u16_u8_plus_1, u16 / u16 AS u16_u16, u16 / (u16 + UINT16(1)) AS u16_u16_plus_1, u16 / u32 AS u16_u32, u16 / (u32 + UINT32(1)) AS u16_u32_plus_1, u16 / u64 AS u16_u64, u16 / (u64 + UINT64(1)) AS u16_u64_plus_1, u16 / f32 AS u16_f32, u16 / (f32 + FLOAT32(1)) AS u16_f32_plus_1, u16 / f64 AS u16_f64, u16 / (f64 + FLOAT64(1)) AS u16_f64_plus_1 FROM FunctionDiv_stream INTO CHECKSUM"
  "test_name": "function/arithmetical/FunctionDiv.test"
- "query": "SELECT u32 / i8 AS u32_i8, u32 / (i8 + INT8(1)) AS u32_i8_plus_1, u32 / i16 AS u32_i16, u32 / (i16 + INT16(1)) AS u32_i16_plus_1, u32 / i32 AS u32_i32, u32 / (i32 + INT32(1)) AS u32_i32_plus_1, u32 / i64 AS u32_i64, u32 / (i64 + INT64(1)) AS u32_i64_plus_1, u32 / u8 AS u32_u8, u32 / (u8 + UINT8(1)) AS u32_u8_plus_1, u32 / u16 AS u32_u16, u32 / (u16 + UINT16(1)) AS u32_u16_plus_1, u32 / u32 AS u32_u32, u32 / (u32 + UINT32(1)) AS u32_u32_plus_1, u32 / u64 AS u32_u64, u32 / (u64 + UINT64(1)) AS u32_u64_plus_1, u32 / f32 AS u32_f32, u32 / (f32 + FLOAT32(1)) AS u32_f32_plus_1, u32 / f64 AS u32_f64, u32 / (f64 + FLOAT64(1)) AS u32_f64_plus_1 FROM FunctionDiv_stream INTO CHECKSUM"
  "test_name": "function/arithmetical/FunctionDiv.test"
- "query": "SELECT u64 / i8 AS u64_i8, u64 / (i8 + INT8(1)) AS u64_i8_plus_1, u64 / i16 AS u64_i16, u64 / (i16 + INT16(1)) AS u64_i16_plus_1, u64 / i32 AS u64_i32, u64 / (i32 + INT32(1)) AS u64_i32_plus_1, u64 / i64 AS u64_i64, u64 / (i64 + INT64(1)) AS u64_i64_plus_1, u64 / u8 AS u64_u8, u64 / (u8 + UINT8(1)) AS u64_u8_plus_1, u64 / u16 AS u64_u16, u64 / (u16 + UINT16(1)) AS u64_u16_plus_1, u64 / u32 AS u64_u32, u64 / (u32 + UINT32(1)) AS u64_u32_plus_1, u64 / u64 AS u64_u64, u64 / (u64 + UINT64(1)) AS u64_u64_plus_1, u64 / f32 AS u64_f32, u64 / (f32 + FLOAT32(1)) AS u64_f32_plus_1, u64 / f64 AS u64_f64, u64 / (f64 + FLOAT64(1)) AS u64_f64_plus_1 FROM FunctionDiv_stream INTO CHECKSUM"
  "test_name": "function/arithmetical/FunctionDiv.test"
- "query": "SELECT f32 / i8 AS f32_i8, f32 / (i8 + INT8(1)) AS f32_i8_plus_1, f32 / i16 AS f32_i16, f32 / (i16 + INT16(1)) AS f32_i16_plus_1, f32 / i32 AS f32_i32, f32 / (i32 + INT32(1)) AS f32_i32_plus_1, f32 / i64 AS f32_i64, f32 / (i64 + INT64(1)) AS f32_i64_plus_1, f32 / u8 AS f32_u8, f32 / (u8 + UINT8(1)) AS f32_u8_plus_1, f32 / u16 AS f32_u16, f32 / (u16 + UINT16(1)) AS f32_u16_plus_1, f32 / u32 AS f32_u32, f32 / (u32 + UINT32(1)) AS f32_u32_plus_1, f32 / u64 AS f32_u64, f32 / (u64 + UINT64(1)) AS f32_u64_plus_1, f32 / f32 AS f32_f32, f32 / (f32 + FLOAT32(1)) AS f32_f32_plus_1, f32 / f64 AS f32_f64, f32 / (f64 + FLOAT64(1)) AS f32_f64_plus_1 FROM FunctionDiv_stream INTO CHECKSUM"
  "test_name": "function/arithmetical/FunctionDiv.test"
- "query": "SELECT f64 / i8 AS f64_i8, f64 / (i8 + INT8(1)) AS f64_i8_plus_1, f64 / i16 AS f64_i16, f64 / (i16 + INT16(1)) AS f64_i16_plus_1, f64 / i32 AS f64_i32, f64 / (i32 + INT32(1)) AS f64_i32_plus_1, f64 / i64 AS f64_i64, f64 / (i64 + INT64(1)) AS f64_i64_plus_1, f64 / u8 AS f64_u8, f64 / (u8 + UINT8(1)) AS f64_u8_plus_1, f64 / u16 AS f64_u16, f64 / (u16 + UINT16(1)) AS f64_u16_plus_1, f64 / u32 AS f64_u32, f64 / (u32 + UINT32(1)) AS f64_u32_plus_1, f64 / u64 AS f64_u64, f64 / (u64 + UINT64(1)) AS f64_u64_plus_1, f64 / f32 AS f64_f32, f64 / (f32 + FLOAT32(1)) AS f64_f32_plus_1, f64 / f64 AS f64_f64, f64 / (f64 + FLOAT64(1)) AS f64_f64_plus_1 FROM FunctionDiv_stream INTO CHECKSUM"
  "test_name": "function/arithmetical/FunctionDiv.test"
- "query": "SELECT i8 % i8 AS i8_i8, i8 % (i8 + INT8(1)) AS i8_i8_plus_1, i8 % i16 AS i8_i16, i8 % (i16 + INT16(1)) AS i8_i16_plus_1, i8 % i32 AS i8_i32, i8 % (i32 + INT32(1)) AS i8_i32_plus_1, i8 % i64 AS i8_i64, i8 % (i64 + INT64(1)) AS i8_i64_plus_1, i8 % u8 AS i8_u8, i8 % (u8 + UINT8(1)) AS i8_u8_plus_1, i8 % u16 AS i8_u16, i8 % (u16 + UINT16(1)) AS i8_u16_plus_1, i8 % u32 AS i8_u32, i8 % (u32 + UINT32(1)) AS i8_u32_plus_1, i8 % u64 AS i8_u64, i8 % (u64 + UINT64(1)) AS i8_u64_plus_1 FROM FunctionModulo_stream INTO CHECKSUM"
  "test_name": "function/arithmetical/FunctionModulo.test"
- "query": "SELECT i16 % i8 AS i16_i8, i16 % (i8 + INT8(1)) AS i16_i8_plus_1, i16 % i16 AS i16_i16, i16 % (i16 + INT16(1)) AS i16_i16_plus_1, i16 % i32 AS i16_i32, i16 % (i32 + INT32(1)) AS i16_i32_plus_1, i16 % i64 AS i16_i64, i16 % (i64 + INT64(1)) AS i16_i64_plus_1, i16 % u8 AS i16_u8, i16 % (u8 + UINT8(1)) AS i16_u8_plus_1, i16 % u16 AS i16_u16, i16 % (u16 + UINT16(1)) AS i16_u16_plus_1, i16 % u32 AS i16_u32, i16 % (u32 + UINT32(1)) AS i16_u32_plus_1, i16 % u64 AS i16_u64, i16 % (u64 + UINT64(1)) AS i16_u64_plus_1 FROM FunctionModulo_stream INTO CHECKSUM"
  "test_name": "function/arithmetical/FunctionModulo.test"
- "query": "SELECT i32 % i8 AS i32_i8, i32 % (i8 + INT8(1)) AS i32_i8_plus_1, i32 % i16 AS i32_i16, i32 % (i16 + INT16(1)) AS i32_i16_plus_1, i32 % i32 AS i32_i32, i32 % (i32 + INT32(1)) AS i32_i32_plus_1, i32 % i64 AS i32_i64, i32 % (i64 + INT64(1)) AS i32_i64_plus_1, i32 % u8 AS i32_u8, i32 % (u8 + UINT8(1)) AS i32_u8_plus_1, i32 % u16 AS i32_u16, i32 % (u16 + UINT16(1)) AS i32_u16_plus_1, i32 % u32 AS i32_u32, i32 % (u32 + UINT32(1)) AS i32_u32_plus_1, i32 % u64 AS i32_u64, i32 % (u64 + UINT64(1)) AS i32_u64_plus_1 FROM FunctionModulo_stream INTO CHECKSUM"
  "test_name": "function/arithmetical/FunctionModulo.test"
- "query": "SELECT i64 % i8 AS i64_i8, i64 % (i8 + INT8(1)) AS i64_i8_plus_1, i64 % i16 AS i64_i16, i64 % (i16 + INT16(1)) AS i64_i16_plus_1, i64 % i32 AS i64_i32, i64 % (i32 + INT32(1)) AS i64_i32_plus_1, i64 % i64 AS i64_i64, i64 % (i64 + INT64(1)) AS i64_i64_plus_1, i64 % u8 AS i64_u8, i64 % (u8 + UINT8(1)) AS i64_u8_plus_1, i64 % u16 AS i64_u16, i64 % (u16 + UINT16(1)) AS i64_u16_plus_1, i64 % u32 AS i64_u32, i64 % (u32 + UINT32(1)) AS i64_u32_plus_1, i64 % u64 AS i64_u64, i64 % (u64 + UINT64(1)) AS i64_u64_plus_1 FROM FunctionModulo_stream INTO CHECKSUM"
  "test_name": "function/arithmetical/FunctionModulo.test"
- "query": "SELECT u8 % i8 AS u8_i8, u8 % (i8 + INT8(1)) AS u8_i8_plus_1, u8 % i16 AS u8_i16, u8 % (i16 + INT16(1)) AS u8_i16_plus_1, u8 % i32 AS u8_i32, u8 % (i32 + INT32(1)) AS u8_i32_plus_1, u8 % i64 AS u8_i64, u8 % (i64 + INT64(1)) AS u8_i64_plus_1, u8 % u8 AS u8_u8, u8 % (u8 + UINT8(1)) AS u8_u8_plus_1, u8 % u16 AS u8_u16, u8 % (u16 + UINT16(1)) AS u8_u16_plus_1, u8 % u32 AS u8_u32, u8 % (u32 + UINT32(1)) AS u8_u32_plus_1, u8 % u64 AS u8_u64, u8 % (u64 + UINT64(1)) AS u8_u64_plus_1 FROM FunctionModulo_stream INTO CHECKSUM"
  "test_name": "function/arithmetical/FunctionModulo.test"
- "query": "SELECT u16 % i8 AS u16_i8, u16 % (i8 + INT8(1)) AS u16_i8_plus_1, u16 % i16 AS u16_i16, u16 % (i16 + INT16(1)) AS u16_i16_plus_1, u16 % i32 AS u16_i32, u16 % (i32 + INT32(1)) AS u16_i32_plus_1, u16 % i64 AS u16_i64, u16 % (i64 + INT64(1)) AS u16_i64_plus_1, u16 % u8 AS u16_u8, u16 % (u8 + UINT8(1)) AS u16_u8_plus_1, u16 % u16 AS u16_u16, u16 % (u16 + UINT16(1)) AS u16_u16_plus_1, u16 % u32 AS u16_u32, u16 % (u32 + UINT32(1)) AS u16_u32_plus_1, u16 % u64 AS u16_u64, u16 % (u64 + UINT64(1)) AS u16_u64_plus_1 FROM FunctionModulo_stream INTO CHECKSUM"
  "test_name": "function/arithmetical/FunctionModulo.test"
- "query": "SELECT u32 % i8 AS u32_i8, u32 % (i8 + INT8(1)) AS u32_i8_plus_1, u32 % i16 AS u32_i16, u32 % (i16 + INT16(1)) AS u32_i16_plus_1, u32 % i32 AS u32_i32, u32 % (i32 + INT32(1)) AS u32_i32_plus_1, u32 % i64 AS u32_i64, u32 % (i64 + INT64(1)) AS u32_i64_plus_1, u32 % u8 AS u32_u8, u32 % (u8 + UINT8(1)) AS u32_u8_plus_1, u32 % u16 AS u32_u16, u32 % (u16 + UINT16(1)) AS u32_u16_plus_1, u32 % u32 AS u32_u32, u32 % (u32 + UINT32(1)) AS u32_u32_plus_1, u32 % u64 AS u32_u64, u32 % (u64 + UINT64(1)) AS u32_u64_plus_1 FROM FunctionModulo_stream INTO CHECKSUM"
  "test_name": "function/arithmetical/FunctionModulo.test"
- "query": "SELECT u64 % i8 AS u64_i8, u64 % (i8 + INT8(1)) AS u64_i8_plus_1, u64 % i16 AS u64_i16, u64 % (i16 + INT16(1)) AS u64_i16_plus_1, u64 % i32 AS u64_i32, u64 % (i32 + INT32(1)) AS u64_i32_plus_1, u64 % i64 AS u64_i64, u64 % (i64 + INT64(1)) AS u64_i64_plus_1, u64 % u8 AS u64_u8, u64 % (u8 + UINT8(1)) AS u64_u8_plus_1, u64 % u16 AS u64_u16, u64 % (u16 + UINT16(1)) AS u64_u16_plus_1, u64 % u32 AS u64_u32, u64 % (u32 + UINT32(1)) AS u64_u32_plus_1, u64 % u64 AS u64_u64, u64 % (u64 + UINT64(1)) AS u64_u64_plus_1 FROM FunctionModulo_stream INTO CHECKSUM"
  "test_name": "function/arithmetical/FunctionModulo.test"
- "query": "SELECT i8 * i8 AS i8_i8, i8 * (i8 + INT32(1)) AS i8_i8_plus_1, i8 * i16 AS i8_i16, i8 * (i16 + INT32(1)) AS i8_i16_plus_1, i8 * i32 AS i8_i32, i8 * (i32 + INT32(1)) AS i8_i32_plus_1, i8 * i64 AS i8_i64, i8 * (i64 + INT32(1)) AS i8_i64_plus_1, i8 * u8 AS i8_u8, i8 * (u8 + UINT8(1)) AS i8_u8_plus_1, i8 * u16 AS i8_u16, i8 * (u16 + UINT16(1)) AS i8_u16_plus_1, i8 * u32 AS i8_u32, i8 * (u32 + UINT32(1)) AS i8_u32_plus_1, i8 * u64 AS i8_u64, i8 * (u64 + UINT64(1)) AS i8_u64_plus_1, i8 * f32 AS i8_f32, i8 * (f32 + FLOAT32(1)) AS i8_f32_plus_1, i8 * f64 AS i8_f64, i8 * (f64 + FLOAT64(1)) AS i8_f64_plus_1 FROM FunctionMul_stream INTO CHECKSUM"
  "test_name": "function/arithmetical/FunctionMul.test"
- "query": "SELECT i16 * i8 AS i16_i8, i16 * (i8 + INT8(1)) AS i16_i8_plus_1, i16 * i16 AS i16_i16, i16 * (i16 + INT16(1)) AS i16_i16_plus_1, i16 * i32 AS i16_i32, i16 * (i32 + INT32(1)) AS i16_i32_plus_1, i16 * i64 AS i16_i64, i16 * (i64 + INT64(1)) AS i16_i64_plus_1, i16 * u8 AS i16_u8, i16 * (u8 + UINT8(1)) AS i16_u8_plus_1, i16 * u16 AS i16_u16, i16 * (u16 + UINT16(1)) AS i16_u16_plus_1, i16 * u32 AS i16_u32, i16 * (u32 + UINT32(1)) AS i16_u32_plus_1, i16 * u64 AS i16_u64, i16 * (u64 + UINT64(1)) AS i16_u64_plus_1, i16 * f32 AS i16_f32, i16 * (f32 + FLOAT32(1)) AS i16_f32_plus_1, i16 * f64 AS i16_f64, i16 * (f64 + FLOAT64(1)) AS i16_f64_plus_1 FROM FunctionMul_stream INTO CHECKSUM"
  "test_name": "function/arithmetical/FunctionMul.test"
- "query": "SELECT i32 * i8 AS i32_i8, i32 * (i8 + INT8(1)) AS i32_i8_plus_1, i32 * i16 AS i32_i16, i32 * (i16 + INT16(1)) AS i32_i16_plus_1, i32 * i32 AS i32_i32, i32 * (i32 + INT32(1)) AS i32_i32_plus_1, i32 * i64 AS i32_i64, i32 * (i64 + INT64(1)) AS i32_i64_plus_1, i32 * u8 AS i32_u8, i32 * (u8 + UINT8(1)) AS i32_u8_plus_1, i32 * u16 AS i32_u16, i32 * (u16 + UINT16(1)) AS i32_u16_plus_1, i32 * u32 AS i32_u32, i32 * (u32 + UINT32(1)) AS i32_u32_plus_1, i32 * u64 AS i32_u64, i32 * (u64 + UINT64(1)) AS i32_u64_plus_1, i32 * f32 AS i32_f32, i32 * (f32 + FLOAT32(1)) AS i32_f32_plus_1, i32 * f64 AS i32_f64, i32 * (f64 + FLOAT64(1)) AS i32_f64_plus_1 FROM FunctionMul_stream INTO CHECKSUM"
  "test_name": "function/arithmetical/FunctionMul.test"
- "query": "SELECT i64 * i8 AS i64_i8, i64 * (i8 + INT8(1)) AS i64_i8_plus_1, i64 * i16 AS i64_i16, i64 * (i16 + INT16(1)) AS i64_i16_plus_1, i64 * i32 AS i64_i32, i64 * (i32 + INT32(1)) AS i64_i32_plus_1, i64 * i64 AS i64_i64, i64 * (i64 + INT64(1)) AS i64_i64_plus_1, i64 * u8 AS i64_u8, i64 * (u8 + UINT8(1)) AS i64_u8_plus_1, i64 * u16 AS i64_u16, i64 * (u16 + UINT16(1)) AS i64_u16_plus_1, i64 * u32 AS i64_u32, i64 * (u32 + UINT32(1)) AS i64_u32_plus_1, i64 * u64 AS i64_u64, i64 * (u64 + UINT64(1)) AS i64_u64_plus_1, i64 * f32 AS i64_f32, i64 * (f32 + FLOAT32(1)) AS i64_f32_plus_1, i64 * f64 AS i64_f64, i64 * (f64 + FLOAT64(1)) AS i64_f64_plus_1 FROM FunctionMul_stream INTO CHECKSUM"
  "test_name": "function/arithmetical/FunctionMul.test"
- "query": "SELECT i8 - i8 AS i8_i8, i8 - i8 + INT8(1) AS i8_i8_plus_1, i8 - i16 AS i8_i16, i8 - i16 + INT16(1) AS i8_i16_plus_1, i8 - i32 AS i8_i32, i8 - i32 + INT32(1) AS i8_i32_plus_1, i8 - i64 AS i8_i64, i8 - i64 + INT64(1) AS i8_i64_plus_1, i8 - u8  AS i8_u8, i8 - u8 + UINT8(1) AS i8_u8_plus_1, i8 - u16 AS i8_u16, i8 - u16 + UINT16(1) AS i8_u16_plus_1, i8 - u32 AS i8_u32, i8 - u32 + UINT32(1) AS i8_u32_plus_1, i8 - u64 AS i8_u64, i8 - u64 + UINT64(1) AS i8_u64_plus_1, i8 - f32 AS i8_f32, i8 - f32 + FLOAT32(1) AS i8_f32_plus_1, i8 - f64 AS i8_f64, i8 - f64 + FLOAT64(1) AS i8_f64_plus_1 FROM FunctionSub_stream INTO CHECKSUM"
  "test_name": "function/arithmetical/FunctionAdd.test"
- "query": "SELECT i16 - i8 AS i16_i8, i16 - i8 + INT8(1) AS i16_i8_plus_1, i16 - i16 AS i16_i16, i16 - i16 + INT16(1) AS i16_i16_plus_1, i16 - i32 AS i16_i32, i16 - i32 + INT32(1) AS i16_i32_plus_1, i16 - i64 AS i16_i64, i16 - i64 + INT64(1) AS i16_i64_plus_1, i16 - u8 AS i16_u8, i16 - u8 + UINT8(1) AS i16_u8_plus_1, u16 - i16 AS i16_u16, u16 - i16 + UINT16(1) AS i16_u16_plus_1, i16 - u32 AS i16_u32, i16 - u32 + UINT32(1) AS i16_u32_plus_1, i16 - u64 AS i16_u64, i16 - u64 + UINT32(1) AS i16_u64_plus_1, i16 - f32 AS i16_f32, i16 - f32 + FLOAT32(1) AS i16_f32_plus_1, i16 - f64 AS i16_f64, i16 - f64 + FLOAT64(1) AS i16_f64_plus_1 FROM FunctionSub_stream INTO CHECKSUM"
  "test_name": "function/arithmetical/FunctionAdd.test"
- "query": "SELECT i32 - i8 AS i32_i8, i32 - i8 + INT8(1) AS i32_i8_plus_1, i32 - i16 AS i32_i16, i32 - i16 + INT16(1) AS i32_i16_plus_1, i32 - i32 AS i32_i32, i32 - i32 + INT32(1) AS i32_i32_plus_1, i32 - i64 AS i32_i64, i32 - i64 + INT64(1) AS i32_i64_plus_1, i32 - u8 AS i32_u8, i32 - u8 + UINT8(1) AS i32_u8_plus_1, i32 - u16 AS i32_u16, i32 - u16 + UINT16(1) AS i32_u16_plus_1, i32 - u32 AS i32_u32, i32 - u32 + UINT32(1) AS i32_u32_plus_1, i32 - u64 AS i32_u64, i32 - u64 + UINT32(1) AS i32_u64_plus_1, i32 - f32 AS i32_f32, i32 - f32 + FLOAT32(1) AS i32_f32_plus_1, i32 - f64 AS i32_f64, i32 - f64 + FLOAT64(1) AS i32_f64_plus_1 FROM FunctionSub_stream INTO CHECKSUM"
  "test_name": "function/arithmetical/FunctionAdd.test"
- "query": "SELECT i64 - i8 AS i64_i8, i64 - i8 + INT8(1) AS i64_i8_plus_1, i64 - i16 AS i64_i16, i64 - i16 + INT16(1) AS i64_i16_plus_1, i64 - i32 AS i64_i32, i64 - i32 + INT32(1) AS i64_i32_plus_1, i64 - i64 AS i64_i64, i64 - i64 + INT64(1) AS i64_i64_plus_1, i64 - u8 AS i64_u8, i64 - u8 + UINT32(1) AS i64_u8_plus_1, i64 - u16 AS i64_u16, i64 - u16 + UINT32(1) AS i64_u16_plus_1, i64 - u32 AS i64_u32, i64 - u32 + UINT32(1) AS i64_u32_plus_1, i64 - u64 AS i64_u64, i64 - u64 + UINT32(1) AS i64_u64_plus_1, i64 - f32 AS i64_f32, i64 - f32 + FLOAT32(1) AS i64_f32_plus_1, i64 - f64 AS i64_f64, i64 - f64 + FLOAT64(1) AS i64_f64_plus_1 FROM FunctionSub_stream INTO CHECKSUM"
  "test_name": "function/arithmetical/FunctionAdd.test"
- "query": "SELECT u8 - i8 AS u8_i8, u8 - i8 + INT8(1) AS u8_i8_plus_1, u8 - i16 AS u8_i16, u8 - i16 + INT16(1) AS u8_i16_plus_1, u8 - i32 AS u8_i32, u8 - i32 + INT32(1) AS u8_i32_plus_1, u8 - i64 AS u8_i64, u8 - i64 + INT64(1) AS u8_i64_plus_1, u8 - u8  AS u8_u8, u8 - u8 + UINT8(1) AS u8_u8_plus_1, u8 - u16 AS u8_u16, u8 - u16 + UINT16(1) AS u8_u16_plus_1, u8 - u32 AS u8_u32, u8 - u32 + UINT32(1) AS u8_u32_plus_1, u8 - u64 AS u8_u64, u8 - u64 + UINT64(1) AS u8_u64_plus_1, u8 - f32 AS u8_f32, u8 - f32 + FLOAT32(1) AS u8_f32_plus_1, u8 - f64 AS u8_f64, u8 - f64 + FLOAT64(1) AS u8_f64_plus_1 FROM FunctionSub_stream INTO CHECKSUM"
  "test_name": "function/arithmetical/FunctionAdd.test"
- "query": "SELECT u16 - i8 AS u16_i8, u16 - i8 + INT8(1) AS u16_i8_plus_1, u16 - i16 AS u16_i16, u16 - i16 + INT16(1) AS u16_i16_plus_1, u16 - i32 AS u16_i32, u16 - i32 + INT32(1) AS u16_i32_plus_1, u16 - i64 AS u16_i64, u16 - i64 + INT64(1) AS u16_i64_plus_1, u16 - u8 AS u16_u8, u16 - u8 + UINT8(1) AS u16_u8_plus_1, u16 - i16 AS u16_u16, u16 - i16 + INT16(1) AS u16_u16_plus_1, u16 - u32 AS u16_u32, u16 - u32 + UINT32(1) AS u16_u32_plus_1, u16 - u64 AS u16_u64, u16 - u64 + UINT32(1) AS u16_u64_plus_1, u16 - f32 AS u16_f32, u16 - f32 + FLOAT32(1) AS u16_f32_plus_1, u16 - f64 AS u16_f64, u16 - f64 + FLOAT64(1) AS u16_f64_plus_1 FROM FunctionSub_stream INTO CHECKSUM"
  "test_name": "function/arithmetical/FunctionAdd.test"
- "query": "SELECT u32 - i8 AS u32_i8, u32 - i8 + INT8(1) AS u32_i8_plus_1, u32 - i16 AS u32_i16, u32 - i16 + INT16(1) AS u32_i16_plus_1, u32 - i32 AS u32_i32, u32 - i32 + INT32(1) AS u32_i32_plus_1, u32 - i64 AS u32_i64, u32 - i64 + INT64(1) AS u32_i64_plus_1, u32 - u8 AS u32_u8, u32 - u8 + UINT32(1) AS u32_u8_plus_1, u32 - u16 AS u32_u16, u32 - u16 + UINT32(1) AS u32_u16_plus_1, u32 - u32 AS u32_u32, u32 - u32 + UINT32(1) AS u32_u32_plus_1, u32 - u64 AS u32_u64, u32 - u64 + UINT32(1) AS u32_u64_plus_1, u32 - f32 AS u32_f32, u32 - f32 + FLOAT32(1) AS u32_f32_plus_1, u32 - f64 AS u32_f64, u32 - f64 + FLOAT64(1) AS u32_f64_plus_1 FROM FunctionSub_stream INTO CHECKSUM"
  "test_name": "function/arithmetical/FunctionAdd.test"
- "query": "SELECT u64 - i8 AS u64_i8, u64 - i8 + INT8(1) AS u64_i8_plus_1, u64 - i16 AS u64_i16, u64 - i16 + INT16(1) AS u64_i16_plus_1, u64 - i32 AS u64_i32, u64 - i32 + INT32(1) AS u64_i32_plus_1, u64 - i64 AS u64_i64, u64 - i64 + INT64(1) AS u64_i64_plus_1, u64 - u8 AS u64_u8, u64 - u8 + UINT32(1) AS u64_u8_plus_1, u64 - u16 AS u64_u16, u64 - u16 + UINT32(1) AS u64_u16_plus_1, u64 - u32 AS u64_u32, u64 - u32 + UINT32(1) AS u64_u32_plus_1, u64 - u64 AS u64_u64, u64 - u64 + UINT32(1) AS u64_u64_plus_1, u64 - f32 AS u64_f32, u64 - f32 + FLOAT32(1) AS u64_f32_plus_1, u64 - f64 AS u64_f64, u64 - f64 + FLOAT64(1) AS u64_f64_plus_1 FROM FunctionSub_stream INTO CHECKSUM"
  "test_name": "function/arithmetical/FunctionAdd.test"
- "query": "SELECT f32 - i8 AS f32_i8, f32 - i8 + INT8(1) AS f32_i8_plus_1, f32 - i16 AS f32_i16, f32 - i16 + INT16(1) AS f32_i16_plus_1, f32 - i32 AS f32_i32, f32 - i32 + INT32(1) AS f32_i32_plus_1, f32 - i64 AS f32_i64, f32 - i64 + INT64(1) AS f32_i64_plus_1, f32 - u8 AS f32_u8, f32 - u8 + UINT32(1) AS f32_u8_plus_1, f32 - u16 AS f32_u16, f32 - u16 + UINT32(1) AS f32_u16_plus_1, f32 - u32 AS f32_u32, f32 - u32 + UINT32(1) AS f32_u32_plus_1, f32 - u64 AS f32_u64, f32 - u64 + UINT32(1) AS f32_u64_plus_1, f32 - f32 AS f32_f32, f32 - f32 + FLOAT32(1) AS f32_f32_plus_1, f32 - f64 AS f32_f64, f32 - f64 + FLOAT64(1) AS f32_f64_plus_1 FROM FunctionSub_stream INTO CHECKSUM"
  "test_name": "function/arithmetical/FunctionAdd.test"
- "query": "SELECT f64 - i8 AS f64_i8, f64 - i8 + INT8(1) AS f64_i8_plus_1, f64 - i16 AS f64_i16, f64 - i16 + INT16(1) AS f64_i16_plus_1, f64 - i32 AS f64_i32, f64 - i32 + INT32(1) AS f64_i32_plus_1, f64 - i64 AS f64_i64, f64 - i64 + INT64(1) AS f64_i64_plus_1, f64 - u8 AS f64_u8, f64 - u8 + UINT32(1) AS f64_u8_plus_1, f64 - u16 AS f64_u16, f64 - u16 + UINT32(1) AS f64_u16_plus_1, f64 - u32 AS f64_u32, f64 - u32 + UINT32(1) AS f64_u32_plus_1, f64 - u64 AS f64_u64, f64 - u64 + UINT32(1) AS f64_u64_plus_1, f64 - f32 AS f64_f32, f64 - f32 + FLOAT32(1) AS f64_f32_plus_1, f64 - f64 AS f64_f64, f64 - f64 + FLOAT64(1) AS f64_f64_plus_1 FROM FunctionSub_stream INTO CHECKSUM"
  "test_name": "function/arithmetical/FunctionAdd.test"
- "query": "SELECT i8 > i8 AS i8_i8, i8 > i8 + INT8(1) AS i8_i8_plus_1, i8 > i16 AS i8_i16, i8 > i16 + INT16(1) AS i8_i16_plus_1, i8 > i32 AS i8_i32, i8 > i32 + INT32(1) AS i8_i32_plus_1, i8 > i64 AS i8_i64, i8 > i64 + INT64(1) AS i8_i64_plus_1, i8 > u8  AS i8_u8, i8 > u8 + UINT8(1) AS i8_u8_plus_1, i8 > u16 AS i8_u16, i8 > u16 + UINT16(1) AS i8_u16_plus_1, i8 > u32 AS i8_u32, i8 > u32 + UINT32(1) AS i8_u32_plus_1, i8 > u64 AS i8_u64, i8 > u64 + UINT64(1) AS i8_u64_plus_1, i8 > f32 AS i8_f32, i8 > f32 + FLOAT32(1) AS i8_f32_plus_1, i8 > f64 AS i8_f64, i8 > f64 + FLOAT64(1) AS i8_f64_plus_1 FROM FunctionGreater_stream INTO CHECKSUM"
  "test_name": "function/comparison/FunctionGreater.test"
- "query": "SELECT i16 > i8 AS i16_i8, i16 > i8 + INT8(1) AS i16_i8_plus_1, i16 > i16 AS i16_i16, i16 > i16 + INT16(1) AS i16_i16_plus_1, i16 > i32 AS i16_i32, i16 > i32 + INT32(1) AS i16_i32_plus_1, i16 > i64 AS i16_i64, i16 > i64 + INT64(1) AS i16_i64_plus_1, i16 > u8 AS i16_u8, i16 > u8 + UINT8(1) AS i16_u8_plus_1, u16 > i16 AS i16_u16, u16 > i16 + INT16(1) AS i16_u16_plus_1, i16 > u32 AS i16_u32, i16 > u32 + UINT32(1) AS i16_u32_plus_1, i16 > u64 AS i16_u64, i16 > u64 + UINT64(1) AS i16_u64_plus_1, i16 > f32 AS i16_f32, i16 > f32 + FLOAT32(1) AS i16_f32_plus_1, i16 > f64 AS i16_f64, i16 > f64 + FLOAT64(1) AS i16_f64_plus_1 FROM FunctionGreater_stream INTO CHECKSUM"
  "test_name": "function/comparison/FunctionGreater.test"
- "query": "SELECT i32 > i8 AS i32_i8, i32 > i8 + INT8(1) AS i32_i8_plus_1, i32 > i16 AS i32_i16, i32 > i16 + INT16(1) AS i32_i16_plus_1, i32 > i32 AS i32_i32, i32 > i32 + INT32(1) AS i32_i32_plus_1, i32 > i64 AS i32_i64, i32 > i64 + INT64(1) AS i32_i64_plus_1, i32 > u8 AS i32_u8, i32 > u8 + UINT8(1) AS i32_u8_plus_1, i32 > u16 AS i32_u16, i32 > u16 + UINT16(1) AS i32_u16_plus_1, i32 > u32 AS i32_u32, i32 > u32 + UINT32(1) AS i32_u32_plus_1, i32 > u64 AS i32_u64, i32 > u64 + UINT64(1) AS i32_u64_plus_1, i32 > f32 AS i32_f32, i32 > f32 + FLOAT32(1) AS i32_f32_plus_1, i32 > f64 AS i32_f64, i32 > f64 + FLOAT64(1) AS i32_f64_plus_1 FROM FunctionGreater_stream INTO CHECKSUM"
  "test_name": "function/comparison/FunctionGreater.test"
- "query": "SELECT i64 > i8 AS i64_i8, i64 > i8 + INT8(1) AS i64_i8_plus_1, i64 > i16 AS i64_i16, i64 > i16 + INT16(1) AS i64_i16_plus_1, i64 > i32 AS i64_i32, i64 > i32 + INT32(1) AS i64_i32_plus_1, i64 > i64 AS i64_i64, i64 > i64 + INT64(1) AS i64_i64_plus_1, i64 > u8 AS i64_u8, i64 > u8 + UINT8(1) AS i64_u8_plus_1, i64 > u16 AS i64_u16, i64 > u16 + UINT16(1) AS i64_u16_plus_1, i64 > u32 AS i64_u32, i64 > u32 + UINT32(1) AS i64_u32_plus_1, i64 > u64 AS i64_u64, i64 > u64 + UINT64(1) AS i64_u64_plus_1, i64 > f32 AS i64_f32, i64 > f32 + FLOAT32(1) AS i64_f32_plus_1, i64 > f64 AS i64_f64, i64 > f64 + FLOAT64(1) AS i64_f64_plus_1 FROM FunctionGreater_stream INTO CHECKSUM"
  "test_name": "function/comparison/FunctionGreater.test"
- "query": "SELECT u8 > i8 AS u8_i8, u8 > i8 + INT8(1) AS u8_i8_plus_1, u8 > i16 AS u8_i16, u8 > i16 + INT16(1) AS u8_i16_plus_1, u8 > i32 AS u8_i32, u8 > i32 + INT32(1) AS u8_i32_plus_1, u8 > i64 AS u8_i64, u8 > i64 + INT64(1) AS u8_i64_plus_1, u8 > u8  AS u8_u8, u8 > u8 + UINT8(1) AS u8_u8_plus_1, u8 > u16 AS u8_u16, u8 > u16 + UINT16(1) AS u8_u16_plus_1, u8 > u32 AS u8_u32, u8 > u32 + UINT32(1) AS u8_u32_plus_1, u8 > u64 AS u8_u64, u8 > u64 + UINT64(1) AS u8_u64_plus_1, u8 > f32 AS u8_f32, u8 > f32 + FLOAT32(1) AS u8_f32_plus_1, u8 > f64 AS u8_f64, u8 > f64 + FLOAT64(1) AS u8_f64_plus_1 FROM FunctionGreater_stream INTO CHECKSUM"
  "test_name": "function/comparison/FunctionGreater.test"
- "query": "SELECT u16 > i8 AS u16_i8, u16 > i8 + INT8(1) AS u16_i8_plus_1, u16 > i16 AS u16_i16, u16 > i16 + INT16(1) AS u16_i16_plus_1, u16 > i32 AS u16_i32, u16 > i32 + INT32(1) AS u16_i32_plus_1, u16 > i64 AS u16_i64, u16 > i64 + INT64(1) AS u16_i64_plus_1, u16 > u8 AS u16_u8, u16 > u8 + UINT8(1) AS u16_u8_plus_1, u16 > i16 AS u16_u16, u16 > i16 + INT16(1) AS u16_u16_plus_1, u16 > u32 AS u16_u32, u16 > u32 + UINT32(1) AS u16_u32_plus_1, u16 > u64 AS u16_u64, u16 > u64 + UINT64(1) AS u16_u64_plus_1, u16 > f32 AS u16_f32, u16 > f32 + FLOAT32(1) AS u16_f32_plus_1, u16 > f64 AS u16_f64, u16 > f64 + FLOAT64(1) AS u16_f64_plus_1 FROM FunctionGreater_stream INTO CHECKSUM"
  "test_name": "function/comparison/FunctionGreater.test"
- "query": "SELECT u32 > i8 AS u32_i8, u32 > i8 + INT8(1) AS u32_i8_plus_1, u32 > i16 AS u32_i16, u32 > i16 + INT16(1) AS u32_i16_plus_1, u32 > i32 AS u32_i32, u32 > i32 + INT32(1) AS u32_i32_plus_1, u32 > i64 AS u32_i64, u32 > i64 + INT64(1) AS u32_i64_plus_1, u32 > u8 AS u32_u8, u32 > u8 + UINT8(1) AS u32_u8_plus_1, u32 > u16 AS u32_u16, u32 > u16 + UINT16(1) AS u32_u16_plus_1, u32 > u32 AS u32_u32, u32 > u32 + UINT32(1) AS u32_u32_plus_1, u32 > u64 AS u32_u64, u32 > u64 + UINT64(1) AS u32_u64_plus_1, u32 > f32 AS u32_f32, u32 > f32 + FLOAT32(1) AS u32_f32_plus_1, u32 > f64 AS u32_f64, u32 > f64 + FLOAT64(1) AS u32_f64_plus_1 FROM FunctionGreater_stream INTO CHECKSUM"
  "test_name": "function/comparison/FunctionGreater.test"
- "query": "SELECT u64 > i8 AS u64_i8, u64 > i8 + INT8(1) AS u64_i8_plus_1, u64 > i16 AS u64_i16, u64 > i16 + INT16(1) AS u64_i16_plus_1, u64 > i32 AS u64_i32, u64 > i32 + INT32(1) AS u64_i32_plus_1, u64 > i64 AS u64_i64, u64 > i64 + INT64(1) AS u64_i64_plus_1, u64 > u8 AS u64_u8, u64 > u8 + UINT8(1) AS u64_u8_plus_1, u64 > u16 AS u64_u16, u64 > u16 + UINT16(1) AS u64_u16_plus_1, u64 > u32 AS u64_u32, u64 > u32 + UINT32(1) AS u64_u32_plus_1, u64 > u64 AS u64_u64, u64 > u64 + UINT64(1) AS u64_u64_plus_1, u64 > f32 AS u64_f32, u64 > f32 + FLOAT32(1) AS u64_f32_plus_1, u64 > f64 AS u64_f64, u64 > f64 + FLOAT64(1) AS u64_f64_plus_1 FROM FunctionGreater_stream INTO CHECKSUM"
  "test_name": "function/comparison/FunctionGreater.test"
- "query": "SELECT i8 >= i8 AS i8_i8, i8 >= i8 + INT8(1) AS i8_i8_plus_1, i8 >= i16 AS i8_i16, i8 >= i16 + INT16(1) AS i8_i16_plus_1, i8 >= i32 AS i8_i32, i8 >= i32 + INT32(1) AS i8_i32_plus_1, i8 >= i64 AS i8_i64, i8 >= i64 + INT64(1) AS i8_i64_plus_1, i8 >= u8  AS i8_u8, i8 >= u8 + UINT8(1) AS i8_u8_plus_1, i8 >= u16 AS i8_u16, i8 >= u16 + UINT16(1) AS i8_u16_plus_1, i8 >= u32 AS i8_u32, i8 >= u32 + UINT32(1) AS i8_u32_plus_1, i8 >= u64 AS i8_u64, i8 >= u64 + UINT64(1) AS i8_u64_plus_1, i8 >= f32 AS i8_f32, i8 >= f32 + FLOAT32(1) AS i8_f32_plus_1, i8 >= f64 AS i8_f64, i8 >= f64 + FLOAT64(1) AS i8_f64_plus_1 FROM FunctionGreaterEquals_stream INTO CHECKSUM"
  "test_name": "function/comparison/FunctionGreaterEquals.test"
- "query": "SELECT i16 >= i8 AS i16_i8, i16 >= i8 + INT8(1) AS i16_i8_plus_1, i16 >= i16 AS i16_i16, i16 >= i16 + INT16(1) AS i16_i16_plus_1, i16 >= i32 AS i16_i32, i16 >= i32 + INT32(1) AS i16_i32_plus_1, i16 >= i64 AS i16_i64, i16 >= i64 + INT64(1) AS i16_i64_plus_1, i16 >= u8 AS i16_u8, i16 >= u8 + UINT8(1) AS i16_u8_plus_1, u16 >= i16 AS i16_u16, u16 >= i16 + INT16(1) AS i16_u16_plus_1, i16 >= u32 AS i16_u32, i16 >= u32 + UINT32(1) AS i16_u32_plus_1, i16 >= u64 AS i16_u64, i16 >= u64 + UINT64(1) AS i16_u64_plus_1, i16 >= f32 AS i16_f32, i16 >= f32 + FLOAT32(1) AS i16_f32_plus_1, i16 >= f64 AS i16_f64, i16 >= f64 + FLOAT64(1) AS i16_f64_plus_1 FROM FunctionGreaterEquals_stream INTO CHECKSUM"
  "test_name": "function/comparison/FunctionGreaterEquals.test"
- "query": "SELECT i32 >= i8 AS i32_i8, i32 >= i8 + INT8(1) AS i32_i8_plus_1, i32 >= i16 AS i32_i16, i32 >= i16 + INT16(1) AS i32_i16_plus_1, i32 >= i32 AS i32_i32, i32 >= i32 + INT32(1) AS i32_i32_plus_1, i32 >= i64 AS i32_i64, i32 >= i64 + INT64(1) AS i32_i64_plus_1, i32 >= u8 AS i32_u8, i32 >= u8 + UINT8(1) AS i32_u8_plus_1, i32 >= u16 AS i32_u16, i32 >= u16 + UINT16(1) AS i32_u16_plus_1, i32 >= u32 AS i32_u32, i32 >= u32 + UINT32(1) AS i32_u32_plus_1, i32 >= u64 AS i32_u64, i32 >= u64 + UINT64(1) AS i32_u64_plus_1, i32 >= f32 AS i32_f32, i32 >= f32 + FLOAT32(1) AS i32_f32_plus_1, i32 >= f64 AS i32_f64, i32 >= f64 + FLOAT64(1) AS i32_f64_plus_1 FROM FunctionGreaterEquals_stream INTO CHECKSUM"
  "test_name": "function/comparison/FunctionGreaterEquals.test"
- "query": "SELECT i64 >= i8 AS i64_i8, i64 >= i8 + INT8(1) AS i64_i8_plus_1, i64 >= i16 AS i64_i16, i64 >= i16 + INT16(1) AS i64_i16_plus_1, i64 >= i32 AS i64_i32, i64 >= i32 + INT32(1) AS i64_i32_plus_1, i64 >= i64 AS i64_i64, i64 >= i64 + INT64(1) AS i64_i64_plus_1, i64 >= u8 AS i64_u8, i64 >= u8 + UINT8(1) AS i64_u8_plus_1, i64 >= u16 AS i64_u16, i64 >= u16 + UINT16(1) AS i64_u16_plus_1, i64 >= u32 AS i64_u32, i64 >= u32 + UINT32(1) AS i64_u32_plus_1, i64 >= u64 AS i64_u64, i64 >= u64 + UINT64(1) AS i64_u64_plus_1, i64 >= f32 AS i64_f32, i64 >= f32 + FLOAT32(1) AS i64_f32_plus_1, i64 >= f64 AS i64_f64, i64 >= f64 + FLOAT64(1) AS i64_f64_plus_1 FROM FunctionGreaterEquals_stream INTO CHECKSUM"
  "test_name": "function/comparison/FunctionGreaterEquals.test"
- "query": "SELECT u8 >= i8 AS u8_i8, u8 >= i8 + INT8(1) AS u8_i8_plus_1, u8 >= i16 AS u8_i16, u8 >= i16 + INT16(1) AS u8_i16_plus_1, u8 >= i32 AS u8_i32, u8 >= i32 + INT32(1) AS u8_i32_plus_1, u8 >= i64 AS u8_i64, u8 >= i64 + INT64(1) AS u8_i64_plus_1, u8 >= u8  AS u8_u8, u8 >= u8 + UINT8(1) AS u8_u8_plus_1, u8 >= u16 AS u8_u16, u8 >= u16 + UINT16(1) AS u8_u16_plus_1, u8 >= u32 AS u8_u32, u8 >= u32 + UINT32(1) AS u8_u32_plus_1, u8 >= u64 AS u8_u64, u8 >= u64 + UINT64(1) AS u8_u64_plus_1, u8 >= f32 AS u8_f32, u8 >= f32 + FLOAT32(1) AS u8_f32_plus_1, u8 >= f64 AS u8_f64, u8 >= f64 + FLOAT64(1) AS u8_f64_plus_1 FROM FunctionGreaterEquals_stream INTO CHECKSUM"
  "test_name": "function/comparison/FunctionGreaterEquals.test"
- "query": "SELECT u16 >= i8 AS u16_i8, u16 >= i8 + INT8(1) AS u16_i8_plus_1, u16 >= i16 AS u16_i16, u16 >= i16 + INT16(1) AS u16_i16_plus_1, u16 >= i32 AS u16_i32, u16 >= i32 + INT32(1) AS u16_i32_plus_1, u16 >= i64 AS u16_i64, u16 >= i64 + INT64(1) AS u16_i64_plus_1, u16 >= u8 AS u16_u8, u16 >= u8 + UINT8(1) AS u16_u8_plus_1, u16 >= i16 AS u16_u16, u16 >= i16 + INT16(1) AS u16_u16_plus_1, u16 >= u32 AS u16_u32, u16 >= u32 + UINT32(1) AS u16_u32_plus_1, u16 >= u64 AS u16_u64, u16 >= u64 + UINT64(1) AS u16_u64_plus_1, u16 >= f32 AS u16_f32, u16 >= f32 + FLOAT32(1) AS u16_f32_plus_1, u16 >= f64 AS u16_f64, u16 >= f64 + FLOAT64(1) AS u16_f64_plus_1 FROM FunctionGreaterEquals_stream INTO CHECKSUM"
  "test_name": "function/comparison/FunctionGreaterEquals.test"
- "query": "SELECT u32 >= i8 AS u32_i8, u32 >= i8 + INT8(1) AS u32_i8_plus_1, u32 >= i16 AS u32_i16, u32 >= i16 + INT16(1) AS u32_i16_plus_1, u32 >= i32 AS u32_i32, u32 >= i32 + INT32(1) AS u32_i32_plus_1, u32 >= i64 AS u32_i64, u32 >= i64 + INT64(1) AS u32_i64_plus_1, u32 >= u8 AS u32_u8, u32 >= u8 + UINT8(1) AS u32_u8_plus_1, u32 >= u16 AS u32_u16, u32 >= u16 + UINT16(1) AS u32_u16_plus_1, u32 >= u32 AS u32_u32, u32 >= u32 + UINT32(1) AS u32_u32_plus_1, u32 >= u64 AS u32_u64, u32 >= u64 + UINT64(1) AS u32_u64_plus_1, u32 >= f32 AS u32_f32, u32 >= f32 + FLOAT32(1) AS u32_f32_plus_1, u32 >= f64 AS u32_f64, u32 >= f64 + FLOAT64(1) AS u32_f64_plus_1 FROM FunctionGreaterEquals_stream INTO CHECKSUM"
  "test_name": "function/comparison/FunctionGreaterEquals.test"
- "query": "SELECT u64 >= i8 AS u64_i8, u64 >= i8 + INT8(1) AS u64_i8_plus_1, u64 >= i16 AS u64_i16, u64 >= i16 + INT16(1) AS u64_i16_plus_1, u64 >= i32 AS u64_i32, u64 >= i32 + INT32(1) AS u64_i32_plus_1, u64 >= i64 AS u64_i64, u64 >= i64 + INT64(1) AS u64_i64_plus_1, u64 >= u8 AS u64_u8, u64 >= u8 + UINT8(1) AS u64_u8_plus_1, u64 >= u16 AS u64_u16, u64 >= u16 + UINT16(1) AS u64_u16_plus_1, u64 >= u32 AS u64_u32, u64 >= u32 + UINT32(1) AS u64_u32_plus_1, u64 >= u64 AS u64_u64, u64 >= u64 + UINT64(1) AS u64_u64_plus_1, u64 >= f32 AS u64_f32, u64 >= f32 + FLOAT32(1) AS u64_f32_plus_1, u64 >= f64 AS u64_f64, u64 >= f64 + FLOAT64(1) AS u64_f64_plus_1 FROM FunctionGreaterEquals_stream INTO CHECKSUM"
  "test_name": "function/comparison/FunctionGreaterEquals.test"
- "query": "SELECT i8 < i8 AS i8_i8, i8 < i8 + INT8(1) AS i8_i8_plus_1, i8 < i16 AS i8_i16, i8 < i16 + INT16(1) AS i8_i16_plus_1, i8 < i32 AS i8_i32, i8 < i32 + INT32(1) AS i8_i32_plus_1, i8 < i64 AS i8_i64, i8 < i64 + INT64(1) AS i8_i64_plus_1, i8 < u8  AS i8_u8, i8 < u8 + UINT8(1) AS i8_u8_plus_1, i8 < u16 AS i8_u16, i8 < u16 + UINT16(1) AS i8_u16_plus_1, i8 < u32 AS i8_u32, i8 < u32 + UINT32(1) AS i8_u32_plus_1, i8 < u64 AS i8_u64, i8 < u64 + UINT64(1) AS i8_u64_plus_1, i8 < f32 AS i8_f32, i8 < f32 + FLOAT32(1) AS i8_f32_plus_1, i8 < f64 AS i8_f64, i8 < f64 + FLOAT64(1) AS i8_f64_plus_1 FROM FunctionLess_stream INTO CHECKSUM"
  "test_name": "function/comparison/FunctionLess.test"
- "query": "SELECT i16 < i8 AS i16_i8, i16 < i8 + INT8(1) AS i16_i8_plus_1, i16 < i16 AS i16_i16, i16 < i16 + INT16(1) AS i16_i16_plus_1, i16 < i32 AS i16_i32, i16 < i32 + INT32(1) AS i16_i32_plus_1, i16 < i64 AS i16_i64, i16 < i64 + INT64(1) AS i16_i64_plus_1, i16 < u8 AS i16_u8, i16 < u8 + UINT8(1) AS i16_u8_plus_1, u16 < i16 AS i16_u16, u16 < i16 + INT16(1) AS i16_u16_plus_1, i16 < u32 AS i16_u32, i16 < u32 + UINT32(1) AS i16_u32_plus_1, i16 < u64 AS i16_u64, i16 < u64 + UINT64(1) AS i16_u64_plus_1, i16 < f32 AS i16_f32, i16 < f32 + FLOAT32(1) AS i16_f32_plus_1, i16 < f64 AS i16_f64, i16 < f64 + FLOAT64(1) AS i16_f64_plus_1 FROM FunctionLess_stream INTO CHECKSUM"
  "test_name": "function/comparison/FunctionLess.test"
- "query": "SELECT i32 < i8 AS i32_i8, i32 < i8 + INT8(1) AS i32_i8_plus_1, i32 < i16 AS i32_i16, i32 < i16 + INT16(1) AS i32_i16_plus_1, i32 < i32 AS i32_i32, i32 < i32 + INT32(1) AS i32_i32_plus_1, i32 < i64 AS i32_i64, i32 < i64 + INT64(1) AS i32_i64_plus_1, i32 < u8 AS i32_u8, i32 < u8 + UINT8(1) AS i32_u8_plus_1, i32 < u16 AS i32_u16, i32 < u16 + UINT16(1) AS i32_u16_plus_1, i32 < u32 AS i32_u32, i32 < u32 + UINT32(1) AS i32_u32_plus_1, i32 < u64 AS i32_u64, i32 < u64 + UINT64(1) AS i32_u64_plus_1, i32 < f32 AS i32_f32, i32 < f32 + FLOAT32(1) AS i32_f32_plus_1, i32 < f64 AS i32_f64, i32 < f64 + FLOAT64(1) AS i32_f64_plus_1 FROM FunctionLess_stream INTO CHECKSUM"
  "test_name": "function/comparison/FunctionLess.test"
- "query": "SELECT i64 < i8 AS i64_i8, i64 < i8 + INT8(1) AS i64_i8_plus_1, i64 < i16 AS i64_i16, i64 < i16 + INT16(1) AS i64_i16_plus_1, i64 < i32 AS i64_i32, i64 < i32 + INT32(1) AS i64_i32_plus_1, i64 < i64 AS i64_i64, i64 < i64 + INT64(1) AS i64_i64_plus_1, i64 < u8 AS i64_u8, i64 < u8 + UINT8(1) AS i64_u8_plus_1, i64 < u16 AS i64_u16, i64 < u16 + UINT16(1) AS i64_u16_plus_1, i64 < u32 AS i64_u32, i64 < u32 + UINT32(1) AS i64_u32_plus_1, i64 < u64 AS i64_u64, i64 < u64 + UINT64(1) AS i64_u64_plus_1, i64 < f32 AS i64_f32, i64 < f32 + FLOAT32(1) AS i64_f32_plus_1, i64 < f64 AS i64_f64, i64 < f64 + FLOAT64(1) AS i64_f64_plus_1 FROM FunctionLess_stream INTO CHECKSUM"
  "test_name": "function/comparison/FunctionLess.test"
- "query": "SELECT u8 < i8 AS u8_i8, u8 < i8 + INT8(1) AS u8_i8_plus_1, u8 < i16 AS u8_i16, u8 < i16 + INT16(1) AS u8_i16_plus_1, u8 < i32 AS u8_i32, u8 < i32 + INT32(1) AS u8_i32_plus_1, u8 < i64 AS u8_i64, u8 < i64 + INT64(1) AS u8_i64_plus_1, u8 < u8  AS u8_u8, u8 < u8 + UINT8(1) AS u8_u8_plus_1, u8 < u16 AS u8_u16, u8 < u16 + UINT16(1) AS u8_u16_plus_1, u8 < u32 AS u8_u32, u8 < u32 + UINT32(1) AS u8_u32_plus_1, u8 < u64 AS u8_u64, u8 < u64 + UINT64(1) AS u8_u64_plus_1, u8 < f32 AS u8_f32, u8 < f32 + FLOAT32(1) AS u8_f32_plus_1, u8 < f64 AS u8_f64, u8 < f64 + FLOAT64(1) AS u8_f64_plus_1 FROM FunctionLess_stream INTO CHECKSUM"
  "test_name": "function/comparison/FunctionLess.test"
- "query": "SELECT u16 < i8 AS u16_i8, u16 < i8 + INT8(1) AS u16_i8_plus_1, u16 < i16 AS u16_i16, u16 < i16 + INT16(1) AS u16_i16_plus_1, u16 < i32 AS u16_i32, u16 < i32 + INT32(1) AS u16_i32_plus_1, u16 < i64 AS u16_i64, u16 < i64 + INT64(1) AS u16_i64_plus_1, u16 < u8 AS u16_u8, u16 < u8 + UINT8(1) AS u16_u8_plus_1, u16 < i16 AS u16_u16, u16 < i16 + INT16(1) AS u16_u16_plus_1, u16 < u32 AS u16_u32, u16 < u32 + UINT32(1) AS u16_u32_plus_1, u16 < u64 AS u16_u64, u16 < u64 + UINT64(1) AS u16_u64_plus_1, u16 < f32 AS u16_f32, u16 < f32 + FLOAT32(1) AS u16_f32_plus_1, u16 < f64 AS u16_f64, u16 < f64 + FLOAT64(1) AS u16_f64_plus_1 FROM FunctionLess_stream INTO CHECKSUM"
  "test_name": "function/comparison/FunctionLess.test"
- "query": "SELECT u32 < i8 AS u32_i8, u32 < i8 + INT8(1) AS u32_i8_plus_1, u32 < i16 AS u32_i16, u32 < i16 + INT16(1) AS u32_i16_plus_1, u32 < i32 AS u32_i32, u32 < i32 + INT32(1) AS u32_i32_plus_1, u32 < i64 AS u32_i64, u32 < i64 + INT64(1) AS u32_i64_plus_1, u32 < u8 AS u32_u8, u32 < u8 + UINT8(1) AS u32_u8_plus_1, u32 < u16 AS u32_u16, u32 < u16 + UINT16(1) AS u32_u16_plus_1, u32 < u32 AS u32_u32, u32 < u32 + UINT32(1) AS u32_u32_plus_1, u32 < u64 AS u32_u64, u32 < u64 + UINT64(1) AS u32_u64_plus_1, u32 < f32 AS u32_f32, u32 < f32 + FLOAT32(1) AS u32_f32_plus_1, u32 < f64 AS u32_f64, u32 < f64 + FLOAT64(1) AS u32_f64_plus_1 FROM FunctionLess_stream INTO CHECKSUM"
  "test_name": "function/comparison/FunctionLess.test"
- "query": "SELECT u64 < i8 AS u64_i8, u64 < i8 + INT8(1) AS u64_i8_plus_1, u64 < i16 AS u64_i16, u64 < i16 + INT16(1) AS u64_i16_plus_1, u64 < i32 AS u64_i32, u64 < i32 + INT32(1) AS u64_i32_plus_1, u64 < i64 AS u64_i64, u64 < i64 + INT64(1) AS u64_i64_plus_1, u64 < u8 AS u64_u8, u64 < u8 + UINT8(1) AS u64_u8_plus_1, u64 < u16 AS u64_u16, u64 < u16 + UINT16(1) AS u64_u16_plus_1, u64 < u32 AS u64_u32, u64 < u32 + UINT32(1) AS u64_u32_plus_1, u64 < u64 AS u64_u64, u64 < u64 + UINT64(1) AS u64_u64_plus_1, u64 < f32 AS u64_f32, u64 < f32 + FLOAT32(1) AS u64_f32_plus_1, u64 < f64 AS u64_f64, u64 < f64 + FLOAT64(1) AS u64_f64_plus_1 FROM FunctionLess_stream INTO CHECKSUM"
  "test_name": "function/comparison/FunctionLess.test"
- "query": "SELECT i8 <= i8 AS i8_i8, i8 <= i8 + INT8(1) AS i8_i8_plus_1, i8 <= i16 AS i8_i16, i8 <= i16 + INT16(1) AS i8_i16_plus_1, i8 <= i32 AS i8_i32, i8 <= i32 + INT32(1) AS i8_i32_plus_1, i8 <= i64 AS i8_i64, i8 <= i64 + INT64(1) AS i8_i64_plus_1, i8 <= u8  AS i8_u8, i8 <= u8 + UINT8(1) AS i8_u8_plus_1, i8 <= u16 AS i8_u16, i8 <= u16 + UINT16(1) AS i8_u16_plus_1, i8 <= u32 AS i8_u32, i8 <= u32 + UINT32(1) AS i8_u32_plus_1, i8 <= u64 AS i8_u64, i8 <= u64 + UINT64(1) AS i8_u64_plus_1, i8 <= f32 AS i8_f32, i8 <= f32 + FLOAT32(1) AS i8_f32_plus_1, i8 <= f64 AS i8_f64, i8 <= f64 + FLOAT64(1) AS i8_f64_plus_1 FROM FunctionLessEquals_stream INTO CHECKSUM"
  "test_name": "function/comparison/FunctionLessEquals.test"
- "query": "SELECT i16 <= i8 AS i16_i8, i16 <= i8 + INT8(1) AS i16_i8_plus_1, i16 <= i16 AS i16_i16, i16 <= i16 + INT16(1) AS i16_i16_plus_1, i16 <= i32 AS i16_i32, i16 <= i32 + INT32(1) AS i16_i32_plus_1, i16 <= i64 AS i16_i64, i16 <= i64 + INT64(1) AS i16_i64_plus_1, i16 <= u8 AS i16_u8, i16 <= u8 + UINT8(1) AS i16_u8_plus_1, u16 <= i16 AS i16_u16, u16 <= i16 + INT16(1) AS i16_u16_plus_1, i16 <= u32 AS i16_u32, i16 <= u32 + UINT32(1) AS i16_u32_plus_1, i16 <= u64 AS i16_u64, i16 <= u64 + UINT64(1) AS i16_u64_plus_1, i16 <= f32 AS i16_f32, i16 <= f32 + FLOAT32(1) AS i16_f32_plus_1, i16 <= f64 AS i16_f64, i16 <= f64 + FLOAT64(1) AS i16_f64_plus_1 FROM FunctionLessEquals_stream INTO CHECKSUM"
  "test_name": "function/comparison/FunctionLessEquals.test"
- "query": "SELECT i32 <= i8 AS i32_i8, i32 <= i8 + INT8(1) AS i32_i8_plus_1, i32 <= i16 AS i32_i16, i32 <= i16 + INT16(1) AS i32_i16_plus_1, i32 <= i32 AS i32_i32, i32 <= i32 + INT32(1) AS i32_i32_plus_1, i32 <= i64 AS i32_i64, i32 <= i64 + INT64(1) AS i32_i64_plus_1, i32 <= u8 AS i32_u8, i32 <= u8 + UINT8(1) AS i32_u8_plus_1, i32 <= u16 AS i32_u16, i32 <= u16 + UINT16(1) AS i32_u16_plus_1, i32 <= u32 AS i32_u32, i32 <= u32 + UINT32(1) AS i32_u32_plus_1, i32 <= u64 AS i32_u64, i32 <= u64 + UINT64(1) AS i32_u64_plus_1, i32 <= f32 AS i32_f32, i32 <= f32 + FLOAT32(1) AS i32_f32_plus_1, i32 <= f64 AS i32_f64, i32 <= f64 + FLOAT64(1) AS i32_f64_plus_1 FROM FunctionLessEquals_stream INTO CHECKSUM"
  "test_name": "function/comparison/FunctionLessEquals.test"
- "query": "SELECT i64 <= i8 AS i64_i8, i64 <= i8 + INT8(1) AS i64_i8_plus_1, i64 <= i16 AS i64_i16, i64 <= i16 + INT16(1) AS i64_i16_plus_1, i64 <= i32 AS i64_i32, i64 <= i32 + INT32(1) AS i64_i32_plus_1, i64 <= i64 AS i64_i64, i64 <= i64 + INT64(1) AS i64_i64_plus_1, i64 <= u8 AS i64_u8, i64 <= u8 + UINT8(1) AS i64_u8_plus_1, i64 <= u16 AS i64_u16, i64 <= u16 + UINT16(1) AS i64_u16_plus_1, i64 <= u32 AS i64_u32, i64 <= u32 + UINT32(1) AS i64_u32_plus_1, i64 <= u64 AS i64_u64, i64 <= u64 + UINT64(1) AS i64_u64_plus_1, i64 <= f32 AS i64_f32, i64 <= f32 + FLOAT32(1) AS i64_f32_plus_1, i64 <= f64 AS i64_f64, i64 <= f64 + FLOAT64(1) AS i64_f64_plus_1 FROM FunctionLessEquals_stream INTO CHECKSUM"
  "test_name": "function/comparison/FunctionLessEquals.test"
- "query": "SELECT u8 <= i8 AS u8_i8, u8 <= i8 + INT8(1) AS u8_i8_plus_1, u8 <= i16 AS u8_i16, u8 <= i16 + INT16(1) AS u8_i16_plus_1, u8 <= i32 AS u8_i32, u8 <= i32 + INT32(1) AS u8_i32_plus_1, u8 <= i64 AS u8_i64, u8 <= i64 + INT64(1) AS u8_i64_plus_1, u8 <= u8  AS u8_u8, u8 <= u8 + UINT8(1) AS u8_u8_plus_1, u8 <= u16 AS u8_u16, u8 <= u16 + UINT16(1) AS u8_u16_plus_1, u8 <= u32 AS u8_u32, u8 <= u32 + UINT32(1) AS u8_u32_plus_1, u8 <= u64 AS u8_u64, u8 <= u64 + UINT64(1) AS u8_u64_plus_1, u8 <= f32 AS u8_f32, u8 <= f32 + FLOAT32(1) AS u8_f32_plus_1, u8 <= f64 AS u8_f64, u8 <= f64 + FLOAT64(1) AS u8_f64_plus_1 FROM FunctionLessEquals_stream INTO CHECKSUM"
  "test_name": "function/comparison/FunctionLessEquals.test"
- "query": "SELECT u16 <= i8 AS u16_i8, u16 <= i8 + INT8(1) AS u16_i8_plus_1, u16 <= i16 AS u16_i16, u16 <= i16 + INT16(1) AS u16_i16_plus_1, u16 <= i32 AS u16_i32, u16 <= i32 + INT32(1) AS u16_i32_plus_1, u16 <= i64 AS u16_i64, u16 <= i64 + INT64(1) AS u16_i64_plus_1, u16 <= u8 AS u16_u8, u16 <= u8 + UINT8(1) AS u16_u8_plus_1, u16 <= i16 AS u16_u16, u16 <= i16 + INT16(1) AS u16_u16_plus_1, u16 <= u32 AS u16_u32, u16 <= u32 + UINT32(1) AS u16_u32_plus_1, u16 <= u64 AS u16_u64, u16 <= u64 + UINT64(1) AS u16_u64_plus_1, u16 <= f32 AS u16_f32, u16 <= f32 + FLOAT32(1) AS u16_f32_plus_1, u16 <= f64 AS u16_f64, u16 <= f64 + FLOAT64(1) AS u16_f64_plus_1 FROM FunctionLessEquals_stream INTO CHECKSUM"
  "test_name": "function/comparison/FunctionLessEquals.test"
- "query": "SELECT u32 <= i8 AS u32_i8, u32 <= i8 + INT8(1) AS u32_i8_plus_1, u32 <= i16 AS u32_i16, u32 <= i16 + INT16(1) AS u32_i16_plus_1, u32 <= i32 AS u32_i32, u32 <= i32 + INT32(1) AS u32_i32_plus_1, u32 <= i64 AS u32_i64, u32 <= i64 + INT64(1) AS u32_i64_plus_1, u32 <= u8 AS u32_u8, u32 <= u8 + UINT8(1) AS u32_u8_plus_1, u32 <= u16 AS u32_u16, u32 <= u16 + UINT16(1) AS u32_u16_plus_1, u32 <= u32 AS u32_u32, u32 <= u32 + UINT32(1) AS u32_u32_plus_1, u32 <= u64 AS u32_u64, u32 <= u64 + UINT64(1) AS u32_u64_plus_1, u32 <= f32 AS u32_f32, u32 <= f32 + FLOAT32(1) AS u32_f32_plus_1, u32 <= f64 AS u32_f64, u32 <= f64 + FLOAT64(1) AS u32_f64_plus_1 FROM FunctionLessEquals_stream INTO CHECKSUM"
  "test_name": "function/comparison/FunctionLessEquals.test"
- "query": "SELECT u64 <= i8 AS u64_i8, u64 <= i8 + INT8(1) AS u64_i8_plus_1, u64 <= i16 AS u64_i16, u64 <= i16 + INT16(1) AS u64_i16_plus_1, u64 <= i32 AS u64_i32, u64 <= i32 + INT32(1) AS u64_i32_plus_1, u64 <= i64 AS u64_i64, u64 <= i64 + INT64(1) AS u64_i64_plus_1, u64 <= u8 AS u64_u8, u64 <= u8 + UINT8(1) AS u64_u8_plus_1, u64 <= u16 AS u64_u16, u64 <= u16 + UINT16(1) AS u64_u16_plus_1, u64 <= u32 AS u64_u32, u64 <= u32 + UINT32(1) AS u64_u32_plus_1, u64 <= u64 AS u64_u64, u64 <= u64 + UINT64(1) AS u64_u64_plus_1, u64 <= f32 AS u64_f32, u64 <= f32 + FLOAT32(1) AS u64_f32_plus_1, u64 <= f64 AS u64_f64, u64 <= f64 + FLOAT64(1) AS u64_f64_plus_1 FROM FunctionLessEquals_stream INTO CHECKSUM"
  "test_name": "function/comparison/FunctionLessEquals.test"
- "query": "SELECT (i8 == INT32(1)) and ((i16 == INT32(1)) and (i32 == INT32(1))) AS a, (i32 == INT32(1)) and ((i64 == INT32(1)) and (u8 == INT32(2))) AS b, (u8 == INT32(2)) and ((u16 == INT32(1)) and (u32 == INT32(2))) AS c, (u8 == INT32(2)) and ((u16 == INT32(1)) and (u32 == INT32(2))) AS d, (i8 == INT32(1)) and not ((i16 == INT32(1)) and (i32 == INT32(1))) AS e, (i32 == INT32(1)) and not ((i64 == INT32(1)) and (u8 == INT32(2))) AS f, (u8 == INT32(2)) and not ((u16 == INT32(1)) and (u32 == INT32(2))) AS g, (u8 == INT32(2)) and not ((u16 == INT32(1)) and (i32 == INT32(2))) AS h FROM FunctionAnd_stream INTO CHECKSUM"
  "test_name": "function/logical/FunctionAnd.test"
- "query": "SELECT (i8 == INT32(1)) and (i16 < INT32(2)) AS a, (i32 == INT32(1)) and (i64 > INT32(0)) AS b, (u8 == INT32(2)) and (u16 <= INT32(2)) AS c, (u8 == INT32(2)) and (u16 >= INT32(2)) AS d, (i8 == INT32(1)) and not (i16 == INT32(1)) AS e, (i32 == INT32(1)) and not (i64 == INT32(1)) AS f, (u8 == INT32(2)) and not (u16 == INT32(1)) AS g, (u8 == INT32(2)) and not (u16 == INT32(2)) AS h FROM FunctionAnd_stream INTO CHECKSUM"
  "test_name": "function/logical/FunctionAnd.test"
- "query": "SELECT (i8 == INT32(1)) and ((i16 < INT32(2)) and (i32 == INT32(1))) AS a, (i32 == INT32(1)) and ((i64 > INT32(0)) and (u8 == INT32(2))) AS b, (u8 == INT32(2)) and ((u16 <= INT32(2)) and (u32 == INT32(2))) AS c, (u8 == INT32(2)) and ((u16 >= INT32(2)) and (u32 == INT32(2))) AS d, (i8 == INT32(1)) and not ((i16 == INT32(1)) and (i32 == INT32(1))) AS e, (i32 == INT32(1)) and not ((i64 == INT32(1)) and (u8 == INT32(2))) AS f, (u8 == INT32(2)) and not ((u16 == INT32(1)) and (u32 == INT32(2))) AS g, (u8 == INT32(2)) and not ((u16 == INT32(1)) and (i32 == INT32(2))) AS h FROM FunctionAnd_stream INTO CHECKSUM"
  "test_name": "function/logical/FunctionAnd.test"
- "query": "SELECT i8 == i8 AS bool1, i8 == i8 + INT8(1) AS bool2, i8 == i16 AS bool3, i8 == i16 + INT16(1) AS bool4, i8 == i32 AS bool5, i8 == i32 + INT32(1) AS bool6, i8 == i64 AS bool7, i8 == i64 + INT64(1) AS bool8, i8 == u8 AS bool9, i8 == u8 + UINT8(1) AS bool10, i8 == u16 AS bool11, i8 == u16 + UINT16(1) AS bool12, i8 == u32 AS bool13, i8 == u32 + UINT32(1) AS bool14, i8 == u64 AS bool15, i8 == u64 + UINT64(1) AS bool16, i8 == f32 AS bool17, i8 == f32 + FLOAT32(1) AS bool18, i8 == f64 AS bool19, i8 == f64 + FLOAT64(1) AS bool20 FROM FunctionEqual_stream INTO CHECKSUM"
  "test_name": "function/logical/FunctionEqual.test"
- "query": "SELECT i16 == i8 AS bool1, i16 == i8 + INT8(1) AS bool2, i16 == i16 AS bool3, i16 == i16 + INT16(1) AS bool4, i16 == i32 AS bool5, i16 == i32 + INT32(1) AS bool6, i16 == i64 AS bool7, i16 == i64 + INT64(1) AS bool8, i16 == u8 AS bool9, i16 == u8 + UINT8(1) AS bool10, i16 == u16 AS bool11, i16 == u16 + UINT16(1) AS bool12, i16 == u32 AS bool13, i16 == u32 + UINT32(1) AS bool14, i16 == u64 AS bool15, i16 == u64 + UINT64(1) AS bool16, i16 == f32 AS bool17, i16 == f32 + FLOAT32(1) AS bool18, i16 == f64 AS bool19, i16 == f64 + FLOAT64(1) AS bool20 FROM FunctionEqual_stream INTO CHECKSUM"
  "test_name": "function/logical/FunctionEqual.test"
- "query": "SELECT i32 == i8 AS bool1, i32 == i8 + INT8(1) AS bool2, i32 == i16 AS bool3, i32 == i16 + INT16(1) AS bool4, i32 == i32 AS bool5, i32 == i32 + INT32(1) AS bool6, i32 == i64 AS bool7, i32 == i64 + INT64(1) AS bool8, i32 == u8 AS bool9, i32 == u8 + UINT8(1) AS bool10, i32 == u16 AS bool11, i32 == u16 + UINT16(1) AS bool12, i32 == u32 AS bool13, i32 == u32 + UINT32(1) AS bool14, i32 == u64 AS bool15, i32 == u64 + UINT64(1) AS bool16, i32 == f32 AS bool17, i32 == f32 + FLOAT32(1) AS bool18, i32 == f64 AS bool19, i32 == f64 + FLOAT64(1) AS bool20 FROM FunctionEqual_stream INTO CHECKSUM"
  "test_name": "function/logical/FunctionEqual.test"
- "query": "SELECT i64 == i8 AS bool1, i64 == i8 + INT8(1) AS bool2, i64 == i16 AS bool3, i64 == i16 + INT16(1) AS bool4, i64 == i32 AS bool5, i64 == i32 + INT32(1) AS bool6, i64 == i64 AS bool7, i64 == i64 + INT64(1) AS bool8, i64 == u8 AS bool9, i64 == u8 + UINT8(1) AS bool10, i64 == u16 AS bool11, i64 == u16 + UINT16(1) AS bool12, i64 == u32 AS bool13, i64 == u32 + UINT32(1) AS bool14, i64 == u64 AS bool15, i64 == u64 + UINT64(1) AS bool16, i64 == f32 AS bool17, i64 == f32 + FLOAT32(1) AS bool18, i64 == f64 AS bool19, i64 == f64 + FLOAT64(1) AS bool20 FROM FunctionEqual_stream INTO CHECKSUM"
  "test_name": "function/logical/FunctionEqual.test"
- "query": "SELECT i8 != i8 AS bool1, i8 != i8 + INT8(1) AS bool2, i8 != i16 AS bool3, i8 != i16 + INT16(1) AS bool4, i8 != i32 AS bool5, i8 != i32 + INT32(1) AS bool6, i8 != i64 AS bool7, i8 != i64 + INT64(1) AS bool8, i8 != u8 AS bool9, i8 != u8 + UINT8(1) AS bool10, i8 != u16 AS bool11, i8 != u16 + UINT16(1) AS bool12, i8 != u32 AS bool13, i8 != u32 + UINT32(1) AS bool14, i8 != u64 AS bool15, i8 != u64 + UINT64(1) AS bool16, i8 != f32 AS bool17, i8 != f32 + FLOAT32(1) AS bool18, i8 != f64 AS bool19, i8 != f64 + FLOAT64(1) AS bool20 FROM FunctionNotEqual_stream INTO CHECKSUM"
  "test_name": "function/logical/FunctionNotEqual.test"
- "query": "SELECT i16 != i8 AS bool1, i16 != i8 + INT8(1) AS bool2, i16 != i16 AS bool3, i16 != i16 + INT16(1) AS bool4, i16 != i32 AS bool5, i16 != i32 + INT32(1) AS bool6, i16 != i64 AS bool7, i16 != i64 + INT64(1) AS bool8, i16 != u8 AS bool9, i16 != u8 + UINT8(1) AS bool10, i16 != u16 AS bool11, i16 != u16 + UINT16(1) AS bool12, i16 != u32 AS bool13, i16 != u32 + UINT32(1) AS bool14, i16 != u64 AS bool15, i16 != u64 + UINT64(1) AS bool16, i16 != f32 AS bool17, i16 != f32 + FLOAT32(1) AS bool18, i16 != f64 AS bool19, i16 != f64 + FLOAT64(1) AS bool20 FROM FunctionNotEqual_stream INTO CHECKSUM"
  "test_name": "function/logical/FunctionNotEqual.test"
- "query": "SELECT i32 != i8 AS bool1, i32 != i8 + INT8(1) AS bool2, i32 != i16 AS bool3, i32 != i16 + INT16(1) AS bool4, i32 != i32 AS bool5, i32 != i32 + INT32(1) AS bool6, i32 != i64 AS bool7, i32 != i64 + INT64(1) AS bool8, i32 != u8 AS bool9, i32 != u8 + UINT8(1) AS bool10, i32 != u16 AS bool11, i32 != u16 + UINT16(1) AS bool12, i32 != u32 AS bool13, i32 != u32 + UINT32(1) AS bool14, i32 != u64 AS bool15, i32 != u64 + UINT64(1) AS bool16, i32 != f32 AS bool17, i32 != f32 + FLOAT32(1) AS bool18, i32 != f64 AS bool19, i32 != f64 + FLOAT64(1) AS bool20 FROM FunctionNotEqual_stream INTO CHECKSUM"
  "test_name": "function/logical/FunctionNotEqual.test"
- "query": "SELECT i64 != i8 AS bool1, i64 != i8 + INT8(1) AS bool2, i64 != i16 AS bool3, i64 != i16 + INT16(1) AS bool4, i64 != i32 AS bool5, i64 != i32 + INT32(1) AS bool6, i64 != i64 AS bool7, i64 != i64 + INT64(1) AS bool8, i64 != u8 AS bool9, i64 != u8 + UINT8(1) AS bool10, i64 != u16 AS bool11, i64 != u16 + UINT16(1) AS bool12, i64 != u32 AS bool13, i64 != u32 + UINT32(1) AS bool14, i64 != u64 AS bool15, i64 != u64 + UINT64(1) AS bool16, i64 != f32 AS bool17, i64 != f32 + FLOAT32(1) AS bool18, i64 != f64 AS bool19, i64 != f64 + FLOAT64(1) AS bool20 FROM FunctionNotEqual_stream INTO CHECKSUM"
  "test_name": "function/logical/FunctionNotEqual.test"
- "query": "SELECT (i8 == INT32(2)) or ((i16 == INT32(2)) or (u32 == INT32(1))) AS a, (i32 == INT32(2)) or ((i64 == INT32(2)) or (u8 == INT32(2))) AS b, (u8 == INT32(2)) or ((u16 == INT32(1)) or (u32 == INT32(1))) AS c, (u8 == INT32(2)) or ((u16 == INT32(1)) or (u32 == INT32(1))) AS d, (i8 == INT32(1)) or not ((i16 == INT32(2)) or (i32 == INT32(1))) AS e FROM FunctionOr_stream INTO CHECKSUM"
  "test_name": "function/logical/FunctionOr.test"
- "query": "SELECT (i8 == INT32(2)) or (i16 < INT32(0)) AS a, (i32 == INT32(2)) or (i64 > INT32(0)) AS b, (u8 == INT32(2)) or (u16 <= INT32(2)) AS c, (u8 == INT32(2)) or (u16 >= INT32(2)) AS d, (i8 == INT32(1)) or not (i16 == INT32(2)) AS e FROM FunctionOr_stream INTO CHECKSUM"
  "test_name": "function/logical/FunctionOr.test"
- "query": "SELECT (i8 == INT32(2)) or ((i16 < INT32(0)) or (i32 == INT32(2))) AS a, (i32 == INT32(2)) or ((i64 > INT32(0)) or (u8 == INT32(2))) AS b, (u8 == INT32(2)) or ((u16 <= INT32(2)) or (u32 == INT32(1))) AS c, (u8 == INT32(2)) or ((u16 >= INT32(2)) or (u32 == INT32(1))) AS d, (i8 == INT32(1)) or not ((i16 == INT32(2)) or (i32 == INT32(1))) AS e FROM FunctionOr_stream INTO CHECKSUM"
  "test_name": "function/logical/FunctionOr.test"
- "query": "SELECT AVG(i8) as i8_out, AVG(i16) as i16_out, AVG(i32) as i32_out, AVG(i64) as i64_out, AVG(u8) as u8_out, AVG(u16) as u16_out, AVG(u32) as u32_out, AVG(u64) as u64_out, AVG(f32) as f32_out, AVG(f64) as f64_out FROM WindowAggregationDifferentDataTypes_stream WINDOW TUMBLING(ts, size 100 ms) INTO CHECKSUM"
  "test_name": "window/WindowAggregationDifferentDataTypes.test"
- "query": "SELECT SUM(i8) as i8_out, SUM(i16) as i16_out, SUM(i32) as i32_out, SUM(i64) as i64_out, SUM(u8) as u8_out, SUM(u16) as u16_out, SUM(u32) as u32_out, SUM(u64) as u64_out, SUM(f32) as f32_out, SUM(f64) as f64_out FROM WindowAggregationDifferentDataTypes_stream WINDOW TUMBLING(ts, size 100 ms) INTO CHECKSUM"
  "test_name": "window/WindowAggregationDifferentDataTypes.test"
- "query": "SELECT MIN(i8) as i8_out, MIN(i16) as i16_out, MIN(i32) as i32_out, MIN(i64) as i64_out, MIN(u8) as u8_out, MIN(u16) as u16_out, MIN(u32) as u32_out, MIN(u64) as u64_out, MIN(f32) as f32_out, MIN(f64) as f64_out FROM WindowAggregationDifferentDataTypes_stream WINDOW TUMBLING(ts, size 100 ms) INTO CHECKSUM"
  "test_name": "window/WindowAggregationDifferentDataTypes.test"
- "query": "SELECT MAX(i8) as i8_out, MAX(i16) as i16_out, MAX(i32) as i32_out, MAX(i64) as i64_out, MAX(u8) as u8_out, MAX(u16) as u16_out, MAX(u32) as u32_out, MAX(u64) as u64_out, MAX(f32) as f32_out, MAX(f64) as f64_out FROM WindowAggregationDifferentDataTypes_stream WINDOW TUMBLING(ts, size 100 ms) INTO CHECKSUM"
  "test_name": "window/WindowAggregationDifferentDataTypes.test"
- "query": "SELECT MEDIAN(i8) as i8_out, MEDIAN(i16) as i16_out, MEDIAN(i32) as i32_out, MEDIAN(i64) as i64_out, MEDIAN(u8) as u8_out, MEDIAN(u16) as u16_out, MEDIAN(u32) as u32_out, MEDIAN(u64) as u64_out, MEDIAN(f32) as f32_out, MEDIAN(f64) as f64_out FROM WindowAggregationDifferentDataTypes_stream WINDOW TUMBLING(ts, size 100 ms) INTO CHECKSUM"
  "test_name": "window/WindowAggregationDifferentDataTypes.test"
- "query": "SELECT AVG(i8) as i8_out, MIN(i16) as i16_out, MAX(i32) as i32_out, MAX(i64) as i64_out, SUM(u8) as u8_out, SUM(u16) as u16_out, AVG(u32) as u32_out, MEDIAN(u64) as u64_out, COUNT(f32) as f32_out, MEDIAN(f64) as f64_out FROM WindowAggregationDifferentDataTypes_stream WINDOW TUMBLING(ts, size 100 ms) INTO CHECKSUM"
  "test_name": "window/WindowAggregationDifferentDataTypes.test"
- "query": "SELECT COUNT(i8) as i8_out, COUNT(i16) as i16_out, COUNT(i32) as i32_out, COUNT(i64) as i64_out, COUNT(u8) as u8_out, COUNT(u16) as u16_out, COUNT(u32) as u32_out, COUNT(u64) as u64_out, COUNT(f32) as f32_out, COUNT(f64) as f64_out FROM WindowAggregationDifferentDataTypes_stream WINDOW SLIDING(ts, size 100 ms, advance by 50 ms) INTO CHECKSUM"
  "test_name": "window/WindowAggregationDifferentDataTypes.test"
- "query": "SELECT AVG(i8) as i8_out, AVG(i16) as i16_out, AVG(i32) as i32_out, AVG(i64) as i64_out, AVG(u8) as u8_out, AVG(u16) as u16_out, AVG(u32) as u32_out, AVG(u64) as u64_out, AVG(f32) as f32_out, AVG(f64) as f64_out FROM WindowAggregationDifferentDataTypes_stream WINDOW SLIDING(ts, size 100 ms, advance by 50 ms) INTO CHECKSUM"
  "test_name": "window/WindowAggregationDifferentDataTypes.test"
- "query": "SELECT SUM(i8) as i8_out, SUM(i16) as i16_out, SUM(i32) as i32_out, SUM(i64) as i64_out, SUM(u8) as u8_out, SUM(u16) as u16_out, SUM(u32) as u32_out, SUM(u64) as u64_out, SUM(f32) as f32_out, SUM(f64) as f64_out FROM WindowAggregationDifferentDataTypes_stream WINDOW SLIDING(ts, size 100 ms, advance by 50 ms) INTO CHECKSUM"
  "test_name": "window/WindowAggregationDifferentDataTypes.test"
- "query": "SELECT MIN(i8) as i8_out, MIN(i16) as i16_out, MIN(i32) as i32_out, MIN(i64) as i64_out, MIN(u8) as u8_out, MIN(u16) as u16_out, MIN(u32) as u32_out, MIN(u64) as u64_out, MIN(f32) as f32_out, MIN(f64) as f64_out FROM WindowAggregationDifferentDataTypes_stream WINDOW SLIDING(ts, size 100 ms, advance by 50 ms) INTO CHECKSUM"
  "test_name": "window/WindowAggregationDifferentDataTypes.test"
- "query": "SELECT MAX(i8) as i8_out, MAX(i16) as i16_out, MAX(i32) as i32_out, MAX(i64) as i64_out, MAX(u8) as u8_out, MAX(u16) as u16_out, MAX(u32) as u32_out, MAX(u64) as u64_out, MAX(f32) as f32_out, MAX(f64) as f64_out FROM WindowAggregationDifferentDataTypes_stream WINDOW SLIDING(ts, size 100 ms, advance by 50 ms) INTO CHECKSUM"
  "test_name": "window/WindowAggregationDifferentDataTypes.test"
- "query": "SELECT MEDIAN(i8) as i8_out, MEDIAN(i16) as i16_out, MEDIAN(i32) as i32_out, MEDIAN(i64) as i64_out, MEDIAN(u8) as u8_out, MEDIAN(u16) as u16_out, MEDIAN(u32) as u32_out, MEDIAN(u64) as u64_out, MEDIAN(f32) as f32_out, MEDIAN(f64) as f64_out FROM WindowAggregationDifferentDataTypes_stream WINDOW SLIDING(ts, size 100 ms, advance by 50 ms) INTO CHECKSUM"
  "test_name": "window/WindowAggregationDifferentDataTypes.test"
- "query": "SELECT MIN(i8) as i8_out, SUM(i16) as i16_out, AVG(i32) as i32_out, MAX(i64) as i64_out, COUNT(u8) as u8_out, SUM(u16) as u16_out, COUNT(u32) as u32_out, MEDIAN(u64) as u64_out, MAX(f32) as f32_out, MEDIAN(f64) as f64_out FROM WindowAggregationDifferentDataTypes_stream WINDOW SLIDING(ts, size 100 ms, advance by 50 ms) INTO CHECKSUM"
  "test_name": "window/WindowAggregationDifferentDataTypes.test"
- "query": "SELECT AVG(i8) as i8_out, AVG(i16) as i16_out, AVG(i32) as i32_out, AVG(i64) as i64_out, AVG(u8) as u8_out, AVG(u16) as u16_out, AVG(u32) as u32_out, AVG(u64) as u64_out, AVG(f32) as f32_out, AVG(f64) as f64_out FROM WindowAggregationDifferentDataTypesKeyed_stream GROUP BY (keyI8, keyI16, keyU64) WINDOW TUMBLING(ts, size 200 ms) INTO CHECKSUM"
  "test_name": "window/WindowAggregationDifferentDataTypesKeyed.test"
- "query": "SELECT MIN(i8) as i8_out, MIN(i16) as i16_out, MIN(i32) as i32_out, MIN(i64) as i64_out, MIN(u8) as u8_out, MIN(u16) as u16_out, MIN(u32) as u32_out, MIN(u64) as u64_out, MIN(f32) as f32_out, MIN(f64) as f64_out FROM WindowAggregationDifferentDataTypesKeyed_stream GROUP BY (keyI8, keyI16) WINDOW TUMBLING(ts, size 200 ms) INTO CHECKSUM"
  "test_name": "window/WindowAggregationDifferentDataTypesKeyed.test"
- "query": "SELECT MEDIAN(i8) as i8_out, MEDIAN(i16) as i16_out, MEDIAN(i32) as i32_out, MEDIAN(i64) as i64_out, MEDIAN(u8) as u8_out, MEDIAN(u16) as u16_out, MEDIAN(u32) as u32_out, MEDIAN(u64) as u64_out, MEDIAN(f32) as f32_out, MEDIAN(f64) as f64_out FROM WindowAggregationDifferentDataTypesKeyed_stream GROUP BY (keyI16) WINDOW SLIDING(ts, size 200 ms, advance by 100 ms) INTO CHECKSUM"
  "test_name": "window/WindowAggregationDifferentDataTypesKeyed.test"
- "query": "SELECT SUM(value) as sumValue FROM ( SELECT SUM(value) as value FROM WindowAggregationStackedAggregations_stream GROUP BY id WINDOW TUMBLING(timestamp, size 5 sec) ) GROUP BY id WINDOW SLIDING(start, size 10 sec, advance by 5 sec) INTO CHECKSUM"
  "test_name": "window/WindowAggregationStackedAggregations.test"
- "query": "SELECT SUM(inputValue) as sumValue FROM ( SELECT SUM(value) as inputValue FROM WindowAggregationStackedAggregations_stream WHERE id < UINT32(15) GROUP BY id WINDOW TUMBLING(timestamp, size 2 sec) ) WHERE id < UINT32(10) GROUP BY id WINDOW SLIDING(start, size 1 sec, advance by 500 ms) INTO CHECKSUM"
  "test_name": "window/WindowAggregationStackedAggregations.test"
- "query": "SELECT SUM(inputValue2) as sumValue FROM ( SELECT SUM(inputValue1) as inputValue2 FROM ( SELECT SUM(value) as inputValue1 FROM WindowAggregationStackedAggregations_stream WHERE id < UINT32(15) GROUP BY id WINDOW SLIDING(timestamp, size 1 sec, advance by 500 ms) )  GROUP BY id WINDOW TUMBLING(start, size 1 sec) ) WHERE id < UINT32(10) WINDOW TUMBLING(start, size 2 sec) INTO CHECKSUM"
  "test_name": "window/WindowAggregationStackedAggregations.test"
- "query": "SELECT * FROM (SELECT * FROM JoinMultipleStreams_stream) INNER JOIN (SELECT * FROM JoinMultipleStreams_stream2) ON id = id2 WINDOW TUMBLING (timestamp, size 1 sec) INNER JOIN (SELECT * FROM JoinMultipleStreams_stream4) ON id = id4 WINDOW TUMBLING (timestamp, size 1 sec) INTO CHECKSUM"
  "test_name": "join/JoinMultipleStreams.test"
- "query": "SELECT * FROM (SELECT * FROM JoinMultipleStreams_stream) INNER JOIN (SELECT * FROM JoinMultipleStreams_stream2) ON id = id2 WINDOW TUMBLING (timestamp, size 1 sec) INNER JOIN (SELECT * FROM JoinMultipleStreams_stream4) ON id = id4 WINDOW TUMBLING (timestamp, size 1 sec) INNER JOIN (SELECT * FROM JoinMultipleStreams_stream4_1) ON id = id4_1 WINDOW TUMBLING (timestamp, size 1 sec) INTO CHECKSUM"
  "test_name": "join/JoinMultipleStreams.test"
- "query": "SELECT * FROM (SELECT * FROM JoinMultipleStreams_stream7) INNER JOIN (SELECT * FROM JoinMultipleStreams_stream7_1) ON id7 = id7_1 WINDOW SLIDING (timestamp, size 1 sec, advance by 250 ms) INTO CHECKSUM"
  "test_name": "join/JoinMultipleStreams.test"
- "query": "SELECT * FROM (SELECT * FROM JoinMultipleStreams_stream) INNER JOIN (SELECT * FROM JoinMultipleStreams_stream2) ON id = id2 WINDOW SLIDING (timestamp, size 1 sec, advance by 500 ms) INNER JOIN (SELECT * FROM JoinMultipleStreams_stream4) ON id = id4 WINDOW SLIDING (timestamp, size 1 sec, advance by 500 ms) INNER JOIN (SELECT * FROM JoinMultipleStreams_stream4_1) ON id = id4_1 WINDOW SLIDING (timestamp, size 1 sec, advance by 500 ms) INTO CHECKSUM"
  "test_name": "join/JoinMultipleStreams.test"
- "query": "SELECT * FROM (SELECT * FROM JoinWithDifferentDataTypes_stream1) JOIN (SELECT * FROM JoinWithDifferentDataTypes_stream2) ON i16_s1 = i8_s2 and i16_s1 = i16_s2 and i16_s1 = i32_s2 and i16_s1 = i64_s2 and i16_s1 = u8_s2 and i16_s1 = u16_s2 and i16_s1 = u32_s2 and i16_s1 = u64_s2 and i16_s1 = f32_s2 and i16_s1 = f64_s2 WINDOW TUMBLING (ts, size 1 sec) INTO CHECKSUM"
  "test_name": "join/JoinWithDifferentDataTypes.test"
- "query": "SELECT * FROM (SELECT * FROM JoinWithDifferentDataTypes_stream1) JOIN (SELECT * FROM JoinWithDifferentDataTypes_stream2) ON i32_s1 = i8_s2 and i32_s1 = i16_s2 and i32_s1 = i32_s2 and i32_s1 = i64_s2 and i32_s1 = u8_s2 and i32_s1 = u16_s2 and i32_s1 = u32_s2 and i32_s1 = u64_s2 and i32_s1 = f32_s2 and i32_s1 = f64_s2 WINDOW TUMBLING (ts, size 1 sec) INTO CHECKSUM"
  "test_name": "join/JoinWithDifferentDataTypes.test"
- "query": "SELECT * FROM (SELECT * FROM JoinWithDifferentDataTypes_stream1) JOIN (SELECT * FROM JoinWithDifferentDataTypes_stream2) ON i64_s1 = i8_s2 and i64_s1 = i16_s2 and i64_s1 = i32_s2 and i64_s1 = i64_s2 and i64_s1 = u8_s2 and i64_s1 = u16_s2 and i64_s1 = u32_s2 and i64_s1 = u64_s2 and i64_s1 = f32_s2 and i64_s1 = f64_s2 WINDOW TUMBLING (ts, size 1 sec) INTO CHECKSUM"
  "test_name": "join/JoinWithDifferentDataTypes.test"
- "query": "SELECT * FROM (SELECT * FROM JoinWithDifferentDataTypes_stream1) JOIN (SELECT * FROM JoinWithDifferentDataTypes_stream2) ON u8_s1 = i8_s2 and u8_s1 = i16_s2 and u8_s1 = i32_s2 and u8_s1 = i64_s2 and u8_s1 = u8_s2 and u8_s1 = u16_s2 and u8_s1 = u32_s2 and u8_s1 = u64_s2 and u8_s1 = f32_s2 and u8_s1 = f64_s2 WINDOW TUMBLING (ts, size 1 sec) INTO CHECKSUM"
  "test_name": "join/JoinWithDifferentDataTypes.test"
- "query": "SELECT * FROM (SELECT * FROM JoinWithDifferentDataTypes_stream1) JOIN (SELECT * FROM JoinWithDifferentDataTypes_stream2) ON u16_s1 = i8_s2 and u16_s1 = i16_s2 and u16_s1 = i32_s2 and u16_s1 = i64_s2 and u16_s1 = u8_s2 and u16_s1 = u16_s2 and u16_s1 = u32_s2 and u16_s1 = u64_s2 and u16_s1 = f32_s2 and u16_s1 = f64_s2 WINDOW TUMBLING (ts, size 1 sec) INTO CHECKSUM"
  "test_name": "join/JoinWithDifferentDataTypes.test"
- "query": "SELECT * FROM (SELECT * FROM JoinWithDifferentDataTypes_stream1) JOIN (SELECT * FROM JoinWithDifferentDataTypes_stream2) ON u32_s1 = i8_s2 and u32_s1 = i16_s2 and u32_s1 = i32_s2 and u32_s1 = i64_s2 and u32_s1 = u8_s2 and u32_s1 = u16_s2 and u32_s1 = u32_s2 and u32_s1 = u64_s2 and u32_s1 = f32_s2 and u32_s1 = f64_s2 WINDOW TUMBLING (ts, size 1 sec) INTO CHECKSUM"
  "test_name": "join/JoinWithDifferentDataTypes.test"
- "query": "SELECT * FROM (SELECT * FROM JoinWithDifferentDataTypes_stream1) JOIN (SELECT * FROM JoinWithDifferentDataTypes_stream2) ON u64_s1 = i8_s2 and u64_s1 = i16_s2 and u64_s1 = i32_s2 and u64_s1 = i64_s2 and u64_s1 = u8_s2 and u64_s1 = u16_s2 and u64_s1 = u32_s2 and u64_s1 = u64_s2 and u64_s1 = f32_s2 and u64_s1 = f64_s2 WINDOW TUMBLING (ts, size 1 sec) INTO CHECKSUM"
  "test_name": "join/JoinWithDifferentDataTypes.test"
- "query": "SELECT * FROM (SELECT * FROM JoinWithDifferentDataTypes_stream1) JOIN (SELECT * FROM JoinWithDifferentDataTypes_stream2) ON f32_s1 = i8_s2 and f32_s1 = i16_s2 and f32_s1 = i32_s2 and f32_s1 = i64_s2 and f32_s1 = u8_s2 and f32_s1 = u16_s2 and f32_s1 = u32_s2 and f32_s1 = u64_s2 and f32_s1 = f32_s2 and f32_s1 = f64_s2 WINDOW TUMBLING (ts, size 1 sec) INTO CHECKSUM"
  "test_name": "join/JoinWithDifferentDataTypes.test"
- "query": "SELECT * FROM (SELECT * FROM JoinWithDifferentDataTypes_stream1) JOIN (SELECT * FROM JoinWithDifferentDataTypes_stream2) ON f64_s1 = i8_s2 and f64_s1 = i16_s2 and f64_s1 = i32_s2 and f64_s1 = i64_s2 and f64_s1 = u8_s2 and f64_s1 = u16_s2 and f64_s1 = u32_s2 and f64_s1 = u64_s2 and f64_s1 = f32_s2 and f64_s1 = f64_s2 WINDOW TUMBLING (ts, size 1 sec) INTO CHECKSUM"
  "test_name": "join/JoinWithDifferentDataTypes.test"
- "query": "SELECT id + value AS id, value, timestamp FROM Map_Add_stream INTO CHECKSUM"
  "test_name": "map/Map_Add.test"
- "query": "SELECT id, value, timestamp, id + value AS new FROM Map_Add_stream INTO CHECKSUM"
  "test_name": "map/Map_Add.test"
- "query": "SELECT id + UINT64(1) + value AS id, value, timestamp FROM Map_Add_stream INTO CHECKSUM"
  "test_name": "map/Map_Add.test"
- "query": "SELECT id + UINT64(1) AS id, value, timestamp, id + value AS new, new + value AS new2 FROM Map_Add_stream INTO CHECKSUM"
  "test_name": "map/Map_Add.test"
- "query": "SELECT value + (id + UINT64(1)) + value AS new2, (id + UINT64(1)) + new2 AS id FROM Map_Add_stream INTO CHECKSUM"
  "test_name": "map/Map_Add.test"
- "query": "SELECT id / value AS id, value, timestamp FROM Map_Div_stream INTO CHECKSUM"
  "test_name": "map/Map_Div.test"
- "query": "SELECT id, value, timestamp, id / value AS new FROM Map_Div_stream INTO CHECKSUM"
  "test_name": "map/Map_Div.test"
- "query": "SELECT id / UINT32(5) AS id, value / id AS value, timestamp FROM Map_Div_stream INTO CHECKSUM"
  "test_name": "map/Map_Div.test"
- "query": "SELECT id * value AS id, value, timestamp FROM Map_Mul_stream INTO CHECKSUM"
  "test_name": "map/Map_Add.test"
- "query": "SELECT id, value, timestamp, id * value AS new FROM Map_Mul_stream INTO CHECKSUM"
  "test_name": "map/Map_Add.test"
- "query": "SELECT id * UINT32(3) AS id, id * value AS value, timestamp FROM Map_Mul_stream INTO CHECKSUM"
  "test_name": "map/Map_Add.test"
- "query": "SELECT id - value AS id, value, timestamp FROM Map_Sub_stream INTO CHECKSUM"
  "test_name": "map/Map_Sub.test"
- "query": "SELECT id, value, timestamp, id - value AS new FROM Map_Sub_stream INTO CHECKSUM"
  "test_name": "map/Map_Sub.test"
- "query": "SELECT id - UINT32(1) AS id, value - id AS value, timestamp FROM Map_Sub_stream INTO CHECKSUM"
  "test_name": "map/Map_Sub.test"
- "query": "SELECT id_x_3, value, timestamp FROM (SELECT id * UINT32(3) AS id_x_3, value, timestamp FROM Filter_Map_Queries_stream WHERE value != UINT32(1)) WHERE id_x_3 != UINT32(9) AND value != UINT32(312) INTO CHECKSUM"
  "test_name": "milestone/Filter_Map_Queries.test"
- "query": "SELECT id * UINT32(9) AS id_x_3, value, timestamp FROM Filter_Map_Queries_stream WHERE value != UINT32(1) INTO CHECKSUM"
  "test_name": "milestone/Filter_Map_Queries.test"
- "query": "SELECT id * UINT32(3) / value + value * UINT32(2) AS id_new, value * UINT32(25) - (id * UINT32(3) / value + value * UINT32(2)) * UINT32(5) - UINT32(125) AS value_new, timestamp FROM Filter_Map_Queries_stream INTO CHECKSUM"
  "test_name": "milestone/Filter_Map_Queries.test"
- "query": "SELECT value FROM Projection_stream INTO CHECKSUM"
  "test_name": "projection/Projection.test"
- "query": "SELECT timestamp FROM Projection_stream INTO CHECKSUM"
  "test_name": "projection/Projection.test"
- "query": "SELECT id, value FROM Projection_stream INTO CHECKSUM"
  "test_name": "projection/Projection.test"
- "query": "SELECT id, timestamp FROM Projection_stream INTO CHECKSUM"
  "test_name": "projection/Projection.test"
- "query": "SELECT value, timestamp FROM Projection_stream INTO CHECKSUM"
  "test_name": "projection/Projection.test"
- "query": "SELECT id, value, timestamp FROM Projection_stream INTO CHECKSUM"
  "test_name": "projection/Projection.test"
- "query": "SELECT id, timestamp, value FROM Projection_stream INTO CHECKSUM"
  "test_name": "projection/Projection.test"
- "query": "SELECT value, id, timestamp FROM Projection_stream INTO CHECKSUM"
  "test_name": "projection/Projection.test"
- "query": "SELECT value, timestamp, id FROM Projection_stream INTO CHECKSUM"
  "test_name": "projection/Projection.test"
- "query": "SELECT timestamp, id, value FROM Projection_stream INTO CHECKSUM"
  "test_name": "projection/Projection.test"
- "query": "SELECT timestamp, value, id FROM Projection_stream INTO CHECKSUM"
  "test_name": "projection/Projection.test"
- "query": "SELECT id FROM ProjectionWithFilterAndMap_stream WHERE timestamp == UINT64(1002) AND value == UINT64(1) INTO CHECKSUM"
  "test_name": "projection/ProjectionWithFilterAndMap.test"
- "query": "SELECT id FROM ProjectionWithFilterAndMap_stream WHERE id == UINT64(1) INTO CHECKSUM"
  "test_name": "projection/ProjectionWithFilterAndMap.test"
- "query": "SELECT id * UINT64(2) AS id FROM ProjectionWithFilterAndMap_stream WHERE id == UINT64(1) INTO CHECKSUM"
  "test_name": "projection/ProjectionWithFilterAndMap.test"
- "query": "SELECT new_id FROM (SELECT id * UINT64(2) AS new_id FROM ProjectionWithFilterAndMap_stream) WHERE new_id == UINT64(2) INTO CHECKSUM"
  "test_name": "projection/ProjectionWithFilterAndMap.test"
- "query": "SELECT id * UINT64(2) AS new_id FROM ProjectionWithFilterAndMap_stream WHERE id == UINT64(1) INTO CHECKSUM"
  "test_name": "projection/ProjectionWithFilterAndMap.test"
- "query": "SELECT * FROM Selection_stream WHERE value != UINT64(1) INTO CHECKSUM"
  "test_name": "selection/Selection.test"
- "query": "SELECT * FROM Selection_Equals_stream WHERE value == UINT64(1234) INTO CHECKSUM"
  "test_name": "selection/Selection_Equals.test"
- "query": "SELECT * FROM Selection_Equals_stream WHERE value == UINT64(1) AND id == UINT64(12) INTO CHECKSUM"
  "test_name": "selection/Selection_Equals.test"
- "query": "SELECT * FROM Selection_Equals_stream WHERE value == UINT64(1) AND id == UINT64(1234) INTO CHECKSUM"
  "test_name": "selection/Selection_Equals.test"
- "query": "SELECT * FROM Selection_Equals_streamWithText WHERE text1 == VARSIZED(\"test1\") INTO CHECKSUM"
  "test_name": "selection/Selection_Equals.test"
- "query": "SELECT * FROM Selection_Equals_streamWithText WHERE text1 != VARSIZED(\"test3\") AND text1 == text2 AND id < UINT64(11) INTO CHECKSUM"
  "test_name": "selection/Selection_Equals.test"
- "query": "SELECT * FROM Selection_Equals_streamWithText WHERE text1 == VARSIZED(\"test3\") AND text2 == VARSIZED(\"test1\") AND id == UINT64(11) INTO CHECKSUM"
  "test_name": "selection/Selection_Equals.test"
- "query": "SELECT * FROM Selection_Equals_streamWithText WHERE CONCAT(text1, text2) == VARSIZED(\"test1test1\") INTO CHECKSUM"
  "test_name": "selection/Selection_Equals.test"
- "query": "SELECT * FROM Selection_Equals_streamWithText WHERE CONCAT(text2, text1) == VARSIZED(\"test2test1\") AND id > UINT64(2) INTO CHECKSUM"
  "test_name": "selection/Selection_Equals.test"
- "query": "SELECT * FROM Selection_NotEquals_stream WHERE value != UINT64(1234) INTO CHECKSUM"
  "test_name": "selection/Selection_NotEquals.test"
- "query": "SELECT * FROM Selection_NotEquals_stream WHERE value != UINT64(1) AND id != UINT64(16) INTO CHECKSUM"
  "test_name": "selection/Selection_NotEquals.test"
- "query": "SELECT * FROM Selection_NotEquals_stream WHERE value != UINT64(9999) AND id != UINT64(1234) INTO CHECKSUM"
  "test_name": "selection/Selection_NotEquals.test"
- "query": "SELECT * FROM Selection_NotEquals_streamWithText WHERE text1 != VARSIZED(\"test1\") INTO CHECKSUM"
  "test_name": "selection/Selection_NotEquals.test"
- "query": "SELECT * FROM Selection_NotEquals_streamWithText WHERE text1 != VARSIZED(\"test1\") AND text2 != VARSIZED(\"test2\") INTO CHECKSUM"
  "test_name": "selection/Selection_NotEquals.test"
- "query": "SELECT * FROM Selection_NotEquals_streamWithText WHERE CONCAT(text1, text2) != VARSIZED(\"test1test1\") INTO CHECKSUM"
  "test_name": "selection/Selection_NotEquals.test"
- "query": "SELECT * FROM Selection_NotEquals_streamWithText WHERE CONCAT(text1, text2) != VARSIZED(\"test1test1\") AND id <= UINT64(8) INTO CHECKSUM"
  "test_name": "selection/Selection_NotEquals.test"
"queries_by_group":
  "Aggregation":
  - "query": "SELECT AVG(i8) as i8_out, AVG(i16) as i16_out, AVG(i32) as i32_out, AVG(i64) as i64_out, AVG(u8) as u8_out, AVG(u16) as u16_out, AVG(u32) as u32_out, AVG(u64) as u64_out, AVG(f32) as f32_out, AVG(f64) as f64_out FROM WindowAggregationDifferentDataTypes_stream WINDOW TUMBLING(ts, size 100 ms) INTO CHECKSUM"
    "test_name": "window/WindowAggregationDifferentDataTypes.test"
  - "query": "SELECT SUM(i8) as i8_out, SUM(i16) as i16_out, SUM(i32) as i32_out, SUM(i64) as i64_out, SUM(u8) as u8_out, SUM(u16) as u16_out, SUM(u32) as u32_out, SUM(u64) as u64_out, SUM(f32) as f32_out, SUM(f64) as f64_out FROM WindowAggregationDifferentDataTypes_stream WINDOW TUMBLING(ts, size 100 ms) INTO CHECKSUM"
    "test_name": "window/WindowAggregationDifferentDataTypes.test"
  - "query": "SELECT MIN(i8) as i8_out, MIN(i16) as i16_out, MIN(i32) as i32_out, MIN(i64) as i64_out, MIN(u8) as u8_out, MIN(u16) as u16_out, MIN(u32) as u32_out, MIN(u64) as u64_out, MIN(f32) as f32_out, MIN(f64) as f64_out FROM WindowAggregationDifferentDataTypes_stream WINDOW TUMBLING(ts, size 100 ms) INTO CHECKSUM"
    "test_name": "window/WindowAggregationDifferentDataTypes.test"
  - "query": "SELECT MAX(i8) as i8_out, MAX(i16) as i16_out, MAX(i32) as i32_out, MAX(i64) as i64_out, MAX(u8) as u8_out, MAX(u16) as u16_out, MAX(u32) as u32_out, MAX(u64) as u64_out, MAX(f32) as f32_out, MAX(f64) as f64_out FROM WindowAggregationDifferentDataTypes_stream WINDOW TUMBLING(ts, size 100 ms) INTO CHECKSUM"
    "test_name": "window/WindowAggregationDifferentDataTypes.test"
  - "query": "SELECT MEDIAN(i8) as i8_out, MEDIAN(i16) as i16_out, MEDIAN(i32) as i32_out, MEDIAN(i64) as i64_out, MEDIAN(u8) as u8_out, MEDIAN(u16) as u16_out, MEDIAN(u32) as u32_out, MEDIAN(u64) as u64_out, MEDIAN(f32) as f32_out, MEDIAN(f64) as f64_out FROM WindowAggregationDifferentDataTypes_stream WINDOW TUMBLING(ts, size 100 ms) INTO CHECKSUM"
    "test_name": "window/WindowAggregationDifferentDataTypes.test"
  - "query": "SELECT AVG(i8) as i8_out, MIN(i16) as i16_out, MAX(i32) as i32_out, MAX(i64) as i64_out, SUM(u8) as u8_out, SUM(u16) as u16_out, AVG(u32) as u32_out, MEDIAN(u64) as u64_out, COUNT(f32) as f32_out, MEDIAN(f64) as f64_out FROM WindowAggregationDifferentDataTypes_stream WINDOW TUMBLING(ts, size 100 ms) INTO CHECKSUM"
    "test_name": "window/WindowAggregationDifferentDataTypes.test"
  - "query": "SELECT COUNT(i8) as i8_out, COUNT(i16) as i16_out, COUNT(i32) as i32_out, COUNT(i64) as i64_out, COUNT(u8) as u8_out, COUNT(u16) as u16_out, COUNT(u32) as u32_out, COUNT(u64) as u64_out, COUNT(f32) as f32_out, COUNT(f64) as f64_out FROM WindowAggregationDifferentDataTypes_stream WINDOW SLIDING(ts, size 100 ms, advance by 50 ms) INTO CHECKSUM"
    "test_name": "window/WindowAggregationDifferentDataTypes.test"
  - "query": "SELECT AVG(i8) as i8_out, AVG(i16) as i16_out, AVG(i32) as i32_out, AVG(i64) as i64_out, AVG(u8) as u8_out, AVG(u16) as u16_out, AVG(u32) as u32_out, AVG(u64) as u64_out, AVG(f32) as f32_out, AVG(f64) as f64_out FROM WindowAggregationDifferentDataTypes_stream WINDOW SLIDING(ts, size 100 ms, advance by 50 ms) INTO CHECKSUM"
    "test_name": "window/WindowAggregationDifferentDataTypes.test"
  - "query": "SELECT SUM(i8) as i8_out, SUM(i16) as i16_out, SUM(i32) as i32_out, SUM(i64) as i64_out, SUM(u8) as u8_out, SUM(u16) as u16_out, SUM(u32) as u32_out, SUM(u64) as u64_out, SUM(f32) as f32_out, SUM(f64) as f64_out FROM WindowAggregationDifferentDataTypes_stream WINDOW SLIDING(ts, size 100 ms, advance by 50 ms) INTO CHECKSUM"
    "test_name": "window/WindowAggregationDifferentDataTypes.test"
  - "query": "SELECT MIN(i8) as i8_out, MIN(i16) as i16_out, MIN(i32) as i32_out, MIN(i64) as i64_out, MIN(u8) as u8_out, MIN(u16) as u16_out, MIN(u32) as u32_out, MIN(u64) as u64_out, MIN(f32) as f32_out, MIN(f64) as f64_out FROM WindowAggregationDifferentDataTypes_stream WINDOW SLIDING(ts, size 100 ms, advance by 50 ms) INTO CHECKSUM"
    "test_name": "window/WindowAggregationDifferentDataTypes.test"
  - "query": "SELECT MAX(i8) as i8_out, MAX(i16) as i16_out, MAX(i32) as i32_out, MAX(i64) as i64_out, MAX(u8) as u8_out, MAX(u16) as u16_out, MAX(u32) as u32_out, MAX(u64) as u64_out, MAX(f32) as f32_out, MAX(f64) as f64_out FROM WindowAggregationDifferentDataTypes_stream WINDOW SLIDING(ts, size 100 ms, advance by 50 ms) INTO CHECKSUM"
    "test_name": "window/WindowAggregationDifferentDataTypes.test"
  - "query": "SELECT MEDIAN(i8) as i8_out, MEDIAN(i16) as i16_out, MEDIAN(i32) as i32_out, MEDIAN(i64) as i64_out, MEDIAN(u8) as u8_out, MEDIAN(u16) as u16_out, MEDIAN(u32) as u32_out, MEDIAN(u64) as u64_out, MEDIAN(f32) as f32_out, MEDIAN(f64) as f64_out FROM WindowAggregationDifferentDataTypes_stream WINDOW SLIDING(ts, size 100 ms, advance by 50 ms) INTO CHECKSUM"
    "test_name": "window/WindowAggregationDifferentDataTypes.test"
  - "query": "SELECT MIN(i8) as i8_out, SUM(i16) as i16_out, AVG(i32) as i32_out, MAX(i64) as i64_out, COUNT(u8) as u8_out, SUM(u16) as u16_out, COUNT(u32) as u32_out, MEDIAN(u64) as u64_out, MAX(f32) as f32_out, MEDIAN(f64) as f64_out FROM WindowAggregationDifferentDataTypes_stream WINDOW SLIDING(ts, size 100 ms, advance by 50 ms) INTO CHECKSUM"
    "test_name": "window/WindowAggregationDifferentDataTypes.test"
  - "query": "SELECT AVG(i8) as i8_out, AVG(i16) as i16_out, AVG(i32) as i32_out, AVG(i64) as i64_out, AVG(u8) as u8_out, AVG(u16) as u16_out, AVG(u32) as u32_out, AVG(u64) as u64_out, AVG(f32) as f32_out, AVG(f64) as f64_out FROM WindowAggregationDifferentDataTypesKeyed_stream GROUP BY (keyI8, keyI16, keyU64) WINDOW TUMBLING(ts, size 200 ms) INTO CHECKSUM"
    "test_name": "window/WindowAggregationDifferentDataTypesKeyed.test"
  - "query": "SELECT MIN(i8) as i8_out, MIN(i16) as i16_out, MIN(i32) as i32_out, MIN(i64) as i64_out, MIN(u8) as u8_out, MIN(u16) as u16_out, MIN(u32) as u32_out, MIN(u64) as u64_out, MIN(f32) as f32_out, MIN(f64) as f64_out FROM WindowAggregationDifferentDataTypesKeyed_stream GROUP BY (keyI8, keyI16) WINDOW TUMBLING(ts, size 200 ms) INTO CHECKSUM"
    "test_name": "window/WindowAggregationDifferentDataTypesKeyed.test"
  - "query": "SELECT MEDIAN(i8) as i8_out, MEDIAN(i16) as i16_out, MEDIAN(i32) as i32_out, MEDIAN(i64) as i64_out, MEDIAN(u8) as u8_out, MEDIAN(u16) as u16_out, MEDIAN(u32) as u32_out, MEDIAN(u64) as u64_out, MEDIAN(f32) as f32_out, MEDIAN(f64) as f64_out FROM WindowAggregationDifferentDataTypesKeyed_stream GROUP BY (keyI16) WINDOW SLIDING(ts, size 200 ms, advance by 100 ms) INTO CHECKSUM"
    "test_name": "window/WindowAggregationDifferentDataTypesKeyed.test"
  - "query": "SELECT SUM(value) as sumValue FROM ( SELECT SUM(value) as value FROM WindowAggregationStackedAggregations_stream GROUP BY id WINDOW TUMBLING(timestamp, size 5 sec) ) GROUP BY id WINDOW SLIDING(start, size 10 sec, advance by 5 sec) INTO CHECKSUM"
    "test_name": "window/WindowAggregationStackedAggregations.test"
  - "query": "SELECT SUM(inputValue) as sumValue FROM ( SELECT SUM(value) as inputValue FROM WindowAggregationStackedAggregations_stream WHERE id < UINT32(15) GROUP BY id WINDOW TUMBLING(timestamp, size 2 sec) ) WHERE id < UINT32(10) GROUP BY id WINDOW SLIDING(start, size 1 sec, advance by 500 ms) INTO CHECKSUM"
    "test_name": "window/WindowAggregationStackedAggregations.test"
  - "query": "SELECT SUM(inputValue2) as sumValue FROM ( SELECT SUM(inputValue1) as inputValue2 FROM ( SELECT SUM(value) as inputValue1 FROM WindowAggregationStackedAggregations_stream WHERE id < UINT32(15) GROUP BY id WINDOW SLIDING(timestamp, size 1 sec, advance by 500 ms) )  GROUP BY id WINDOW TUMBLING(start, size 1 sec) ) WHERE id < UINT32(10) WINDOW TUMBLING(start, size 2 sec) INTO CHECKSUM"
    "test_name": "window/WindowAggregationStackedAggregations.test"
  - "query": "SELECT AVG(i8) as i8_out, AVG(i16) as i16_out, AVG(i32) as i32_out, AVG(i64) as i64_out, AVG(u8) as u8_out, AVG(u16) as u16_out, AVG(u32) as u32_out, AVG(u64) as u64_out, AVG(f32) as f32_out, AVG(f64) as f64_out FROM WindowAggregationDifferentDataTypes_stream WINDOW TUMBLING(ts, size 100 ms) INTO CHECKSUM"
    "test_name": "window/WindowAggregationDifferentDataTypes.test"
  - "query": "SELECT SUM(i8) as i8_out, SUM(i16) as i16_out, SUM(i32) as i32_out, SUM(i64) as i64_out, SUM(u8) as u8_out, SUM(u16) as u16_out, SUM(u32) as u32_out, SUM(u64) as u64_out, SUM(f32) as f32_out, SUM(f64) as f64_out FROM WindowAggregationDifferentDataTypes_stream WINDOW TUMBLING(ts, size 100 ms) INTO CHECKSUM"
    "test_name": "window/WindowAggregationDifferentDataTypes.test"
  - "query": "SELECT MIN(i8) as i8_out, MIN(i16) as i16_out, MIN(i32) as i32_out, MIN(i64) as i64_out, MIN(u8) as u8_out, MIN(u16) as u16_out, MIN(u32) as u32_out, MIN(u64) as u64_out, MIN(f32) as f32_out, MIN(f64) as f64_out FROM WindowAggregationDifferentDataTypes_stream WINDOW TUMBLING(ts, size 100 ms) INTO CHECKSUM"
    "test_name": "window/WindowAggregationDifferentDataTypes.test"
  - "query": "SELECT MAX(i8) as i8_out, MAX(i16) as i16_out, MAX(i32) as i32_out, MAX(i64) as i64_out, MAX(u8) as u8_out, MAX(u16) as u16_out, MAX(u32) as u32_out, MAX(u64) as u64_out, MAX(f32) as f32_out, MAX(f64) as f64_out FROM WindowAggregationDifferentDataTypes_stream WINDOW TUMBLING(ts, size 100 ms) INTO CHECKSUM"
    "test_name": "window/WindowAggregationDifferentDataTypes.test"
  - "query": "SELECT MEDIAN(i8) as i8_out, MEDIAN(i16) as i16_out, MEDIAN(i32) as i32_out, MEDIAN(i64) as i64_out, MEDIAN(u8) as u8_out, MEDIAN(u16) as u16_out, MEDIAN(u32) as u32_out, MEDIAN(u64) as u64_out, MEDIAN(f32) as f32_out, MEDIAN(f64) as f64_out FROM WindowAggregationDifferentDataTypes_stream WINDOW TUMBLING(ts, size 100 ms) INTO CHECKSUM"
    "test_name": "window/WindowAggregationDifferentDataTypes.test"
  - "query": "SELECT AVG(i8) as i8_out, MIN(i16) as i16_out, MAX(i32) as i32_out, MAX(i64) as i64_out, SUM(u8) as u8_out, SUM(u16) as u16_out, AVG(u32) as u32_out, MEDIAN(u64) as u64_out, COUNT(f32) as f32_out, MEDIAN(f64) as f64_out FROM WindowAggregationDifferentDataTypes_stream WINDOW TUMBLING(ts, size 100 ms) INTO CHECKSUM"
    "test_name": "window/WindowAggregationDifferentDataTypes.test"
  - "query": "SELECT COUNT(i8) as i8_out, COUNT(i16) as i16_out, COUNT(i32) as i32_out, COUNT(i64) as i64_out, COUNT(u8) as u8_out, COUNT(u16) as u16_out, COUNT(u32) as u32_out, COUNT(u64) as u64_out, COUNT(f32) as f32_out, COUNT(f64) as f64_out FROM WindowAggregationDifferentDataTypes_stream WINDOW SLIDING(ts, size 100 ms, advance by 50 ms) INTO CHECKSUM"
    "test_name": "window/WindowAggregationDifferentDataTypes.test"
  - "query": "SELECT AVG(i8) as i8_out, AVG(i16) as i16_out, AVG(i32) as i32_out, AVG(i64) as i64_out, AVG(u8) as u8_out, AVG(u16) as u16_out, AVG(u32) as u32_out, AVG(u64) as u64_out, AVG(f32) as f32_out, AVG(f64) as f64_out FROM WindowAggregationDifferentDataTypes_stream WINDOW SLIDING(ts, size 100 ms, advance by 50 ms) INTO CHECKSUM"
    "test_name": "window/WindowAggregationDifferentDataTypes.test"
  - "query": "SELECT SUM(i8) as i8_out, SUM(i16) as i16_out, SUM(i32) as i32_out, SUM(i64) as i64_out, SUM(u8) as u8_out, SUM(u16) as u16_out, SUM(u32) as u32_out, SUM(u64) as u64_out, SUM(f32) as f32_out, SUM(f64) as f64_out FROM WindowAggregationDifferentDataTypes_stream WINDOW SLIDING(ts, size 100 ms, advance by 50 ms) INTO CHECKSUM"
    "test_name": "window/WindowAggregationDifferentDataTypes.test"
  - "query": "SELECT MIN(i8) as i8_out, MIN(i16) as i16_out, MIN(i32) as i32_out, MIN(i64) as i64_out, MIN(u8) as u8_out, MIN(u16) as u16_out, MIN(u32) as u32_out, MIN(u64) as u64_out, MIN(f32) as f32_out, MIN(f64) as f64_out FROM WindowAggregationDifferentDataTypes_stream WINDOW SLIDING(ts, size 100 ms, advance by 50 ms) INTO CHECKSUM"
    "test_name": "window/WindowAggregationDifferentDataTypes.test"
  - "query": "SELECT MAX(i8) as i8_out, MAX(i16) as i16_out, MAX(i32) as i32_out, MAX(i64) as i64_out, MAX(u8) as u8_out, MAX(u16) as u16_out, MAX(u32) as u32_out, MAX(u64) as u64_out, MAX(f32) as f32_out, MAX(f64) as f64_out FROM WindowAggregationDifferentDataTypes_stream WINDOW SLIDING(ts, size 100 ms, advance by 50 ms) INTO CHECKSUM"
    "test_name": "window/WindowAggregationDifferentDataTypes.test"
  - "query": "SELECT MEDIAN(i8) as i8_out, MEDIAN(i16) as i16_out, MEDIAN(i32) as i32_out, MEDIAN(i64) as i64_out, MEDIAN(u8) as u8_out, MEDIAN(u16) as u16_out, MEDIAN(u32) as u32_out, MEDIAN(u64) as u64_out, MEDIAN(f32) as f32_out, MEDIAN(f64) as f64_out FROM WindowAggregationDifferentDataTypes_stream WINDOW SLIDING(ts, size 100 ms, advance by 50 ms) INTO CHECKSUM"
    "test_name": "window/WindowAggregationDifferentDataTypes.test"
  - "query": "SELECT MIN(i8) as i8_out, SUM(i16) as i16_out, AVG(i32) as i32_out, MAX(i64) as i64_out, COUNT(u8) as u8_out, SUM(u16) as u16_out, COUNT(u32) as u32_out, MEDIAN(u64) as u64_out, MAX(f32) as f32_out, MEDIAN(f64) as f64_out FROM WindowAggregationDifferentDataTypes_stream WINDOW SLIDING(ts, size 100 ms, advance by 50 ms) INTO CHECKSUM"
    "test_name": "window/WindowAggregationDifferentDataTypes.test"
  - "query": "SELECT AVG(i8) as i8_out, AVG(i16) as i16_out, AVG(i32) as i32_out, AVG(i64) as i64_out, AVG(u8) as u8_out, AVG(u16) as u16_out, AVG(u32) as u32_out, AVG(u64) as u64_out, AVG(f32) as f32_out, AVG(f64) as f64_out FROM WindowAggregationDifferentDataTypesKeyed_stream GROUP BY (keyI8, keyI16, keyU64) WINDOW TUMBLING(ts, size 200 ms) INTO CHECKSUM"
    "test_name": "window/WindowAggregationDifferentDataTypesKeyed.test"
  - "query": "SELECT MIN(i8) as i8_out, MIN(i16) as i16_out, MIN(i32) as i32_out, MIN(i64) as i64_out, MIN(u8) as u8_out, MIN(u16) as u16_out, MIN(u32) as u32_out, MIN(u64) as u64_out, MIN(f32) as f32_out, MIN(f64) as f64_out FROM WindowAggregationDifferentDataTypesKeyed_stream GROUP BY (keyI8, keyI16) WINDOW TUMBLING(ts, size 200 ms) INTO CHECKSUM"
    "test_name": "window/WindowAggregationDifferentDataTypesKeyed.test"
  - "query": "SELECT MEDIAN(i8) as i8_out, MEDIAN(i16) as i16_out, MEDIAN(i32) as i32_out, MEDIAN(i64) as i64_out, MEDIAN(u8) as u8_out, MEDIAN(u16) as u16_out, MEDIAN(u32) as u32_out, MEDIAN(u64) as u64_out, MEDIAN(f32) as f32_out, MEDIAN(f64) as f64_out FROM WindowAggregationDifferentDataTypesKeyed_stream GROUP BY (keyI16) WINDOW SLIDING(ts, size 200 ms, advance by 100 ms) INTO CHECKSUM"
    "test_name": "window/WindowAggregationDifferentDataTypesKeyed.test"
  - "query": "SELECT SUM(value) as sumValue FROM ( SELECT SUM(value) as value FROM WindowAggregationStackedAggregations_stream GROUP BY id WINDOW TUMBLING(timestamp, size 5 sec) ) GROUP BY id WINDOW SLIDING(start, size 10 sec, advance by 5 sec) INTO CHECKSUM"
    "test_name": "window/WindowAggregationStackedAggregations.test"
  - "query": "SELECT SUM(inputValue) as sumValue FROM ( SELECT SUM(value) as inputValue FROM WindowAggregationStackedAggregations_stream WHERE id < UINT32(15) GROUP BY id WINDOW TUMBLING(timestamp, size 2 sec) ) WHERE id < UINT32(10) GROUP BY id WINDOW SLIDING(start, size 1 sec, advance by 500 ms) INTO CHECKSUM"
    "test_name": "window/WindowAggregationStackedAggregations.test"
  - "query": "SELECT SUM(inputValue2) as sumValue FROM ( SELECT SUM(inputValue1) as inputValue2 FROM ( SELECT SUM(value) as inputValue1 FROM WindowAggregationStackedAggregations_stream WHERE id < UINT32(15) GROUP BY id WINDOW SLIDING(timestamp, size 1 sec, advance by 500 ms) )  GROUP BY id WINDOW TUMBLING(start, size 1 sec) ) WHERE id < UINT32(10) WINDOW TUMBLING(start, size 2 sec) INTO CHECKSUM"
    "test_name": "window/WindowAggregationStackedAggregations.test"
  "Filter":
  - "query": "SELECT id_x_3, value, timestamp FROM (SELECT id * UINT32(3) AS id_x_3, value, timestamp FROM Filter_Map_Queries_stream WHERE value != UINT32(1)) WHERE id_x_3 != UINT32(9) AND value != UINT32(312) INTO CHECKSUM"
    "test_name": "milestone/Filter_Map_Queries.test"
  - "query": "SELECT id * UINT32(9) AS id_x_3, value, timestamp FROM Filter_Map_Queries_stream WHERE value != UINT32(1) INTO CHECKSUM"
    "test_name": "milestone/Filter_Map_Queries.test"
  - "query": "SELECT id * UINT32(3) / value + value * UINT32(2) AS id_new, value * UINT32(25) - (id * UINT32(3) / value + value * UINT32(2)) * UINT32(5) - UINT32(125) AS value_new, timestamp FROM Filter_Map_Queries_stream INTO CHECKSUM"
    "test_name": "milestone/Filter_Map_Queries.test"
  - "query": "SELECT id FROM ProjectionWithFilterAndMap_stream WHERE timestamp == UINT64(1002) AND value == UINT64(1) INTO CHECKSUM"
    "test_name": "projection/ProjectionWithFilterAndMap.test"
  - "query": "SELECT id FROM ProjectionWithFilterAndMap_stream WHERE id == UINT64(1) INTO CHECKSUM"
    "test_name": "projection/ProjectionWithFilterAndMap.test"
  - "query": "SELECT id * UINT64(2) AS id FROM ProjectionWithFilterAndMap_stream WHERE id == UINT64(1) INTO CHECKSUM"
    "test_name": "projection/ProjectionWithFilterAndMap.test"
  - "query": "SELECT new_id FROM (SELECT id * UINT64(2) AS new_id FROM ProjectionWithFilterAndMap_stream) WHERE new_id == UINT64(2) INTO CHECKSUM"
    "test_name": "projection/ProjectionWithFilterAndMap.test"
  - "query": "SELECT id * UINT64(2) AS new_id FROM ProjectionWithFilterAndMap_stream WHERE id == UINT64(1) INTO CHECKSUM"
    "test_name": "projection/ProjectionWithFilterAndMap.test"
  - "query": "SELECT id_x_3, value, timestamp FROM (SELECT id * UINT32(3) AS id_x_3, value, timestamp FROM Filter_Map_Queries_stream WHERE value != UINT32(1)) WHERE id_x_3 != UINT32(9) AND value != UINT32(312) INTO CHECKSUM"
    "test_name": "milestone/Filter_Map_Queries.test"
  - "query": "SELECT id * UINT32(9) AS id_x_3, value, timestamp FROM Filter_Map_Queries_stream WHERE value != UINT32(1) INTO CHECKSUM"
    "test_name": "milestone/Filter_Map_Queries.test"
  - "query": "SELECT id * UINT32(3) / value + value * UINT32(2) AS id_new, value * UINT32(25) - (id * UINT32(3) / value + value * UINT32(2)) * UINT32(5) - UINT32(125) AS value_new, timestamp FROM Filter_Map_Queries_stream INTO CHECKSUM"
    "test_name": "milestone/Filter_Map_Queries.test"
  - "query": "SELECT id FROM ProjectionWithFilterAndMap_stream WHERE timestamp == UINT64(1002) AND value == UINT64(1) INTO CHECKSUM"
    "test_name": "projection/ProjectionWithFilterAndMap.test"
  - "query": "SELECT id FROM ProjectionWithFilterAndMap_stream WHERE id == UINT64(1) INTO CHECKSUM"
    "test_name": "projection/ProjectionWithFilterAndMap.test"
  - "query": "SELECT id * UINT64(2) AS id FROM ProjectionWithFilterAndMap_stream WHERE id == UINT64(1) INTO CHECKSUM"
    "test_name": "projection/ProjectionWithFilterAndMap.test"
  - "query": "SELECT new_id FROM (SELECT id * UINT64(2) AS new_id FROM ProjectionWithFilterAndMap_stream) WHERE new_id == UINT64(2) INTO CHECKSUM"
    "test_name": "projection/ProjectionWithFilterAndMap.test"
  - "query": "SELECT id * UINT64(2) AS new_id FROM ProjectionWithFilterAndMap_stream WHERE id == UINT64(1) INTO CHECKSUM"
    "test_name": "projection/ProjectionWithFilterAndMap.test"
  "Function":
  - "query": "SELECT i8 + i8 AS i8_i8, i8 + i8 + INT8(1) AS i8_i8_plus_1, i8 + i16 AS i8_i16, i8 + i16 + INT16(1) AS i8_i16_plus_1, i8 + i32 AS i8_i32, i8 + i32 + INT32(1) AS i8_i32_plus_1, i8 + i64 AS i8_i64, i8 + i64 + INT32(1) AS i8_i64_plus_1, i8 + u8  AS i8_u8, i8 + u8  + UINT8(1) AS i8_u8_plus_1, i8 + u16 AS i8_u16, i8 + u16 + UINT16(1) AS i8_u16_plus_1, i8 + u32 AS i8_u32, i8 + u32 + UINT32(1) AS i8_u32_plus_1, i8 + u64 AS i8_u64, i8 + u64 + UINT64(1) AS i8_u64_plus_1, i8 + f32 AS i8_f32, i8 + f32 + FLOAT32(1) AS i8_f32_plus_1, i8 + f64 AS i8_f64, i8 + f64 + FLOAT64(1) AS i8_f64_plus_1 FROM FunctionAdd_stream INTO CHECKSUM"
    "test_name": "function/arithmetical/FunctionAdd.test"
  - "query": "SELECT i16 + i8 AS i16_i8, i16 + i8 + INT8(1) AS i16_i8_plus_1, i16 + i16 AS i16_i16, i16 + i16 + INT16(1) AS i16_i16_plus_1, i16 + i32 AS i16_i32, i16 + i32 + INT32(1) AS i16_i32_plus_1, i16 + i64 AS i16_i64, i16 + i64 + INT64(1) AS i16_i64_plus_1, i16 + u8 AS i16_u8, i16 + u8 + UINT8(1) AS i16_u8_plus_1, u16 + i16 AS i16_u16, u16 + i16 + UINT16(1) AS i16_u16_plus_1, i16 + u32 AS i16_u32, i16 + u32 + UINT32(1) AS i16_u32_plus_1, i16 + u64 AS i16_u64, i16 + u64 + UINT64(1) AS i16_u64_plus_1, i16 + f32 AS i16_f32, i16 + f32 + FLOAT32(1) AS i16_f32_plus_1, i16 + f64 AS i16_f64, i16 + f64 + FLOAT64(1) AS i16_f64_plus_1 FROM FunctionAdd_stream INTO CHECKSUM"
    "test_name": "function/arithmetical/FunctionAdd.test"
  - "query": "SELECT i32 + i8 AS i32_i8, i32 + i8 + INT8(1) AS i32_i8_plus_1, i32 + i16 AS i32_i16, i32 + i16 + INT16(1) AS i32_i16_plus_1, i32 + i32 AS i32_i32, i32 + i32 + INT32(1) AS i32_i32_plus_1, i32 + i64 AS i32_i64, i32 + i64 + INT64(1) AS i32_i64_plus_1, i32 + u8 AS i32_u8, i32 + u8 + UINT8(1) AS i32_u8_plus_1, i32 + u16 AS i32_u16, i32 + u16 + UINT16(1) AS i32_u16_plus_1, i32 + u32 AS i32_u32, i32 + u32 + UINT32(1) AS i32_u32_plus_1, i32 + u64 AS i32_u64, i32 + u64 + UINT64(1) AS i32_u64_plus_1, i32 + f32 AS i32_f32, i32 + f32 + FLOAT32(1) AS i32_f32_plus_1, i32 + f64 AS i32_f64, i32 + f64 + FLOAT64(1) AS i32_f64_plus_1 FROM FunctionAdd_stream INTO CHECKSUM"
    "test_name": "function/arithmetical/FunctionAdd.test"
  - "query": "SELECT i64 + i8 AS i64_i8, i64 + i8 + INT8(1) AS i64_i8_plus_1, i64 + i16 AS i64_i16, i64 + i16 + INT16(1) AS i64_i16_plus_1, i64 + i32 AS i64_i32, i64 + i32 + INT32(1) AS i64_i32_plus_1, i64 + i64 AS i64_i64, i64 + i64 + INT64(1) AS i64_i64_plus_1, i64 + u8 AS i64_u8, i64 + u8 + UINT8(1) AS i64_u8_plus_1, i64 + u16 AS i64_u16, i64 + u16 + UINT16(1) AS i64_u16_plus_1, i64 + u32 AS i64_u32, i64 + u32 + UINT32(1) AS i64_u32_plus_1, i64 + u64 AS i64_u64, i64 + u64 + UINT64(1) AS i64_u64_plus_1, i64 + f32 AS i64_f32, i64 + f32 + FLOAT32(1) AS i64_f32_plus_1, i64 + f64 AS i64_f64, i64 + f64 + FLOAT64(1) AS i64_f64_plus_1 FROM FunctionAdd_stream INTO CHECKSUM"
    "test_name": "function/arithmetical/FunctionAdd.test"
  - "query": "SELECT (i8 == INT32(1)) and ((i16 == INT32(1)) and (i32 == INT32(1))) AS a, (i32 == INT32(1)) and ((i64 == INT32(1)) and (u8 == INT32(2))) AS b, (u8 == INT32(2)) and ((u16 == INT32(1)) and (u32 == INT32(2))) AS c, (u8 == INT32(2)) and ((u16 == INT32(1)) and (u32 == INT32(2))) AS d, (i8 == INT32(1)) and not ((i16 == INT32(1)) and (i32 == INT32(1))) AS e, (i32 == INT32(1)) and not ((i64 == INT32(1)) and (u8 == INT32(2))) AS f, (u8 == INT32(2)) and not ((u16 == INT32(1)) and (u32 == INT32(2))) AS g, (u8 == INT32(2)) and not ((u16 == INT32(1)) and (i32 == INT32(2))) AS h FROM FunctionAnd_stream INTO CHECKSUM"
    "test_name": "function/logical/FunctionAnd.test"
  - "query": "SELECT (i8 == INT32(1)) and (i16 < INT32(2)) AS a, (i32 == INT32(1)) and (i64 > INT32(0)) AS b, (u8 == INT32(2)) and (u16 <= INT32(2)) AS c, (u8 == INT32(2)) and (u16 >= INT32(2)) AS d, (i8 == INT32(1)) and not (i16 == INT32(1)) AS e, (i32 == INT32(1)) and not (i64 == INT32(1)) AS f, (u8 == INT32(2)) and not (u16 == INT32(1)) AS g, (u8 == INT32(2)) and not (u16 == INT32(2)) AS h FROM FunctionAnd_stream INTO CHECKSUM"
    "test_name": "function/logical/FunctionAnd.test"
  - "query": "SELECT (i8 == INT32(1)) and ((i16 < INT32(2)) and (i32 == INT32(1))) AS a, (i32 == INT32(1)) and ((i64 > INT32(0)) and (u8 == INT32(2))) AS b, (u8 == INT32(2)) and ((u16 <= INT32(2)) and (u32 == INT32(2))) AS c, (u8 == INT32(2)) and ((u16 >= INT32(2)) and (u32 == INT32(2))) AS d, (i8 == INT32(1)) and not ((i16 == INT32(1)) and (i32 == INT32(1))) AS e, (i32 == INT32(1)) and not ((i64 == INT32(1)) and (u8 == INT32(2))) AS f, (u8 == INT32(2)) and not ((u16 == INT32(1)) and (u32 == INT32(2))) AS g, (u8 == INT32(2)) and not ((u16 == INT32(1)) and (i32 == INT32(2))) AS h FROM FunctionAnd_stream INTO CHECKSUM"
    "test_name": "function/logical/FunctionAnd.test"
  - "query": "SELECT i8 / i8 AS i8_i8, i8 / (i8 + INT8(1)) AS i8_i8_plus_1, i8 / i16 AS i8_i16, i8 / (i16 + INT16(1)) AS i8_i16_plus_1, i8 / i32 AS i8_i32, i8 / (i32 + INT32(1)) AS i8_i32_plus_1, i8 / i64 AS i8_i64, i8 / (i64 + INT64(1)) AS i8_i64_plus_1, i8 / u8 AS i8_u8, i8 / (u8 + UINT8(1)) AS i8_u8_plus_1, i8 / u16 AS i8_u16, i8 / (u16 + UINT16(1)) AS i8_u16_plus_1, i8 / u32 AS i8_u32, i8 / (u32 + UINT32(1)) AS i8_u32_plus_1, i8 / u64 AS i8_u64, i8 / (u64 + UINT64(1)) AS i8_u64_plus_1, i8 / f32 AS i8_f32, i8 / (f32 + FLOAT32(1)) AS i8_f32_plus_1, i8 / f64 AS i8_f64, i8 / (f64 + FLOAT64(1)) AS i8_f64_plus_1 FROM modified_FunctionDiv_FunctionDiv_stream INTO CHECKSUM"
    "test_name": "function/arithmetical/FunctionDiv.test"
  - "query": "SELECT i16 / i8 AS i16_i8, i16 / (i8 + INT8(1)) AS i16_i8_plus_1, i16 / i16 AS i16_i16, i16 / (i16 + INT16(1)) AS i16_i16_plus_1, i16 / i32 AS i16_i32, i16 / (i32 + INT32(1)) AS i16_i32_plus_1, i16 / i64 AS i16_i64, i16 / (i64 + INT64(1)) AS i16_i64_plus_1, i16 / u8 AS i16_u8, i16 / (u8 + UINT8(1)) AS i16_u8_plus_1, i16 / u16 AS i16_u16, i16 / (u16 + UINT16(1)) AS i16_u16_plus_1, i16 / u32 AS i16_u32, i16 / (u32 + UINT32(1)) AS i16_u32_plus_1, i16 / u64 AS i16_u64, i16 / (u64 + UINT64(1)) AS i16_u64_plus_1, i16 / f32 AS i16_f32, i16 / (f32 + FLOAT32(1)) AS i16_f32_plus_1, i16 / f64 AS i16_f64, i16 / (f64 + FLOAT64(1)) AS i16_f64_plus_1 FROM modified_FunctionDiv_FunctionDiv_stream INTO CHECKSUM"
    "test_name": "function/arithmetical/FunctionDiv.test"
  - "query": "SELECT i32 / i8 AS i32_i8, i32 / (i8 + INT8(1)) AS i32_i8_plus_1, i32 / i16 AS i32_i16, i32 / (i16 + INT16(1)) AS i32_i16_plus_1, i32 / i32 AS i32_i32, i32 / (i32 + INT32(1)) AS i32_i32_plus_1, i32 / i64 AS i32_i64, i32 / (i64 + INT64(1)) AS i32_i64_plus_1, i32 / u8 AS i32_u8, i32 / (u8 + UINT8(1)) AS i32_u8_plus_1, i32 / u16 AS i32_u16, i32 / (u16 + UINT16(1)) AS i32_u16_plus_1, i32 / u32 AS i32_u32, i32 / (u32 + UINT32(1)) AS i32_u32_plus_1, i32 / u64 AS i32_u64, i32 / (u64 + UINT64(1)) AS i32_u64_plus_1, i32 / f32 AS i32_f32, i32 / (f32 + FLOAT32(1)) AS i32_f32_plus_1, i32 / f64 AS i32_f64, i32 / (f64 + FLOAT64(1)) AS i32_f64_plus_1 FROM modified_FunctionDiv_FunctionDiv_stream INTO CHECKSUM"
    "test_name": "function/arithmetical/FunctionDiv.test"
  - "query": "SELECT i64 / i8 AS i64_i8, i64 / (i8 + INT8(1)) AS i64_i8_plus_1, i64 / i16 AS i64_i16, i64 / (i16 + INT16(1)) AS i64_i16_plus_1, i64 / i32 AS i64_i32, i64 / (i32 + INT32(1)) AS i64_i32_plus_1, i64 / i64 AS i64_i64, i64 / (i64 + INT64(1)) AS i64_i64_plus_1, i64 / u8 AS i64_u8, i64 / (u8 + UINT8(1)) AS i64_u8_plus_1, i64 / u16 AS i64_u16, i64 / (u16 + UINT16(1)) AS i64_u16_plus_1, i64 / u32 AS i64_u32, i64 / (u32 + UINT32(1)) AS i64_u32_plus_1, i64 / u64 AS i64_u64, i64 / (u64 + UINT64(1)) AS i64_u64_plus_1, i64 / f32 AS i64_f32, i64 / (f32 + FLOAT32(1)) AS i64_f32_plus_1, i64 / f64 AS i64_f64, i64 / (f64 + FLOAT64(1)) AS i64_f64_plus_1 FROM modified_FunctionDiv_FunctionDiv_stream INTO CHECKSUM"
    "test_name": "function/arithmetical/FunctionDiv.test"
  - "query": "SELECT u8 / i8 AS u8_i8, u8 / (i8 + INT8(1)) AS u8_i8_plus_1, u8 / i16 AS u8_i16, u8 / (i16 + INT16(1)) AS u8_i16_plus_1, u8 / i32 AS u8_i32, u8 / (i32 + INT32(1)) AS u8_i32_plus_1, u8 / i64 AS u8_i64, u8 / (i64 + INT64(1)) AS u8_i64_plus_1, u8 / u8 AS u8_u8, u8 / (u8 + UINT8(1)) AS u8_u8_plus_1, u8 / u16 AS u8_u16, u8 / (u16 + UINT16(1)) AS u8_u16_plus_1, u8 / u32 AS u8_u32, u8 / (u32 + UINT32(1)) AS u8_u32_plus_1, u8 / u64 AS u8_u64, u8 / (u64 + UINT64(1)) AS u8_u64_plus_1, u8 / f32 AS u8_f32, u8 / (f32 + FLOAT32(1)) AS u8_f32_plus_1, u8 / f64 AS u8_f64, u8 / (f64 + FLOAT64(1)) AS u8_f64_plus_1 FROM modified_FunctionDiv_FunctionDiv_stream INTO CHECKSUM"
    "test_name": "function/arithmetical/FunctionDiv.test"
  - "query": "SELECT u16 / i8 AS u16_i8, u16 / (i8 + INT8(1)) AS u16_i8_plus_1, u16 / i16 AS u16_i16, u16 / (i16 + INT16(1)) AS u16_i16_plus_1, u16 / i32 AS u16_i32, u16 / (i32 + INT32(1)) AS u16_i32_plus_1, u16 / i64 AS u16_i64, u16 / (i64 + INT64(1)) AS u16_i64_plus_1, u16 / u8 AS u16_u8, u16 / (u8 + UINT8(1)) AS u16_u8_plus_1, u16 / u16 AS u16_u16, u16 / (u16 + UINT16(1)) AS u16_u16_plus_1, u16 / u32 AS u16_u32, u16 / (u32 + UINT32(1)) AS u16_u32_plus_1, u16 / u64 AS u16_u64, u16 / (u64 + UINT64(1)) AS u16_u64_plus_1, u16 / f32 AS u16_f32, u16 / (f32 + FLOAT32(1)) AS u16_f32_plus_1, u16 / f64 AS u16_f64, u16 / (f64 + FLOAT64(1)) AS u16_f64_plus_1 FROM modified_FunctionDiv_FunctionDiv_stream INTO CHECKSUM"
    "test_name": "function/arithmetical/FunctionDiv.test"
  - "query": "SELECT u32 / i8 AS u32_i8, u32 / (i8 + INT8(1)) AS u32_i8_plus_1, u32 / i16 AS u32_i16, u32 / (i16 + INT16(1)) AS u32_i16_plus_1, u32 / i32 AS u32_i32, u32 / (i32 + INT32(1)) AS u32_i32_plus_1, u32 / i64 AS u32_i64, u32 / (i64 + INT64(1)) AS u32_i64_plus_1, u32 / u8 AS u32_u8, u32 / (u8 + UINT8(1)) AS u32_u8_plus_1, u32 / u16 AS u32_u16, u32 / (u16 + UINT16(1)) AS u32_u16_plus_1, u32 / u32 AS u32_u32, u32 / (u32 + UINT32(1)) AS u32_u32_plus_1, u32 / u64 AS u32_u64, u32 / (u64 + UINT64(1)) AS u32_u64_plus_1, u32 / f32 AS u32_f32, u32 / (f32 + FLOAT32(1)) AS u32_f32_plus_1, u32 / f64 AS u32_f64, u32 / (f64 + FLOAT64(1)) AS u32_f64_plus_1 FROM modified_FunctionDiv_FunctionDiv_stream INTO CHECKSUM"
    "test_name": "function/arithmetical/FunctionDiv.test"
  - "query": "SELECT u64 / i8 AS u64_i8, u64 / (i8 + INT8(1)) AS u64_i8_plus_1, u64 / i16 AS u64_i16, u64 / (i16 + INT16(1)) AS u64_i16_plus_1, u64 / i32 AS u64_i32, u64 / (i32 + INT32(1)) AS u64_i32_plus_1, u64 / i64 AS u64_i64, u64 / (i64 + INT64(1)) AS u64_i64_plus_1, u64 / u8 AS u64_u8, u64 / (u8 + UINT8(1)) AS u64_u8_plus_1, u64 / u16 AS u64_u16, u64 / (u16 + UINT16(1)) AS u64_u16_plus_1, u64 / u32 AS u64_u32, u64 / (u32 + UINT32(1)) AS u64_u32_plus_1, u64 / u64 AS u64_u64, u64 / (u64 + UINT64(1)) AS u64_u64_plus_1, u64 / f32 AS u64_f32, u64 / (f32 + FLOAT32(1)) AS u64_f32_plus_1, u64 / f64 AS u64_f64, u64 / (f64 + FLOAT64(1)) AS u64_f64_plus_1 FROM modified_FunctionDiv_FunctionDiv_stream INTO CHECKSUM"
    "test_name": "function/arithmetical/FunctionDiv.test"
  - "query": "SELECT f32 / i8 AS f32_i8, f32 / (i8 + INT8(1)) AS f32_i8_plus_1, f32 / i16 AS f32_i16, f32 / (i16 + INT16(1)) AS f32_i16_plus_1, f32 / i32 AS f32_i32, f32 / (i32 + INT32(1)) AS f32_i32_plus_1, f32 / i64 AS f32_i64, f32 / (i64 + INT64(1)) AS f32_i64_plus_1, f32 / u8 AS f32_u8, f32 / (u8 + UINT8(1)) AS f32_u8_plus_1, f32 / u16 AS f32_u16, f32 / (u16 + UINT16(1)) AS f32_u16_plus_1, f32 / u32 AS f32_u32, f32 / (u32 + UINT32(1)) AS f32_u32_plus_1, f32 / u64 AS f32_u64, f32 / (u64 + UINT64(1)) AS f32_u64_plus_1, f32 / f32 AS f32_f32, f32 / (f32 + FLOAT32(1)) AS f32_f32_plus_1, f32 / f64 AS f32_f64, f32 / (f64 + FLOAT64(1)) AS f32_f64_plus_1 FROM modified_FunctionDiv_FunctionDiv_stream INTO CHECKSUM"
    "test_name": "function/arithmetical/FunctionDiv.test"
  - "query": "SELECT f64 / i8 AS f64_i8, f64 / (i8 + INT8(1)) AS f64_i8_plus_1, f64 / i16 AS f64_i16, f64 / (i16 + INT16(1)) AS f64_i16_plus_1, f64 / i32 AS f64_i32, f64 / (i32 + INT32(1)) AS f64_i32_plus_1, f64 / i64 AS f64_i64, f64 / (i64 + INT64(1)) AS f64_i64_plus_1, f64 / u8 AS f64_u8, f64 / (u8 + UINT8(1)) AS f64_u8_plus_1, f64 / u16 AS f64_u16, f64 / (u16 + UINT16(1)) AS f64_u16_plus_1, f64 / u32 AS f64_u32, f64 / (u32 + UINT32(1)) AS f64_u32_plus_1, f64 / u64 AS f64_u64, f64 / (u64 + UINT64(1)) AS f64_u64_plus_1, f64 / f32 AS f64_f32, f64 / (f32 + FLOAT32(1)) AS f64_f32_plus_1, f64 / f64 AS f64_f64, f64 / (f64 + FLOAT64(1)) AS f64_f64_plus_1 FROM modified_FunctionDiv_FunctionDiv_stream INTO CHECKSUM"
    "test_name": "function/arithmetical/FunctionDiv.test"
  - "query": "SELECT i8 == i8 AS bool1, i8 == i8 + INT8(1) AS bool2, i8 == i16 AS bool3, i8 == i16 + INT16(1) AS bool4, i8 == i32 AS bool5, i8 == i32 + INT32(1) AS bool6, i8 == i64 AS bool7, i8 == i64 + INT64(1) AS bool8, i8 == u8 AS bool9, i8 == u8 + UINT8(1) AS bool10, i8 == u16 AS bool11, i8 == u16 + UINT16(1) AS bool12, i8 == u32 AS bool13, i8 == u32 + UINT32(1) AS bool14, i8 == u64 AS bool15, i8 == u64 + UINT64(1) AS bool16, i8 == f32 AS bool17, i8 == f32 + FLOAT32(1) AS bool18, i8 == f64 AS bool19, i8 == f64 + FLOAT64(1) AS bool20 FROM FunctionEqual_stream INTO CHECKSUM"
    "test_name": "function/logical/FunctionEqual.test"
  - "query": "SELECT i16 == i8 AS bool1, i16 == i8 + INT8(1) AS bool2, i16 == i16 AS bool3, i16 == i16 + INT16(1) AS bool4, i16 == i32 AS bool5, i16 == i32 + INT32(1) AS bool6, i16 == i64 AS bool7, i16 == i64 + INT64(1) AS bool8, i16 == u8 AS bool9, i16 == u8 + UINT8(1) AS bool10, i16 == u16 AS bool11, i16 == u16 + UINT16(1) AS bool12, i16 == u32 AS bool13, i16 == u32 + UINT32(1) AS bool14, i16 == u64 AS bool15, i16 == u64 + UINT64(1) AS bool16, i16 == f32 AS bool17, i16 == f32 + FLOAT32(1) AS bool18, i16 == f64 AS bool19, i16 == f64 + FLOAT64(1) AS bool20 FROM FunctionEqual_stream INTO CHECKSUM"
    "test_name": "function/logical/FunctionEqual.test"
  - "query": "SELECT i32 == i8 AS bool1, i32 == i8 + INT8(1) AS bool2, i32 == i16 AS bool3, i32 == i16 + INT16(1) AS bool4, i32 == i32 AS bool5, i32 == i32 + INT32(1) AS bool6, i32 == i64 AS bool7, i32 == i64 + INT64(1) AS bool8, i32 == u8 AS bool9, i32 == u8 + UINT8(1) AS bool10, i32 == u16 AS bool11, i32 == u16 + UINT16(1) AS bool12, i32 == u32 AS bool13, i32 == u32 + UINT32(1) AS bool14, i32 == u64 AS bool15, i32 == u64 + UINT64(1) AS bool16, i32 == f32 AS bool17, i32 == f32 + FLOAT32(1) AS bool18, i32 == f64 AS bool19, i32 == f64 + FLOAT64(1) AS bool20 FROM FunctionEqual_stream INTO CHECKSUM"
    "test_name": "function/logical/FunctionEqual.test"
  - "query": "SELECT i64 == i8 AS bool1, i64 == i8 + INT8(1) AS bool2, i64 == i16 AS bool3, i64 == i16 + INT16(1) AS bool4, i64 == i32 AS bool5, i64 == i32 + INT32(1) AS bool6, i64 == i64 AS bool7, i64 == i64 + INT64(1) AS bool8, i64 == u8 AS bool9, i64 == u8 + UINT8(1) AS bool10, i64 == u16 AS bool11, i64 == u16 + UINT16(1) AS bool12, i64 == u32 AS bool13, i64 == u32 + UINT32(1) AS bool14, i64 == u64 AS bool15, i64 == u64 + UINT64(1) AS bool16, i64 == f32 AS bool17, i64 == f32 + FLOAT32(1) AS bool18, i64 == f64 AS bool19, i64 == f64 + FLOAT64(1) AS bool20 FROM FunctionEqual_stream INTO CHECKSUM"
    "test_name": "function/logical/FunctionEqual.test"
  - "query": "SELECT i8 > i8 AS i8_i8, i8 > i8 + INT8(1) AS i8_i8_plus_1, i8 > i16 AS i8_i16, i8 > i16 + INT16(1) AS i8_i16_plus_1, i8 > i32 AS i8_i32, i8 > i32 + INT32(1) AS i8_i32_plus_1, i8 > i64 AS i8_i64, i8 > i64 + INT64(1) AS i8_i64_plus_1, i8 > u8  AS i8_u8, i8 > u8 + UINT8(1) AS i8_u8_plus_1, i8 > u16 AS i8_u16, i8 > u16 + UINT16(1) AS i8_u16_plus_1, i8 > u32 AS i8_u32, i8 > u32 + UINT32(1) AS i8_u32_plus_1, i8 > u64 AS i8_u64, i8 > u64 + UINT64(1) AS i8_u64_plus_1, i8 > f32 AS i8_f32, i8 > f32 + FLOAT32(1) AS i8_f32_plus_1, i8 > f64 AS i8_f64, i8 > f64 + FLOAT64(1) AS i8_f64_plus_1 FROM FunctionGreater_stream INTO CHECKSUM"
    "test_name": "function/comparison/FunctionGreater.test"
  - "query": "SELECT i16 > i8 AS i16_i8, i16 > i8 + INT8(1) AS i16_i8_plus_1, i16 > i16 AS i16_i16, i16 > i16 + INT16(1) AS i16_i16_plus_1, i16 > i32 AS i16_i32, i16 > i32 + INT32(1) AS i16_i32_plus_1, i16 > i64 AS i16_i64, i16 > i64 + INT64(1) AS i16_i64_plus_1, i16 > u8 AS i16_u8, i16 > u8 + UINT8(1) AS i16_u8_plus_1, u16 > i16 AS i16_u16, u16 > i16 + INT16(1) AS i16_u16_plus_1, i16 > u32 AS i16_u32, i16 > u32 + UINT32(1) AS i16_u32_plus_1, i16 > u64 AS i16_u64, i16 > u64 + UINT64(1) AS i16_u64_plus_1, i16 > f32 AS i16_f32, i16 > f32 + FLOAT32(1) AS i16_f32_plus_1, i16 > f64 AS i16_f64, i16 > f64 + FLOAT64(1) AS i16_f64_plus_1 FROM FunctionGreater_stream INTO CHECKSUM"
    "test_name": "function/comparison/FunctionGreater.test"
  - "query": "SELECT i32 > i8 AS i32_i8, i32 > i8 + INT8(1) AS i32_i8_plus_1, i32 > i16 AS i32_i16, i32 > i16 + INT16(1) AS i32_i16_plus_1, i32 > i32 AS i32_i32, i32 > i32 + INT32(1) AS i32_i32_plus_1, i32 > i64 AS i32_i64, i32 > i64 + INT64(1) AS i32_i64_plus_1, i32 > u8 AS i32_u8, i32 > u8 + UINT8(1) AS i32_u8_plus_1, i32 > u16 AS i32_u16, i32 > u16 + UINT16(1) AS i32_u16_plus_1, i32 > u32 AS i32_u32, i32 > u32 + UINT32(1) AS i32_u32_plus_1, i32 > u64 AS i32_u64, i32 > u64 + UINT64(1) AS i32_u64_plus_1, i32 > f32 AS i32_f32, i32 > f32 + FLOAT32(1) AS i32_f32_plus_1, i32 > f64 AS i32_f64, i32 > f64 + FLOAT64(1) AS i32_f64_plus_1 FROM FunctionGreater_stream INTO CHECKSUM"
    "test_name": "function/comparison/FunctionGreater.test"
  - "query": "SELECT i64 > i8 AS i64_i8, i64 > i8 + INT8(1) AS i64_i8_plus_1, i64 > i16 AS i64_i16, i64 > i16 + INT16(1) AS i64_i16_plus_1, i64 > i32 AS i64_i32, i64 > i32 + INT32(1) AS i64_i32_plus_1, i64 > i64 AS i64_i64, i64 > i64 + INT64(1) AS i64_i64_plus_1, i64 > u8 AS i64_u8, i64 > u8 + UINT8(1) AS i64_u8_plus_1, i64 > u16 AS i64_u16, i64 > u16 + UINT16(1) AS i64_u16_plus_1, i64 > u32 AS i64_u32, i64 > u32 + UINT32(1) AS i64_u32_plus_1, i64 > u64 AS i64_u64, i64 > u64 + UINT64(1) AS i64_u64_plus_1, i64 > f32 AS i64_f32, i64 > f32 + FLOAT32(1) AS i64_f32_plus_1, i64 > f64 AS i64_f64, i64 > f64 + FLOAT64(1) AS i64_f64_plus_1 FROM FunctionGreater_stream INTO CHECKSUM"
    "test_name": "function/comparison/FunctionGreater.test"
  - "query": "SELECT u8 > i8 AS u8_i8, u8 > i8 + INT8(1) AS u8_i8_plus_1, u8 > i16 AS u8_i16, u8 > i16 + INT16(1) AS u8_i16_plus_1, u8 > i32 AS u8_i32, u8 > i32 + INT32(1) AS u8_i32_plus_1, u8 > i64 AS u8_i64, u8 > i64 + INT64(1) AS u8_i64_plus_1, u8 > u8  AS u8_u8, u8 > u8 + UINT8(1) AS u8_u8_plus_1, u8 > u16 AS u8_u16, u8 > u16 + UINT16(1) AS u8_u16_plus_1, u8 > u32 AS u8_u32, u8 > u32 + UINT32(1) AS u8_u32_plus_1, u8 > u64 AS u8_u64, u8 > u64 + UINT64(1) AS u8_u64_plus_1, u8 > f32 AS u8_f32, u8 > f32 + FLOAT32(1) AS u8_f32_plus_1, u8 > f64 AS u8_f64, u8 > f64 + FLOAT64(1) AS u8_f64_plus_1 FROM FunctionGreater_stream INTO CHECKSUM"
    "test_name": "function/comparison/FunctionGreater.test"
  - "query": "SELECT u16 > i8 AS u16_i8, u16 > i8 + INT8(1) AS u16_i8_plus_1, u16 > i16 AS u16_i16, u16 > i16 + INT16(1) AS u16_i16_plus_1, u16 > i32 AS u16_i32, u16 > i32 + INT32(1) AS u16_i32_plus_1, u16 > i64 AS u16_i64, u16 > i64 + INT64(1) AS u16_i64_plus_1, u16 > u8 AS u16_u8, u16 > u8 + UINT8(1) AS u16_u8_plus_1, u16 > i16 AS u16_u16, u16 > i16 + INT16(1) AS u16_u16_plus_1, u16 > u32 AS u16_u32, u16 > u32 + UINT32(1) AS u16_u32_plus_1, u16 > u64 AS u16_u64, u16 > u64 + UINT64(1) AS u16_u64_plus_1, u16 > f32 AS u16_f32, u16 > f32 + FLOAT32(1) AS u16_f32_plus_1, u16 > f64 AS u16_f64, u16 > f64 + FLOAT64(1) AS u16_f64_plus_1 FROM FunctionGreater_stream INTO CHECKSUM"
    "test_name": "function/comparison/FunctionGreater.test"
  - "query": "SELECT u32 > i8 AS u32_i8, u32 > i8 + INT8(1) AS u32_i8_plus_1, u32 > i16 AS u32_i16, u32 > i16 + INT16(1) AS u32_i16_plus_1, u32 > i32 AS u32_i32, u32 > i32 + INT32(1) AS u32_i32_plus_1, u32 > i64 AS u32_i64, u32 > i64 + INT64(1) AS u32_i64_plus_1, u32 > u8 AS u32_u8, u32 > u8 + UINT8(1) AS u32_u8_plus_1, u32 > u16 AS u32_u16, u32 > u16 + UINT16(1) AS u32_u16_plus_1, u32 > u32 AS u32_u32, u32 > u32 + UINT32(1) AS u32_u32_plus_1, u32 > u64 AS u32_u64, u32 > u64 + UINT64(1) AS u32_u64_plus_1, u32 > f32 AS u32_f32, u32 > f32 + FLOAT32(1) AS u32_f32_plus_1, u32 > f64 AS u32_f64, u32 > f64 + FLOAT64(1) AS u32_f64_plus_1 FROM FunctionGreater_stream INTO CHECKSUM"
    "test_name": "function/comparison/FunctionGreater.test"
  - "query": "SELECT u64 > i8 AS u64_i8, u64 > i8 + INT8(1) AS u64_i8_plus_1, u64 > i16 AS u64_i16, u64 > i16 + INT16(1) AS u64_i16_plus_1, u64 > i32 AS u64_i32, u64 > i32 + INT32(1) AS u64_i32_plus_1, u64 > i64 AS u64_i64, u64 > i64 + INT64(1) AS u64_i64_plus_1, u64 > u8 AS u64_u8, u64 > u8 + UINT8(1) AS u64_u8_plus_1, u64 > u16 AS u64_u16, u64 > u16 + UINT16(1) AS u64_u16_plus_1, u64 > u32 AS u64_u32, u64 > u32 + UINT32(1) AS u64_u32_plus_1, u64 > u64 AS u64_u64, u64 > u64 + UINT64(1) AS u64_u64_plus_1, u64 > f32 AS u64_f32, u64 > f32 + FLOAT32(1) AS u64_f32_plus_1, u64 > f64 AS u64_f64, u64 > f64 + FLOAT64(1) AS u64_f64_plus_1 FROM FunctionGreater_stream INTO CHECKSUM"
    "test_name": "function/comparison/FunctionGreater.test"
  - "query": "SELECT i8 >= i8 AS i8_i8, i8 >= i8 + INT8(1) AS i8_i8_plus_1, i8 >= i16 AS i8_i16, i8 >= i16 + INT16(1) AS i8_i16_plus_1, i8 >= i32 AS i8_i32, i8 >= i32 + INT32(1) AS i8_i32_plus_1, i8 >= i64 AS i8_i64, i8 >= i64 + INT64(1) AS i8_i64_plus_1, i8 >= u8  AS i8_u8, i8 >= u8 + UINT8(1) AS i8_u8_plus_1, i8 >= u16 AS i8_u16, i8 >= u16 + UINT16(1) AS i8_u16_plus_1, i8 >= u32 AS i8_u32, i8 >= u32 + UINT32(1) AS i8_u32_plus_1, i8 >= u64 AS i8_u64, i8 >= u64 + UINT64(1) AS i8_u64_plus_1, i8 >= f32 AS i8_f32, i8 >= f32 + FLOAT32(1) AS i8_f32_plus_1, i8 >= f64 AS i8_f64, i8 >= f64 + FLOAT64(1) AS i8_f64_plus_1 FROM FunctionGreaterEquals_stream INTO CHECKSUM"
    "test_name": "function/comparison/FunctionGreaterEquals.test"
  - "query": "SELECT i16 >= i8 AS i16_i8, i16 >= i8 + INT8(1) AS i16_i8_plus_1, i16 >= i16 AS i16_i16, i16 >= i16 + INT16(1) AS i16_i16_plus_1, i16 >= i32 AS i16_i32, i16 >= i32 + INT32(1) AS i16_i32_plus_1, i16 >= i64 AS i16_i64, i16 >= i64 + INT64(1) AS i16_i64_plus_1, i16 >= u8 AS i16_u8, i16 >= u8 + UINT8(1) AS i16_u8_plus_1, u16 >= i16 AS i16_u16, u16 >= i16 + INT16(1) AS i16_u16_plus_1, i16 >= u32 AS i16_u32, i16 >= u32 + UINT32(1) AS i16_u32_plus_1, i16 >= u64 AS i16_u64, i16 >= u64 + UINT64(1) AS i16_u64_plus_1, i16 >= f32 AS i16_f32, i16 >= f32 + FLOAT32(1) AS i16_f32_plus_1, i16 >= f64 AS i16_f64, i16 >= f64 + FLOAT64(1) AS i16_f64_plus_1 FROM FunctionGreaterEquals_stream INTO CHECKSUM"
    "test_name": "function/comparison/FunctionGreaterEquals.test"
  - "query": "SELECT i32 >= i8 AS i32_i8, i32 >= i8 + INT8(1) AS i32_i8_plus_1, i32 >= i16 AS i32_i16, i32 >= i16 + INT16(1) AS i32_i16_plus_1, i32 >= i32 AS i32_i32, i32 >= i32 + INT32(1) AS i32_i32_plus_1, i32 >= i64 AS i32_i64, i32 >= i64 + INT64(1) AS i32_i64_plus_1, i32 >= u8 AS i32_u8, i32 >= u8 + UINT8(1) AS i32_u8_plus_1, i32 >= u16 AS i32_u16, i32 >= u16 + UINT16(1) AS i32_u16_plus_1, i32 >= u32 AS i32_u32, i32 >= u32 + UINT32(1) AS i32_u32_plus_1, i32 >= u64 AS i32_u64, i32 >= u64 + UINT64(1) AS i32_u64_plus_1, i32 >= f32 AS i32_f32, i32 >= f32 + FLOAT32(1) AS i32_f32_plus_1, i32 >= f64 AS i32_f64, i32 >= f64 + FLOAT64(1) AS i32_f64_plus_1 FROM FunctionGreaterEquals_stream INTO CHECKSUM"
    "test_name": "function/comparison/FunctionGreaterEquals.test"
  - "query": "SELECT i64 >= i8 AS i64_i8, i64 >= i8 + INT8(1) AS i64_i8_plus_1, i64 >= i16 AS i64_i16, i64 >= i16 + INT16(1) AS i64_i16_plus_1, i64 >= i32 AS i64_i32, i64 >= i32 + INT32(1) AS i64_i32_plus_1, i64 >= i64 AS i64_i64, i64 >= i64 + INT64(1) AS i64_i64_plus_1, i64 >= u8 AS i64_u8, i64 >= u8 + UINT8(1) AS i64_u8_plus_1, i64 >= u16 AS i64_u16, i64 >= u16 + UINT16(1) AS i64_u16_plus_1, i64 >= u32 AS i64_u32, i64 >= u32 + UINT32(1) AS i64_u32_plus_1, i64 >= u64 AS i64_u64, i64 >= u64 + UINT64(1) AS i64_u64_plus_1, i64 >= f32 AS i64_f32, i64 >= f32 + FLOAT32(1) AS i64_f32_plus_1, i64 >= f64 AS i64_f64, i64 >= f64 + FLOAT64(1) AS i64_f64_plus_1 FROM FunctionGreaterEquals_stream INTO CHECKSUM"
    "test_name": "function/comparison/FunctionGreaterEquals.test"
  - "query": "SELECT u8 >= i8 AS u8_i8, u8 >= i8 + INT8(1) AS u8_i8_plus_1, u8 >= i16 AS u8_i16, u8 >= i16 + INT16(1) AS u8_i16_plus_1, u8 >= i32 AS u8_i32, u8 >= i32 + INT32(1) AS u8_i32_plus_1, u8 >= i64 AS u8_i64, u8 >= i64 + INT64(1) AS u8_i64_plus_1, u8 >= u8  AS u8_u8, u8 >= u8 + UINT8(1) AS u8_u8_plus_1, u8 >= u16 AS u8_u16, u8 >= u16 + UINT16(1) AS u8_u16_plus_1, u8 >= u32 AS u8_u32, u8 >= u32 + UINT32(1) AS u8_u32_plus_1, u8 >= u64 AS u8_u64, u8 >= u64 + UINT64(1) AS u8_u64_plus_1, u8 >= f32 AS u8_f32, u8 >= f32 + FLOAT32(1) AS u8_f32_plus_1, u8 >= f64 AS u8_f64, u8 >= f64 + FLOAT64(1) AS u8_f64_plus_1 FROM FunctionGreaterEquals_stream INTO CHECKSUM"
    "test_name": "function/comparison/FunctionGreaterEquals.test"
  - "query": "SELECT u16 >= i8 AS u16_i8, u16 >= i8 + INT8(1) AS u16_i8_plus_1, u16 >= i16 AS u16_i16, u16 >= i16 + INT16(1) AS u16_i16_plus_1, u16 >= i32 AS u16_i32, u16 >= i32 + INT32(1) AS u16_i32_plus_1, u16 >= i64 AS u16_i64, u16 >= i64 + INT64(1) AS u16_i64_plus_1, u16 >= u8 AS u16_u8, u16 >= u8 + UINT8(1) AS u16_u8_plus_1, u16 >= i16 AS u16_u16, u16 >= i16 + INT16(1) AS u16_u16_plus_1, u16 >= u32 AS u16_u32, u16 >= u32 + UINT32(1) AS u16_u32_plus_1, u16 >= u64 AS u16_u64, u16 >= u64 + UINT64(1) AS u16_u64_plus_1, u16 >= f32 AS u16_f32, u16 >= f32 + FLOAT32(1) AS u16_f32_plus_1, u16 >= f64 AS u16_f64, u16 >= f64 + FLOAT64(1) AS u16_f64_plus_1 FROM FunctionGreaterEquals_stream INTO CHECKSUM"
    "test_name": "function/comparison/FunctionGreaterEquals.test"
  - "query": "SELECT u32 >= i8 AS u32_i8, u32 >= i8 + INT8(1) AS u32_i8_plus_1, u32 >= i16 AS u32_i16, u32 >= i16 + INT16(1) AS u32_i16_plus_1, u32 >= i32 AS u32_i32, u32 >= i32 + INT32(1) AS u32_i32_plus_1, u32 >= i64 AS u32_i64, u32 >= i64 + INT64(1) AS u32_i64_plus_1, u32 >= u8 AS u32_u8, u32 >= u8 + UINT8(1) AS u32_u8_plus_1, u32 >= u16 AS u32_u16, u32 >= u16 + UINT16(1) AS u32_u16_plus_1, u32 >= u32 AS u32_u32, u32 >= u32 + UINT32(1) AS u32_u32_plus_1, u32 >= u64 AS u32_u64, u32 >= u64 + UINT64(1) AS u32_u64_plus_1, u32 >= f32 AS u32_f32, u32 >= f32 + FLOAT32(1) AS u32_f32_plus_1, u32 >= f64 AS u32_f64, u32 >= f64 + FLOAT64(1) AS u32_f64_plus_1 FROM FunctionGreaterEquals_stream INTO CHECKSUM"
    "test_name": "function/comparison/FunctionGreaterEquals.test"
  - "query": "SELECT u64 >= i8 AS u64_i8, u64 >= i8 + INT8(1) AS u64_i8_plus_1, u64 >= i16 AS u64_i16, u64 >= i16 + INT16(1) AS u64_i16_plus_1, u64 >= i32 AS u64_i32, u64 >= i32 + INT32(1) AS u64_i32_plus_1, u64 >= i64 AS u64_i64, u64 >= i64 + INT64(1) AS u64_i64_plus_1, u64 >= u8 AS u64_u8, u64 >= u8 + UINT8(1) AS u64_u8_plus_1, u64 >= u16 AS u64_u16, u64 >= u16 + UINT16(1) AS u64_u16_plus_1, u64 >= u32 AS u64_u32, u64 >= u32 + UINT32(1) AS u64_u32_plus_1, u64 >= u64 AS u64_u64, u64 >= u64 + UINT64(1) AS u64_u64_plus_1, u64 >= f32 AS u64_f32, u64 >= f32 + FLOAT32(1) AS u64_f32_plus_1, u64 >= f64 AS u64_f64, u64 >= f64 + FLOAT64(1) AS u64_f64_plus_1 FROM FunctionGreaterEquals_stream INTO CHECKSUM"
    "test_name": "function/comparison/FunctionGreaterEquals.test"
  - "query": "SELECT i8 < i8 AS i8_i8, i8 < i8 + INT8(1) AS i8_i8_plus_1, i8 < i16 AS i8_i16, i8 < i16 + INT16(1) AS i8_i16_plus_1, i8 < i32 AS i8_i32, i8 < i32 + INT32(1) AS i8_i32_plus_1, i8 < i64 AS i8_i64, i8 < i64 + INT64(1) AS i8_i64_plus_1, i8 < u8  AS i8_u8, i8 < u8 + UINT8(1) AS i8_u8_plus_1, i8 < u16 AS i8_u16, i8 < u16 + UINT16(1) AS i8_u16_plus_1, i8 < u32 AS i8_u32, i8 < u32 + UINT32(1) AS i8_u32_plus_1, i8 < u64 AS i8_u64, i8 < u64 + UINT64(1) AS i8_u64_plus_1, i8 < f32 AS i8_f32, i8 < f32 + FLOAT32(1) AS i8_f32_plus_1, i8 < f64 AS i8_f64, i8 < f64 + FLOAT64(1) AS i8_f64_plus_1 FROM FunctionLess_stream INTO CHECKSUM"
    "test_name": "function/comparison/FunctionLess.test"
  - "query": "SELECT i16 < i8 AS i16_i8, i16 < i8 + INT8(1) AS i16_i8_plus_1, i16 < i16 AS i16_i16, i16 < i16 + INT16(1) AS i16_i16_plus_1, i16 < i32 AS i16_i32, i16 < i32 + INT32(1) AS i16_i32_plus_1, i16 < i64 AS i16_i64, i16 < i64 + INT64(1) AS i16_i64_plus_1, i16 < u8 AS i16_u8, i16 < u8 + UINT8(1) AS i16_u8_plus_1, u16 < i16 AS i16_u16, u16 < i16 + INT16(1) AS i16_u16_plus_1, i16 < u32 AS i16_u32, i16 < u32 + UINT32(1) AS i16_u32_plus_1, i16 < u64 AS i16_u64, i16 < u64 + UINT64(1) AS i16_u64_plus_1, i16 < f32 AS i16_f32, i16 < f32 + FLOAT32(1) AS i16_f32_plus_1, i16 < f64 AS i16_f64, i16 < f64 + FLOAT64(1) AS i16_f64_plus_1 FROM FunctionLess_stream INTO CHECKSUM"
    "test_name": "function/comparison/FunctionLess.test"
  - "query": "SELECT i32 < i8 AS i32_i8, i32 < i8 + INT8(1) AS i32_i8_plus_1, i32 < i16 AS i32_i16, i32 < i16 + INT16(1) AS i32_i16_plus_1, i32 < i32 AS i32_i32, i32 < i32 + INT32(1) AS i32_i32_plus_1, i32 < i64 AS i32_i64, i32 < i64 + INT64(1) AS i32_i64_plus_1, i32 < u8 AS i32_u8, i32 < u8 + UINT8(1) AS i32_u8_plus_1, i32 < u16 AS i32_u16, i32 < u16 + UINT16(1) AS i32_u16_plus_1, i32 < u32 AS i32_u32, i32 < u32 + UINT32(1) AS i32_u32_plus_1, i32 < u64 AS i32_u64, i32 < u64 + UINT64(1) AS i32_u64_plus_1, i32 < f32 AS i32_f32, i32 < f32 + FLOAT32(1) AS i32_f32_plus_1, i32 < f64 AS i32_f64, i32 < f64 + FLOAT64(1) AS i32_f64_plus_1 FROM FunctionLess_stream INTO CHECKSUM"
    "test_name": "function/comparison/FunctionLess.test"
  - "query": "SELECT i64 < i8 AS i64_i8, i64 < i8 + INT8(1) AS i64_i8_plus_1, i64 < i16 AS i64_i16, i64 < i16 + INT16(1) AS i64_i16_plus_1, i64 < i32 AS i64_i32, i64 < i32 + INT32(1) AS i64_i32_plus_1, i64 < i64 AS i64_i64, i64 < i64 + INT64(1) AS i64_i64_plus_1, i64 < u8 AS i64_u8, i64 < u8 + UINT8(1) AS i64_u8_plus_1, i64 < u16 AS i64_u16, i64 < u16 + UINT16(1) AS i64_u16_plus_1, i64 < u32 AS i64_u32, i64 < u32 + UINT32(1) AS i64_u32_plus_1, i64 < u64 AS i64_u64, i64 < u64 + UINT64(1) AS i64_u64_plus_1, i64 < f32 AS i64_f32, i64 < f32 + FLOAT32(1) AS i64_f32_plus_1, i64 < f64 AS i64_f64, i64 < f64 + FLOAT64(1) AS i64_f64_plus_1 FROM FunctionLess_stream INTO CHECKSUM"
    "test_name": "function/comparison/FunctionLess.test"
  - "query": "SELECT u8 < i8 AS u8_i8, u8 < i8 + INT8(1) AS u8_i8_plus_1, u8 < i16 AS u8_i16, u8 < i16 + INT16(1) AS u8_i16_plus_1, u8 < i32 AS u8_i32, u8 < i32 + INT32(1) AS u8_i32_plus_1, u8 < i64 AS u8_i64, u8 < i64 + INT64(1) AS u8_i64_plus_1, u8 < u8  AS u8_u8, u8 < u8 + UINT8(1) AS u8_u8_plus_1, u8 < u16 AS u8_u16, u8 < u16 + UINT16(1) AS u8_u16_plus_1, u8 < u32 AS u8_u32, u8 < u32 + UINT32(1) AS u8_u32_plus_1, u8 < u64 AS u8_u64, u8 < u64 + UINT64(1) AS u8_u64_plus_1, u8 < f32 AS u8_f32, u8 < f32 + FLOAT32(1) AS u8_f32_plus_1, u8 < f64 AS u8_f64, u8 < f64 + FLOAT64(1) AS u8_f64_plus_1 FROM FunctionLess_stream INTO CHECKSUM"
    "test_name": "function/comparison/FunctionLess.test"
  - "query": "SELECT u16 < i8 AS u16_i8, u16 < i8 + INT8(1) AS u16_i8_plus_1, u16 < i16 AS u16_i16, u16 < i16 + INT16(1) AS u16_i16_plus_1, u16 < i32 AS u16_i32, u16 < i32 + INT32(1) AS u16_i32_plus_1, u16 < i64 AS u16_i64, u16 < i64 + INT64(1) AS u16_i64_plus_1, u16 < u8 AS u16_u8, u16 < u8 + UINT8(1) AS u16_u8_plus_1, u16 < i16 AS u16_u16, u16 < i16 + INT16(1) AS u16_u16_plus_1, u16 < u32 AS u16_u32, u16 < u32 + UINT32(1) AS u16_u32_plus_1, u16 < u64 AS u16_u64, u16 < u64 + UINT64(1) AS u16_u64_plus_1, u16 < f32 AS u16_f32, u16 < f32 + FLOAT32(1) AS u16_f32_plus_1, u16 < f64 AS u16_f64, u16 < f64 + FLOAT64(1) AS u16_f64_plus_1 FROM FunctionLess_stream INTO CHECKSUM"
    "test_name": "function/comparison/FunctionLess.test"
  - "query": "SELECT u32 < i8 AS u32_i8, u32 < i8 + INT8(1) AS u32_i8_plus_1, u32 < i16 AS u32_i16, u32 < i16 + INT16(1) AS u32_i16_plus_1, u32 < i32 AS u32_i32, u32 < i32 + INT32(1) AS u32_i32_plus_1, u32 < i64 AS u32_i64, u32 < i64 + INT64(1) AS u32_i64_plus_1, u32 < u8 AS u32_u8, u32 < u8 + UINT8(1) AS u32_u8_plus_1, u32 < u16 AS u32_u16, u32 < u16 + UINT16(1) AS u32_u16_plus_1, u32 < u32 AS u32_u32, u32 < u32 + UINT32(1) AS u32_u32_plus_1, u32 < u64 AS u32_u64, u32 < u64 + UINT64(1) AS u32_u64_plus_1, u32 < f32 AS u32_f32, u32 < f32 + FLOAT32(1) AS u32_f32_plus_1, u32 < f64 AS u32_f64, u32 < f64 + FLOAT64(1) AS u32_f64_plus_1 FROM FunctionLess_stream INTO CHECKSUM"
    "test_name": "function/comparison/FunctionLess.test"
  - "query": "SELECT u64 < i8 AS u64_i8, u64 < i8 + INT8(1) AS u64_i8_plus_1, u64 < i16 AS u64_i16, u64 < i16 + INT16(1) AS u64_i16_plus_1, u64 < i32 AS u64_i32, u64 < i32 + INT32(1) AS u64_i32_plus_1, u64 < i64 AS u64_i64, u64 < i64 + INT64(1) AS u64_i64_plus_1, u64 < u8 AS u64_u8, u64 < u8 + UINT8(1) AS u64_u8_plus_1, u64 < u16 AS u64_u16, u64 < u16 + UINT16(1) AS u64_u16_plus_1, u64 < u32 AS u64_u32, u64 < u32 + UINT32(1) AS u64_u32_plus_1, u64 < u64 AS u64_u64, u64 < u64 + UINT64(1) AS u64_u64_plus_1, u64 < f32 AS u64_f32, u64 < f32 + FLOAT32(1) AS u64_f32_plus_1, u64 < f64 AS u64_f64, u64 < f64 + FLOAT64(1) AS u64_f64_plus_1 FROM FunctionLess_stream INTO CHECKSUM"
    "test_name": "function/comparison/FunctionLess.test"
  - "query": "SELECT i8 <= i8 AS i8_i8, i8 <= i8 + INT8(1) AS i8_i8_plus_1, i8 <= i16 AS i8_i16, i8 <= i16 + INT16(1) AS i8_i16_plus_1, i8 <= i32 AS i8_i32, i8 <= i32 + INT32(1) AS i8_i32_plus_1, i8 <= i64 AS i8_i64, i8 <= i64 + INT64(1) AS i8_i64_plus_1, i8 <= u8  AS i8_u8, i8 <= u8 + UINT8(1) AS i8_u8_plus_1, i8 <= u16 AS i8_u16, i8 <= u16 + UINT16(1) AS i8_u16_plus_1, i8 <= u32 AS i8_u32, i8 <= u32 + UINT32(1) AS i8_u32_plus_1, i8 <= u64 AS i8_u64, i8 <= u64 + UINT64(1) AS i8_u64_plus_1, i8 <= f32 AS i8_f32, i8 <= f32 + FLOAT32(1) AS i8_f32_plus_1, i8 <= f64 AS i8_f64, i8 <= f64 + FLOAT64(1) AS i8_f64_plus_1 FROM FunctionLessEquals_stream INTO CHECKSUM"
    "test_name": "function/comparison/FunctionLessEquals.test"
  - "query": "SELECT i16 <= i8 AS i16_i8, i16 <= i8 + INT8(1) AS i16_i8_plus_1, i16 <= i16 AS i16_i16, i16 <= i16 + INT16(1) AS i16_i16_plus_1, i16 <= i32 AS i16_i32, i16 <= i32 + INT32(1) AS i16_i32_plus_1, i16 <= i64 AS i16_i64, i16 <= i64 + INT64(1) AS i16_i64_plus_1, i16 <= u8 AS i16_u8, i16 <= u8 + UINT8(1) AS i16_u8_plus_1, u16 <= i16 AS i16_u16, u16 <= i16 + INT16(1) AS i16_u16_plus_1, i16 <= u32 AS i16_u32, i16 <= u32 + UINT32(1) AS i16_u32_plus_1, i16 <= u64 AS i16_u64, i16 <= u64 + UINT64(1) AS i16_u64_plus_1, i16 <= f32 AS i16_f32, i16 <= f32 + FLOAT32(1) AS i16_f32_plus_1, i16 <= f64 AS i16_f64, i16 <= f64 + FLOAT64(1) AS i16_f64_plus_1 FROM FunctionLessEquals_stream INTO CHECKSUM"
    "test_name": "function/comparison/FunctionLessEquals.test"
  - "query": "SELECT i32 <= i8 AS i32_i8, i32 <= i8 + INT8(1) AS i32_i8_plus_1, i32 <= i16 AS i32_i16, i32 <= i16 + INT16(1) AS i32_i16_plus_1, i32 <= i32 AS i32_i32, i32 <= i32 + INT32(1) AS i32_i32_plus_1, i32 <= i64 AS i32_i64, i32 <= i64 + INT64(1) AS i32_i64_plus_1, i32 <= u8 AS i32_u8, i32 <= u8 + UINT8(1) AS i32_u8_plus_1, i32 <= u16 AS i32_u16, i32 <= u16 + UINT16(1) AS i32_u16_plus_1, i32 <= u32 AS i32_u32, i32 <= u32 + UINT32(1) AS i32_u32_plus_1, i32 <= u64 AS i32_u64, i32 <= u64 + UINT64(1) AS i32_u64_plus_1, i32 <= f32 AS i32_f32, i32 <= f32 + FLOAT32(1) AS i32_f32_plus_1, i32 <= f64 AS i32_f64, i32 <= f64 + FLOAT64(1) AS i32_f64_plus_1 FROM FunctionLessEquals_stream INTO CHECKSUM"
    "test_name": "function/comparison/FunctionLessEquals.test"
  - "query": "SELECT i64 <= i8 AS i64_i8, i64 <= i8 + INT8(1) AS i64_i8_plus_1, i64 <= i16 AS i64_i16, i64 <= i16 + INT16(1) AS i64_i16_plus_1, i64 <= i32 AS i64_i32, i64 <= i32 + INT32(1) AS i64_i32_plus_1, i64 <= i64 AS i64_i64, i64 <= i64 + INT64(1) AS i64_i64_plus_1, i64 <= u8 AS i64_u8, i64 <= u8 + UINT8(1) AS i64_u8_plus_1, i64 <= u16 AS i64_u16, i64 <= u16 + UINT16(1) AS i64_u16_plus_1, i64 <= u32 AS i64_u32, i64 <= u32 + UINT32(1) AS i64_u32_plus_1, i64 <= u64 AS i64_u64, i64 <= u64 + UINT64(1) AS i64_u64_plus_1, i64 <= f32 AS i64_f32, i64 <= f32 + FLOAT32(1) AS i64_f32_plus_1, i64 <= f64 AS i64_f64, i64 <= f64 + FLOAT64(1) AS i64_f64_plus_1 FROM FunctionLessEquals_stream INTO CHECKSUM"
    "test_name": "function/comparison/FunctionLessEquals.test"
  - "query": "SELECT u8 <= i8 AS u8_i8, u8 <= i8 + INT8(1) AS u8_i8_plus_1, u8 <= i16 AS u8_i16, u8 <= i16 + INT16(1) AS u8_i16_plus_1, u8 <= i32 AS u8_i32, u8 <= i32 + INT32(1) AS u8_i32_plus_1, u8 <= i64 AS u8_i64, u8 <= i64 + INT64(1) AS u8_i64_plus_1, u8 <= u8  AS u8_u8, u8 <= u8 + UINT8(1) AS u8_u8_plus_1, u8 <= u16 AS u8_u16, u8 <= u16 + UINT16(1) AS u8_u16_plus_1, u8 <= u32 AS u8_u32, u8 <= u32 + UINT32(1) AS u8_u32_plus_1, u8 <= u64 AS u8_u64, u8 <= u64 + UINT64(1) AS u8_u64_plus_1, u8 <= f32 AS u8_f32, u8 <= f32 + FLOAT32(1) AS u8_f32_plus_1, u8 <= f64 AS u8_f64, u8 <= f64 + FLOAT64(1) AS u8_f64_plus_1 FROM FunctionLessEquals_stream INTO CHECKSUM"
    "test_name": "function/comparison/FunctionLessEquals.test"
  - "query": "SELECT u16 <= i8 AS u16_i8, u16 <= i8 + INT8(1) AS u16_i8_plus_1, u16 <= i16 AS u16_i16, u16 <= i16 + INT16(1) AS u16_i16_plus_1, u16 <= i32 AS u16_i32, u16 <= i32 + INT32(1) AS u16_i32_plus_1, u16 <= i64 AS u16_i64, u16 <= i64 + INT64(1) AS u16_i64_plus_1, u16 <= u8 AS u16_u8, u16 <= u8 + UINT8(1) AS u16_u8_plus_1, u16 <= i16 AS u16_u16, u16 <= i16 + INT16(1) AS u16_u16_plus_1, u16 <= u32 AS u16_u32, u16 <= u32 + UINT32(1) AS u16_u32_plus_1, u16 <= u64 AS u16_u64, u16 <= u64 + UINT64(1) AS u16_u64_plus_1, u16 <= f32 AS u16_f32, u16 <= f32 + FLOAT32(1) AS u16_f32_plus_1, u16 <= f64 AS u16_f64, u16 <= f64 + FLOAT64(1) AS u16_f64_plus_1 FROM FunctionLessEquals_stream INTO CHECKSUM"
    "test_name": "function/comparison/FunctionLessEquals.test"
  - "query": "SELECT u32 <= i8 AS u32_i8, u32 <= i8 + INT8(1) AS u32_i8_plus_1, u32 <= i16 AS u32_i16, u32 <= i16 + INT16(1) AS u32_i16_plus_1, u32 <= i32 AS u32_i32, u32 <= i32 + INT32(1) AS u32_i32_plus_1, u32 <= i64 AS u32_i64, u32 <= i64 + INT64(1) AS u32_i64_plus_1, u32 <= u8 AS u32_u8, u32 <= u8 + UINT8(1) AS u32_u8_plus_1, u32 <= u16 AS u32_u16, u32 <= u16 + UINT16(1) AS u32_u16_plus_1, u32 <= u32 AS u32_u32, u32 <= u32 + UINT32(1) AS u32_u32_plus_1, u32 <= u64 AS u32_u64, u32 <= u64 + UINT64(1) AS u32_u64_plus_1, u32 <= f32 AS u32_f32, u32 <= f32 + FLOAT32(1) AS u32_f32_plus_1, u32 <= f64 AS u32_f64, u32 <= f64 + FLOAT64(1) AS u32_f64_plus_1 FROM FunctionLessEquals_stream INTO CHECKSUM"
    "test_name": "function/comparison/FunctionLessEquals.test"
  - "query": "SELECT u64 <= i8 AS u64_i8, u64 <= i8 + INT8(1) AS u64_i8_plus_1, u64 <= i16 AS u64_i16, u64 <= i16 + INT16(1) AS u64_i16_plus_1, u64 <= i32 AS u64_i32, u64 <= i32 + INT32(1) AS u64_i32_plus_1, u64 <= i64 AS u64_i64, u64 <= i64 + INT64(1) AS u64_i64_plus_1, u64 <= u8 AS u64_u8, u64 <= u8 + UINT8(1) AS u64_u8_plus_1, u64 <= u16 AS u64_u16, u64 <= u16 + UINT16(1) AS u64_u16_plus_1, u64 <= u32 AS u64_u32, u64 <= u32 + UINT32(1) AS u64_u32_plus_1, u64 <= u64 AS u64_u64, u64 <= u64 + UINT64(1) AS u64_u64_plus_1, u64 <= f32 AS u64_f32, u64 <= f32 + FLOAT32(1) AS u64_f32_plus_1, u64 <= f64 AS u64_f64, u64 <= f64 + FLOAT64(1) AS u64_f64_plus_1 FROM FunctionLessEquals_stream INTO CHECKSUM"
    "test_name": "function/comparison/FunctionLessEquals.test"
  - "query": "SELECT i8 % i8 AS i8_i8, i8 % (i8 + INT8(1)) AS i8_i8_plus_1, i8 % i16 AS i8_i16, i8 % (i16 + INT16(1)) AS i8_i16_plus_1, i8 % i32 AS i8_i32, i8 % (i32 + INT32(1)) AS i8_i32_plus_1, i8 % i64 AS i8_i64, i8 % (i64 + INT64(1)) AS i8_i64_plus_1, i8 % u8 AS i8_u8, i8 % (u8 + UINT8(1)) AS i8_u8_plus_1, i8 % u16 AS i8_u16, i8 % (u16 + UINT16(1)) AS i8_u16_plus_1, i8 % u32 AS i8_u32, i8 % (u32 + UINT32(1)) AS i8_u32_plus_1, i8 % u64 AS i8_u64, i8 % (u64 + UINT64(1)) AS i8_u64_plus_1 FROM FunctionModulo_stream INTO CHECKSUM"
    "test_name": "function/arithmetical/FunctionModulo.test"
  - "query": "SELECT i16 % i8 AS i16_i8, i16 % (i8 + INT8(1)) AS i16_i8_plus_1, i16 % i16 AS i16_i16, i16 % (i16 + INT16(1)) AS i16_i16_plus_1, i16 % i32 AS i16_i32, i16 % (i32 + INT32(1)) AS i16_i32_plus_1, i16 % i64 AS i16_i64, i16 % (i64 + INT64(1)) AS i16_i64_plus_1, i16 % u8 AS i16_u8, i16 % (u8 + UINT8(1)) AS i16_u8_plus_1, i16 % u16 AS i16_u16, i16 % (u16 + UINT16(1)) AS i16_u16_plus_1, i16 % u32 AS i16_u32, i16 % (u32 + UINT32(1)) AS i16_u32_plus_1, i16 % u64 AS i16_u64, i16 % (u64 + UINT64(1)) AS i16_u64_plus_1 FROM FunctionModulo_stream INTO CHECKSUM"
    "test_name": "function/arithmetical/FunctionModulo.test"
  - "query": "SELECT i32 % i8 AS i32_i8, i32 % (i8 + INT8(1)) AS i32_i8_plus_1, i32 % i16 AS i32_i16, i32 % (i16 + INT16(1)) AS i32_i16_plus_1, i32 % i32 AS i32_i32, i32 % (i32 + INT32(1)) AS i32_i32_plus_1, i32 % i64 AS i32_i64, i32 % (i64 + INT64(1)) AS i32_i64_plus_1, i32 % u8 AS i32_u8, i32 % (u8 + UINT8(1)) AS i32_u8_plus_1, i32 % u16 AS i32_u16, i32 % (u16 + UINT16(1)) AS i32_u16_plus_1, i32 % u32 AS i32_u32, i32 % (u32 + UINT32(1)) AS i32_u32_plus_1, i32 % u64 AS i32_u64, i32 % (u64 + UINT64(1)) AS i32_u64_plus_1 FROM FunctionModulo_stream INTO CHECKSUM"
    "test_name": "function/arithmetical/FunctionModulo.test"
  - "query": "SELECT i64 % i8 AS i64_i8, i64 % (i8 + INT8(1)) AS i64_i8_plus_1, i64 % i16 AS i64_i16, i64 % (i16 + INT16(1)) AS i64_i16_plus_1, i64 % i32 AS i64_i32, i64 % (i32 + INT32(1)) AS i64_i32_plus_1, i64 % i64 AS i64_i64, i64 % (i64 + INT64(1)) AS i64_i64_plus_1, i64 % u8 AS i64_u8, i64 % (u8 + UINT8(1)) AS i64_u8_plus_1, i64 % u16 AS i64_u16, i64 % (u16 + UINT16(1)) AS i64_u16_plus_1, i64 % u32 AS i64_u32, i64 % (u32 + UINT32(1)) AS i64_u32_plus_1, i64 % u64 AS i64_u64, i64 % (u64 + UINT64(1)) AS i64_u64_plus_1 FROM FunctionModulo_stream INTO CHECKSUM"
    "test_name": "function/arithmetical/FunctionModulo.test"
  - "query": "SELECT u8 % i8 AS u8_i8, u8 % (i8 + INT8(1)) AS u8_i8_plus_1, u8 % i16 AS u8_i16, u8 % (i16 + INT16(1)) AS u8_i16_plus_1, u8 % i32 AS u8_i32, u8 % (i32 + INT32(1)) AS u8_i32_plus_1, u8 % i64 AS u8_i64, u8 % (i64 + INT64(1)) AS u8_i64_plus_1, u8 % u8 AS u8_u8, u8 % (u8 + UINT8(1)) AS u8_u8_plus_1, u8 % u16 AS u8_u16, u8 % (u16 + UINT16(1)) AS u8_u16_plus_1, u8 % u32 AS u8_u32, u8 % (u32 + UINT32(1)) AS u8_u32_plus_1, u8 % u64 AS u8_u64, u8 % (u64 + UINT64(1)) AS u8_u64_plus_1 FROM FunctionModulo_stream INTO CHECKSUM"
    "test_name": "function/arithmetical/FunctionModulo.test"
  - "query": "SELECT u16 % i8 AS u16_i8, u16 % (i8 + INT8(1)) AS u16_i8_plus_1, u16 % i16 AS u16_i16, u16 % (i16 + INT16(1)) AS u16_i16_plus_1, u16 % i32 AS u16_i32, u16 % (i32 + INT32(1)) AS u16_i32_plus_1, u16 % i64 AS u16_i64, u16 % (i64 + INT64(1)) AS u16_i64_plus_1, u16 % u8 AS u16_u8, u16 % (u8 + UINT8(1)) AS u16_u8_plus_1, u16 % u16 AS u16_u16, u16 % (u16 + UINT16(1)) AS u16_u16_plus_1, u16 % u32 AS u16_u32, u16 % (u32 + UINT32(1)) AS u16_u32_plus_1, u16 % u64 AS u16_u64, u16 % (u64 + UINT64(1)) AS u16_u64_plus_1 FROM FunctionModulo_stream INTO CHECKSUM"
    "test_name": "function/arithmetical/FunctionModulo.test"
  - "query": "SELECT u32 % i8 AS u32_i8, u32 % (i8 + INT8(1)) AS u32_i8_plus_1, u32 % i16 AS u32_i16, u32 % (i16 + INT16(1)) AS u32_i16_plus_1, u32 % i32 AS u32_i32, u32 % (i32 + INT32(1)) AS u32_i32_plus_1, u32 % i64 AS u32_i64, u32 % (i64 + INT64(1)) AS u32_i64_plus_1, u32 % u8 AS u32_u8, u32 % (u8 + UINT8(1)) AS u32_u8_plus_1, u32 % u16 AS u32_u16, u32 % (u16 + UINT16(1)) AS u32_u16_plus_1, u32 % u32 AS u32_u32, u32 % (u32 + UINT32(1)) AS u32_u32_plus_1, u32 % u64 AS u32_u64, u32 % (u64 + UINT64(1)) AS u32_u64_plus_1 FROM FunctionModulo_stream INTO CHECKSUM"
    "test_name": "function/arithmetical/FunctionModulo.test"
  - "query": "SELECT u64 % i8 AS u64_i8, u64 % (i8 + INT8(1)) AS u64_i8_plus_1, u64 % i16 AS u64_i16, u64 % (i16 + INT16(1)) AS u64_i16_plus_1, u64 % i32 AS u64_i32, u64 % (i32 + INT32(1)) AS u64_i32_plus_1, u64 % i64 AS u64_i64, u64 % (i64 + INT64(1)) AS u64_i64_plus_1, u64 % u8 AS u64_u8, u64 % (u8 + UINT8(1)) AS u64_u8_plus_1, u64 % u16 AS u64_u16, u64 % (u16 + UINT16(1)) AS u64_u16_plus_1, u64 % u32 AS u64_u32, u64 % (u32 + UINT32(1)) AS u64_u32_plus_1, u64 % u64 AS u64_u64, u64 % (u64 + UINT64(1)) AS u64_u64_plus_1 FROM FunctionModulo_stream INTO CHECKSUM"
    "test_name": "function/arithmetical/FunctionModulo.test"
  - "query": "SELECT i8 * i8 AS i8_i8, i8 * (i8 + INT32(1)) AS i8_i8_plus_1, i8 * i16 AS i8_i16, i8 * (i16 + INT32(1)) AS i8_i16_plus_1, i8 * i32 AS i8_i32, i8 * (i32 + INT32(1)) AS i8_i32_plus_1, i8 * i64 AS i8_i64, i8 * (i64 + INT32(1)) AS i8_i64_plus_1, i8 * u8 AS i8_u8, i8 * (u8 + UINT8(1)) AS i8_u8_plus_1, i8 * u16 AS i8_u16, i8 * (u16 + UINT16(1)) AS i8_u16_plus_1, i8 * u32 AS i8_u32, i8 * (u32 + UINT32(1)) AS i8_u32_plus_1, i8 * u64 AS i8_u64, i8 * (u64 + UINT64(1)) AS i8_u64_plus_1, i8 * f32 AS i8_f32, i8 * (f32 + FLOAT32(1)) AS i8_f32_plus_1, i8 * f64 AS i8_f64, i8 * (f64 + FLOAT64(1)) AS i8_f64_plus_1 FROM FunctionMul_stream INTO CHECKSUM"
    "test_name": "function/arithmetical/FunctionMul.test"
  - "query": "SELECT i16 * i8 AS i16_i8, i16 * (i8 + INT8(1)) AS i16_i8_plus_1, i16 * i16 AS i16_i16, i16 * (i16 + INT16(1)) AS i16_i16_plus_1, i16 * i32 AS i16_i32, i16 * (i32 + INT32(1)) AS i16_i32_plus_1, i16 * i64 AS i16_i64, i16 * (i64 + INT64(1)) AS i16_i64_plus_1, i16 * u8 AS i16_u8, i16 * (u8 + UINT8(1)) AS i16_u8_plus_1, i16 * u16 AS i16_u16, i16 * (u16 + UINT16(1)) AS i16_u16_plus_1, i16 * u32 AS i16_u32, i16 * (u32 + UINT32(1)) AS i16_u32_plus_1, i16 * u64 AS i16_u64, i16 * (u64 + UINT64(1)) AS i16_u64_plus_1, i16 * f32 AS i16_f32, i16 * (f32 + FLOAT32(1)) AS i16_f32_plus_1, i16 * f64 AS i16_f64, i16 * (f64 + FLOAT64(1)) AS i16_f64_plus_1 FROM FunctionMul_stream INTO CHECKSUM"
    "test_name": "function/arithmetical/FunctionMul.test"
  - "query": "SELECT i32 * i8 AS i32_i8, i32 * (i8 + INT8(1)) AS i32_i8_plus_1, i32 * i16 AS i32_i16, i32 * (i16 + INT16(1)) AS i32_i16_plus_1, i32 * i32 AS i32_i32, i32 * (i32 + INT32(1)) AS i32_i32_plus_1, i32 * i64 AS i32_i64, i32 * (i64 + INT64(1)) AS i32_i64_plus_1, i32 * u8 AS i32_u8, i32 * (u8 + UINT8(1)) AS i32_u8_plus_1, i32 * u16 AS i32_u16, i32 * (u16 + UINT16(1)) AS i32_u16_plus_1, i32 * u32 AS i32_u32, i32 * (u32 + UINT32(1)) AS i32_u32_plus_1, i32 * u64 AS i32_u64, i32 * (u64 + UINT64(1)) AS i32_u64_plus_1, i32 * f32 AS i32_f32, i32 * (f32 + FLOAT32(1)) AS i32_f32_plus_1, i32 * f64 AS i32_f64, i32 * (f64 + FLOAT64(1)) AS i32_f64_plus_1 FROM FunctionMul_stream INTO CHECKSUM"
    "test_name": "function/arithmetical/FunctionMul.test"
  - "query": "SELECT i64 * i8 AS i64_i8, i64 * (i8 + INT8(1)) AS i64_i8_plus_1, i64 * i16 AS i64_i16, i64 * (i16 + INT16(1)) AS i64_i16_plus_1, i64 * i32 AS i64_i32, i64 * (i32 + INT32(1)) AS i64_i32_plus_1, i64 * i64 AS i64_i64, i64 * (i64 + INT64(1)) AS i64_i64_plus_1, i64 * u8 AS i64_u8, i64 * (u8 + UINT8(1)) AS i64_u8_plus_1, i64 * u16 AS i64_u16, i64 * (u16 + UINT16(1)) AS i64_u16_plus_1, i64 * u32 AS i64_u32, i64 * (u32 + UINT32(1)) AS i64_u32_plus_1, i64 * u64 AS i64_u64, i64 * (u64 + UINT64(1)) AS i64_u64_plus_1, i64 * f32 AS i64_f32, i64 * (f32 + FLOAT32(1)) AS i64_f32_plus_1, i64 * f64 AS i64_f64, i64 * (f64 + FLOAT64(1)) AS i64_f64_plus_1 FROM FunctionMul_stream INTO CHECKSUM"
    "test_name": "function/arithmetical/FunctionMul.test"
  - "query": "SELECT i8 != i8 AS bool1, i8 != i8 + INT8(1) AS bool2, i8 != i16 AS bool3, i8 != i16 + INT16(1) AS bool4, i8 != i32 AS bool5, i8 != i32 + INT32(1) AS bool6, i8 != i64 AS bool7, i8 != i64 + INT64(1) AS bool8, i8 != u8 AS bool9, i8 != u8 + UINT8(1) AS bool10, i8 != u16 AS bool11, i8 != u16 + UINT16(1) AS bool12, i8 != u32 AS bool13, i8 != u32 + UINT32(1) AS bool14, i8 != u64 AS bool15, i8 != u64 + UINT64(1) AS bool16, i8 != f32 AS bool17, i8 != f32 + FLOAT32(1) AS bool18, i8 != f64 AS bool19, i8 != f64 + FLOAT64(1) AS bool20 FROM FunctionNotEqual_stream INTO CHECKSUM"
    "test_name": "function/logical/FunctionNotEqual.test"
  - "query": "SELECT i16 != i8 AS bool1, i16 != i8 + INT8(1) AS bool2, i16 != i16 AS bool3, i16 != i16 + INT16(1) AS bool4, i16 != i32 AS bool5, i16 != i32 + INT32(1) AS bool6, i16 != i64 AS bool7, i16 != i64 + INT64(1) AS bool8, i16 != u8 AS bool9, i16 != u8 + UINT8(1) AS bool10, i16 != u16 AS bool11, i16 != u16 + UINT16(1) AS bool12, i16 != u32 AS bool13, i16 != u32 + UINT32(1) AS bool14, i16 != u64 AS bool15, i16 != u64 + UINT64(1) AS bool16, i16 != f32 AS bool17, i16 != f32 + FLOAT32(1) AS bool18, i16 != f64 AS bool19, i16 != f64 + FLOAT64(1) AS bool20 FROM FunctionNotEqual_stream INTO CHECKSUM"
    "test_name": "function/logical/FunctionNotEqual.test"
  - "query": "SELECT i32 != i8 AS bool1, i32 != i8 + INT8(1) AS bool2, i32 != i16 AS bool3, i32 != i16 + INT16(1) AS bool4, i32 != i32 AS bool5, i32 != i32 + INT32(1) AS bool6, i32 != i64 AS bool7, i32 != i64 + INT64(1) AS bool8, i32 != u8 AS bool9, i32 != u8 + UINT8(1) AS bool10, i32 != u16 AS bool11, i32 != u16 + UINT16(1) AS bool12, i32 != u32 AS bool13, i32 != u32 + UINT32(1) AS bool14, i32 != u64 AS bool15, i32 != u64 + UINT64(1) AS bool16, i32 != f32 AS bool17, i32 != f32 + FLOAT32(1) AS bool18, i32 != f64 AS bool19, i32 != f64 + FLOAT64(1) AS bool20 FROM FunctionNotEqual_stream INTO CHECKSUM"
    "test_name": "function/logical/FunctionNotEqual.test"
  - "query": "SELECT i64 != i8 AS bool1, i64 != i8 + INT8(1) AS bool2, i64 != i16 AS bool3, i64 != i16 + INT16(1) AS bool4, i64 != i32 AS bool5, i64 != i32 + INT32(1) AS bool6, i64 != i64 AS bool7, i64 != i64 + INT64(1) AS bool8, i64 != u8 AS bool9, i64 != u8 + UINT8(1) AS bool10, i64 != u16 AS bool11, i64 != u16 + UINT16(1) AS bool12, i64 != u32 AS bool13, i64 != u32 + UINT32(1) AS bool14, i64 != u64 AS bool15, i64 != u64 + UINT64(1) AS bool16, i64 != f32 AS bool17, i64 != f32 + FLOAT32(1) AS bool18, i64 != f64 AS bool19, i64 != f64 + FLOAT64(1) AS bool20 FROM FunctionNotEqual_stream INTO CHECKSUM"
    "test_name": "function/logical/FunctionNotEqual.test"
  - "query": "SELECT (i8 == INT32(2)) or ((i16 == INT32(2)) or (u32 == INT32(1))) AS a, (i32 == INT32(2)) or ((i64 == INT32(2)) or (u8 == INT32(2))) AS b, (u8 == INT32(2)) or ((u16 == INT32(1)) or (u32 == INT32(1))) AS c, (u8 == INT32(2)) or ((u16 == INT32(1)) or (u32 == INT32(1))) AS d, (i8 == INT32(1)) or not ((i16 == INT32(2)) or (i32 == INT32(1))) AS e FROM FunctionOr_stream INTO CHECKSUM"
    "test_name": "function/logical/FunctionOr.test"
  - "query": "SELECT (i8 == INT32(2)) or (i16 < INT32(0)) AS a, (i32 == INT32(2)) or (i64 > INT32(0)) AS b, (u8 == INT32(2)) or (u16 <= INT32(2)) AS c, (u8 == INT32(2)) or (u16 >= INT32(2)) AS d, (i8 == INT32(1)) or not (i16 == INT32(2)) AS e FROM FunctionOr_stream INTO CHECKSUM"
    "test_name": "function/logical/FunctionOr.test"
  - "query": "SELECT (i8 == INT32(2)) or ((i16 < INT32(0)) or (i32 == INT32(2))) AS a, (i32 == INT32(2)) or ((i64 > INT32(0)) or (u8 == INT32(2))) AS b, (u8 == INT32(2)) or ((u16 <= INT32(2)) or (u32 == INT32(1))) AS c, (u8 == INT32(2)) or ((u16 >= INT32(2)) or (u32 == INT32(1))) AS d, (i8 == INT32(1)) or not ((i16 == INT32(2)) or (i32 == INT32(1))) AS e FROM FunctionOr_stream INTO CHECKSUM"
    "test_name": "function/logical/FunctionOr.test"
  - "query": "SELECT i8 - i8 AS i8_i8, i8 - i8 + INT8(1) AS i8_i8_plus_1, i8 - i16 AS i8_i16, i8 - i16 + INT16(1) AS i8_i16_plus_1, i8 - i32 AS i8_i32, i8 - i32 + INT32(1) AS i8_i32_plus_1, i8 - i64 AS i8_i64, i8 - i64 + INT64(1) AS i8_i64_plus_1, i8 - u8  AS i8_u8, i8 - u8 + UINT8(1) AS i8_u8_plus_1, i8 - u16 AS i8_u16, i8 - u16 + UINT16(1) AS i8_u16_plus_1, i8 - u32 AS i8_u32, i8 - u32 + UINT32(1) AS i8_u32_plus_1, i8 - u64 AS i8_u64, i8 - u64 + UINT64(1) AS i8_u64_plus_1, i8 - f32 AS i8_f32, i8 - f32 + FLOAT32(1) AS i8_f32_plus_1, i8 - f64 AS i8_f64, i8 - f64 + FLOAT64(1) AS i8_f64_plus_1 FROM FunctionSub_stream INTO CHECKSUM"
    "test_name": "function/arithmetical/FunctionAdd.test"
  - "query": "SELECT i16 - i8 AS i16_i8, i16 - i8 + INT8(1) AS i16_i8_plus_1, i16 - i16 AS i16_i16, i16 - i16 + INT16(1) AS i16_i16_plus_1, i16 - i32 AS i16_i32, i16 - i32 + INT32(1) AS i16_i32_plus_1, i16 - i64 AS i16_i64, i16 - i64 + INT64(1) AS i16_i64_plus_1, i16 - u8 AS i16_u8, i16 - u8 + UINT8(1) AS i16_u8_plus_1, u16 - i16 AS i16_u16, u16 - i16 + UINT16(1) AS i16_u16_plus_1, i16 - u32 AS i16_u32, i16 - u32 + UINT32(1) AS i16_u32_plus_1, i16 - u64 AS i16_u64, i16 - u64 + UINT32(1) AS i16_u64_plus_1, i16 - f32 AS i16_f32, i16 - f32 + FLOAT32(1) AS i16_f32_plus_1, i16 - f64 AS i16_f64, i16 - f64 + FLOAT64(1) AS i16_f64_plus_1 FROM FunctionSub_stream INTO CHECKSUM"
    "test_name": "function/arithmetical/FunctionAdd.test"
  - "query": "SELECT i32 - i8 AS i32_i8, i32 - i8 + INT8(1) AS i32_i8_plus_1, i32 - i16 AS i32_i16, i32 - i16 + INT16(1) AS i32_i16_plus_1, i32 - i32 AS i32_i32, i32 - i32 + INT32(1) AS i32_i32_plus_1, i32 - i64 AS i32_i64, i32 - i64 + INT64(1) AS i32_i64_plus_1, i32 - u8 AS i32_u8, i32 - u8 + UINT8(1) AS i32_u8_plus_1, i32 - u16 AS i32_u16, i32 - u16 + UINT16(1) AS i32_u16_plus_1, i32 - u32 AS i32_u32, i32 - u32 + UINT32(1) AS i32_u32_plus_1, i32 - u64 AS i32_u64, i32 - u64 + UINT32(1) AS i32_u64_plus_1, i32 - f32 AS i32_f32, i32 - f32 + FLOAT32(1) AS i32_f32_plus_1, i32 - f64 AS i32_f64, i32 - f64 + FLOAT64(1) AS i32_f64_plus_1 FROM FunctionSub_stream INTO CHECKSUM"
    "test_name": "function/arithmetical/FunctionAdd.test"
  - "query": "SELECT i64 - i8 AS i64_i8, i64 - i8 + INT8(1) AS i64_i8_plus_1, i64 - i16 AS i64_i16, i64 - i16 + INT16(1) AS i64_i16_plus_1, i64 - i32 AS i64_i32, i64 - i32 + INT32(1) AS i64_i32_plus_1, i64 - i64 AS i64_i64, i64 - i64 + INT64(1) AS i64_i64_plus_1, i64 - u8 AS i64_u8, i64 - u8 + UINT32(1) AS i64_u8_plus_1, i64 - u16 AS i64_u16, i64 - u16 + UINT32(1) AS i64_u16_plus_1, i64 - u32 AS i64_u32, i64 - u32 + UINT32(1) AS i64_u32_plus_1, i64 - u64 AS i64_u64, i64 - u64 + UINT32(1) AS i64_u64_plus_1, i64 - f32 AS i64_f32, i64 - f32 + FLOAT32(1) AS i64_f32_plus_1, i64 - f64 AS i64_f64, i64 - f64 + FLOAT64(1) AS i64_f64_plus_1 FROM FunctionSub_stream INTO CHECKSUM"
    "test_name": "function/arithmetical/FunctionAdd.test"
  - "query": "SELECT u8 - i8 AS u8_i8, u8 - i8 + INT8(1) AS u8_i8_plus_1, u8 - i16 AS u8_i16, u8 - i16 + INT16(1) AS u8_i16_plus_1, u8 - i32 AS u8_i32, u8 - i32 + INT32(1) AS u8_i32_plus_1, u8 - i64 AS u8_i64, u8 - i64 + INT64(1) AS u8_i64_plus_1, u8 - u8  AS u8_u8, u8 - u8 + UINT8(1) AS u8_u8_plus_1, u8 - u16 AS u8_u16, u8 - u16 + UINT16(1) AS u8_u16_plus_1, u8 - u32 AS u8_u32, u8 - u32 + UINT32(1) AS u8_u32_plus_1, u8 - u64 AS u8_u64, u8 - u64 + UINT64(1) AS u8_u64_plus_1, u8 - f32 AS u8_f32, u8 - f32 + FLOAT32(1) AS u8_f32_plus_1, u8 - f64 AS u8_f64, u8 - f64 + FLOAT64(1) AS u8_f64_plus_1 FROM FunctionSub_stream INTO CHECKSUM"
    "test_name": "function/arithmetical/FunctionAdd.test"
  - "query": "SELECT u16 - i8 AS u16_i8, u16 - i8 + INT8(1) AS u16_i8_plus_1, u16 - i16 AS u16_i16, u16 - i16 + INT16(1) AS u16_i16_plus_1, u16 - i32 AS u16_i32, u16 - i32 + INT32(1) AS u16_i32_plus_1, u16 - i64 AS u16_i64, u16 - i64 + INT64(1) AS u16_i64_plus_1, u16 - u8 AS u16_u8, u16 - u8 + UINT8(1) AS u16_u8_plus_1, u16 - i16 AS u16_u16, u16 - i16 + INT16(1) AS u16_u16_plus_1, u16 - u32 AS u16_u32, u16 - u32 + UINT32(1) AS u16_u32_plus_1, u16 - u64 AS u16_u64, u16 - u64 + UINT32(1) AS u16_u64_plus_1, u16 - f32 AS u16_f32, u16 - f32 + FLOAT32(1) AS u16_f32_plus_1, u16 - f64 AS u16_f64, u16 - f64 + FLOAT64(1) AS u16_f64_plus_1 FROM FunctionSub_stream INTO CHECKSUM"
    "test_name": "function/arithmetical/FunctionAdd.test"
  - "query": "SELECT u32 - i8 AS u32_i8, u32 - i8 + INT8(1) AS u32_i8_plus_1, u32 - i16 AS u32_i16, u32 - i16 + INT16(1) AS u32_i16_plus_1, u32 - i32 AS u32_i32, u32 - i32 + INT32(1) AS u32_i32_plus_1, u32 - i64 AS u32_i64, u32 - i64 + INT64(1) AS u32_i64_plus_1, u32 - u8 AS u32_u8, u32 - u8 + UINT32(1) AS u32_u8_plus_1, u32 - u16 AS u32_u16, u32 - u16 + UINT32(1) AS u32_u16_plus_1, u32 - u32 AS u32_u32, u32 - u32 + UINT32(1) AS u32_u32_plus_1, u32 - u64 AS u32_u64, u32 - u64 + UINT32(1) AS u32_u64_plus_1, u32 - f32 AS u32_f32, u32 - f32 + FLOAT32(1) AS u32_f32_plus_1, u32 - f64 AS u32_f64, u32 - f64 + FLOAT64(1) AS u32_f64_plus_1 FROM FunctionSub_stream INTO CHECKSUM"
    "test_name": "function/arithmetical/FunctionAdd.test"
  - "query": "SELECT u64 - i8 AS u64_i8, u64 - i8 + INT8(1) AS u64_i8_plus_1, u64 - i16 AS u64_i16, u64 - i16 + INT16(1) AS u64_i16_plus_1, u64 - i32 AS u64_i32, u64 - i32 + INT32(1) AS u64_i32_plus_1, u64 - i64 AS u64_i64, u64 - i64 + INT64(1) AS u64_i64_plus_1, u64 - u8 AS u64_u8, u64 - u8 + UINT32(1) AS u64_u8_plus_1, u64 - u16 AS u64_u16, u64 - u16 + UINT32(1) AS u64_u16_plus_1, u64 - u32 AS u64_u32, u64 - u32 + UINT32(1) AS u64_u32_plus_1, u64 - u64 AS u64_u64, u64 - u64 + UINT32(1) AS u64_u64_plus_1, u64 - f32 AS u64_f32, u64 - f32 + FLOAT32(1) AS u64_f32_plus_1, u64 - f64 AS u64_f64, u64 - f64 + FLOAT64(1) AS u64_f64_plus_1 FROM FunctionSub_stream INTO CHECKSUM"
    "test_name": "function/arithmetical/FunctionAdd.test"
  - "query": "SELECT f32 - i8 AS f32_i8, f32 - i8 + INT8(1) AS f32_i8_plus_1, f32 - i16 AS f32_i16, f32 - i16 + INT16(1) AS f32_i16_plus_1, f32 - i32 AS f32_i32, f32 - i32 + INT32(1) AS f32_i32_plus_1, f32 - i64 AS f32_i64, f32 - i64 + INT64(1) AS f32_i64_plus_1, f32 - u8 AS f32_u8, f32 - u8 + UINT32(1) AS f32_u8_plus_1, f32 - u16 AS f32_u16, f32 - u16 + UINT32(1) AS f32_u16_plus_1, f32 - u32 AS f32_u32, f32 - u32 + UINT32(1) AS f32_u32_plus_1, f32 - u64 AS f32_u64, f32 - u64 + UINT32(1) AS f32_u64_plus_1, f32 - f32 AS f32_f32, f32 - f32 + FLOAT32(1) AS f32_f32_plus_1, f32 - f64 AS f32_f64, f32 - f64 + FLOAT64(1) AS f32_f64_plus_1 FROM FunctionSub_stream INTO CHECKSUM"
    "test_name": "function/arithmetical/FunctionAdd.test"
  - "query": "SELECT f64 - i8 AS f64_i8, f64 - i8 + INT8(1) AS f64_i8_plus_1, f64 - i16 AS f64_i16, f64 - i16 + INT16(1) AS f64_i16_plus_1, f64 - i32 AS f64_i32, f64 - i32 + INT32(1) AS f64_i32_plus_1, f64 - i64 AS f64_i64, f64 - i64 + INT64(1) AS f64_i64_plus_1, f64 - u8 AS f64_u8, f64 - u8 + UINT32(1) AS f64_u8_plus_1, f64 - u16 AS f64_u16, f64 - u16 + UINT32(1) AS f64_u16_plus_1, f64 - u32 AS f64_u32, f64 - u32 + UINT32(1) AS f64_u32_plus_1, f64 - u64 AS f64_u64, f64 - u64 + UINT32(1) AS f64_u64_plus_1, f64 - f32 AS f64_f32, f64 - f32 + FLOAT32(1) AS f64_f32_plus_1, f64 - f64 AS f64_f64, f64 - f64 + FLOAT64(1) AS f64_f64_plus_1 FROM FunctionSub_stream INTO CHECKSUM"
    "test_name": "function/arithmetical/FunctionAdd.test"
  - "query": "SELECT i8 / i8 AS i8_i8, i8 / (i8 + INT8(1)) AS i8_i8_plus_1, i8 / i16 AS i8_i16, i8 / (i16 + INT16(1)) AS i8_i16_plus_1, i8 / i32 AS i8_i32, i8 / (i32 + INT32(1)) AS i8_i32_plus_1, i8 / i64 AS i8_i64, i8 / (i64 + INT64(1)) AS i8_i64_plus_1, i8 / u8 AS i8_u8, i8 / (u8 + UINT8(1)) AS i8_u8_plus_1, i8 / u16 AS i8_u16, i8 / (u16 + UINT16(1)) AS i8_u16_plus_1, i8 / u32 AS i8_u32, i8 / (u32 + UINT32(1)) AS i8_u32_plus_1, i8 / u64 AS i8_u64, i8 / (u64 + UINT64(1)) AS i8_u64_plus_1, i8 / f32 AS i8_f32, i8 / (f32 + FLOAT32(1)) AS i8_f32_plus_1, i8 / f64 AS i8_f64, i8 / (f64 + FLOAT64(1)) AS i8_f64_plus_1 FROM modified_FunctionDiv_FunctionDiv_stream INTO CHECKSUM"
    "test_name": "function/arithmetical/FunctionDiv.test"
  - "query": "SELECT i16 / i8 AS i16_i8, i16 / (i8 + INT8(1)) AS i16_i8_plus_1, i16 / i16 AS i16_i16, i16 / (i16 + INT16(1)) AS i16_i16_plus_1, i16 / i32 AS i16_i32, i16 / (i32 + INT32(1)) AS i16_i32_plus_1, i16 / i64 AS i16_i64, i16 / (i64 + INT64(1)) AS i16_i64_plus_1, i16 / u8 AS i16_u8, i16 / (u8 + UINT8(1)) AS i16_u8_plus_1, i16 / u16 AS i16_u16, i16 / (u16 + UINT16(1)) AS i16_u16_plus_1, i16 / u32 AS i16_u32, i16 / (u32 + UINT32(1)) AS i16_u32_plus_1, i16 / u64 AS i16_u64, i16 / (u64 + UINT64(1)) AS i16_u64_plus_1, i16 / f32 AS i16_f32, i16 / (f32 + FLOAT32(1)) AS i16_f32_plus_1, i16 / f64 AS i16_f64, i16 / (f64 + FLOAT64(1)) AS i16_f64_plus_1 FROM modified_FunctionDiv_FunctionDiv_stream INTO CHECKSUM"
    "test_name": "function/arithmetical/FunctionDiv.test"
  - "query": "SELECT i32 / i8 AS i32_i8, i32 / (i8 + INT8(1)) AS i32_i8_plus_1, i32 / i16 AS i32_i16, i32 / (i16 + INT16(1)) AS i32_i16_plus_1, i32 / i32 AS i32_i32, i32 / (i32 + INT32(1)) AS i32_i32_plus_1, i32 / i64 AS i32_i64, i32 / (i64 + INT64(1)) AS i32_i64_plus_1, i32 / u8 AS i32_u8, i32 / (u8 + UINT8(1)) AS i32_u8_plus_1, i32 / u16 AS i32_u16, i32 / (u16 + UINT16(1)) AS i32_u16_plus_1, i32 / u32 AS i32_u32, i32 / (u32 + UINT32(1)) AS i32_u32_plus_1, i32 / u64 AS i32_u64, i32 / (u64 + UINT64(1)) AS i32_u64_plus_1, i32 / f32 AS i32_f32, i32 / (f32 + FLOAT32(1)) AS i32_f32_plus_1, i32 / f64 AS i32_f64, i32 / (f64 + FLOAT64(1)) AS i32_f64_plus_1 FROM modified_FunctionDiv_FunctionDiv_stream INTO CHECKSUM"
    "test_name": "function/arithmetical/FunctionDiv.test"
  - "query": "SELECT i64 / i8 AS i64_i8, i64 / (i8 + INT8(1)) AS i64_i8_plus_1, i64 / i16 AS i64_i16, i64 / (i16 + INT16(1)) AS i64_i16_plus_1, i64 / i32 AS i64_i32, i64 / (i32 + INT32(1)) AS i64_i32_plus_1, i64 / i64 AS i64_i64, i64 / (i64 + INT64(1)) AS i64_i64_plus_1, i64 / u8 AS i64_u8, i64 / (u8 + UINT8(1)) AS i64_u8_plus_1, i64 / u16 AS i64_u16, i64 / (u16 + UINT16(1)) AS i64_u16_plus_1, i64 / u32 AS i64_u32, i64 / (u32 + UINT32(1)) AS i64_u32_plus_1, i64 / u64 AS i64_u64, i64 / (u64 + UINT64(1)) AS i64_u64_plus_1, i64 / f32 AS i64_f32, i64 / (f32 + FLOAT32(1)) AS i64_f32_plus_1, i64 / f64 AS i64_f64, i64 / (f64 + FLOAT64(1)) AS i64_f64_plus_1 FROM modified_FunctionDiv_FunctionDiv_stream INTO CHECKSUM"
    "test_name": "function/arithmetical/FunctionDiv.test"
  - "query": "SELECT u8 / i8 AS u8_i8, u8 / (i8 + INT8(1)) AS u8_i8_plus_1, u8 / i16 AS u8_i16, u8 / (i16 + INT16(1)) AS u8_i16_plus_1, u8 / i32 AS u8_i32, u8 / (i32 + INT32(1)) AS u8_i32_plus_1, u8 / i64 AS u8_i64, u8 / (i64 + INT64(1)) AS u8_i64_plus_1, u8 / u8 AS u8_u8, u8 / (u8 + UINT8(1)) AS u8_u8_plus_1, u8 / u16 AS u8_u16, u8 / (u16 + UINT16(1)) AS u8_u16_plus_1, u8 / u32 AS u8_u32, u8 / (u32 + UINT32(1)) AS u8_u32_plus_1, u8 / u64 AS u8_u64, u8 / (u64 + UINT64(1)) AS u8_u64_plus_1, u8 / f32 AS u8_f32, u8 / (f32 + FLOAT32(1)) AS u8_f32_plus_1, u8 / f64 AS u8_f64, u8 / (f64 + FLOAT64(1)) AS u8_f64_plus_1 FROM modified_FunctionDiv_FunctionDiv_stream INTO CHECKSUM"
    "test_name": "function/arithmetical/FunctionDiv.test"
  - "query": "SELECT u16 / i8 AS u16_i8, u16 / (i8 + INT8(1)) AS u16_i8_plus_1, u16 / i16 AS u16_i16, u16 / (i16 + INT16(1)) AS u16_i16_plus_1, u16 / i32 AS u16_i32, u16 / (i32 + INT32(1)) AS u16_i32_plus_1, u16 / i64 AS u16_i64, u16 / (i64 + INT64(1)) AS u16_i64_plus_1, u16 / u8 AS u16_u8, u16 / (u8 + UINT8(1)) AS u16_u8_plus_1, u16 / u16 AS u16_u16, u16 / (u16 + UINT16(1)) AS u16_u16_plus_1, u16 / u32 AS u16_u32, u16 / (u32 + UINT32(1)) AS u16_u32_plus_1, u16 / u64 AS u16_u64, u16 / (u64 + UINT64(1)) AS u16_u64_plus_1, u16 / f32 AS u16_f32, u16 / (f32 + FLOAT32(1)) AS u16_f32_plus_1, u16 / f64 AS u16_f64, u16 / (f64 + FLOAT64(1)) AS u16_f64_plus_1 FROM modified_FunctionDiv_FunctionDiv_stream INTO CHECKSUM"
    "test_name": "function/arithmetical/FunctionDiv.test"
  - "query": "SELECT u32 / i8 AS u32_i8, u32 / (i8 + INT8(1)) AS u32_i8_plus_1, u32 / i16 AS u32_i16, u32 / (i16 + INT16(1)) AS u32_i16_plus_1, u32 / i32 AS u32_i32, u32 / (i32 + INT32(1)) AS u32_i32_plus_1, u32 / i64 AS u32_i64, u32 / (i64 + INT64(1)) AS u32_i64_plus_1, u32 / u8 AS u32_u8, u32 / (u8 + UINT8(1)) AS u32_u8_plus_1, u32 / u16 AS u32_u16, u32 / (u16 + UINT16(1)) AS u32_u16_plus_1, u32 / u32 AS u32_u32, u32 / (u32 + UINT32(1)) AS u32_u32_plus_1, u32 / u64 AS u32_u64, u32 / (u64 + UINT64(1)) AS u32_u64_plus_1, u32 / f32 AS u32_f32, u32 / (f32 + FLOAT32(1)) AS u32_f32_plus_1, u32 / f64 AS u32_f64, u32 / (f64 + FLOAT64(1)) AS u32_f64_plus_1 FROM modified_FunctionDiv_FunctionDiv_stream INTO CHECKSUM"
    "test_name": "function/arithmetical/FunctionDiv.test"
  - "query": "SELECT u64 / i8 AS u64_i8, u64 / (i8 + INT8(1)) AS u64_i8_plus_1, u64 / i16 AS u64_i16, u64 / (i16 + INT16(1)) AS u64_i16_plus_1, u64 / i32 AS u64_i32, u64 / (i32 + INT32(1)) AS u64_i32_plus_1, u64 / i64 AS u64_i64, u64 / (i64 + INT64(1)) AS u64_i64_plus_1, u64 / u8 AS u64_u8, u64 / (u8 + UINT8(1)) AS u64_u8_plus_1, u64 / u16 AS u64_u16, u64 / (u16 + UINT16(1)) AS u64_u16_plus_1, u64 / u32 AS u64_u32, u64 / (u32 + UINT32(1)) AS u64_u32_plus_1, u64 / u64 AS u64_u64, u64 / (u64 + UINT64(1)) AS u64_u64_plus_1, u64 / f32 AS u64_f32, u64 / (f32 + FLOAT32(1)) AS u64_f32_plus_1, u64 / f64 AS u64_f64, u64 / (f64 + FLOAT64(1)) AS u64_f64_plus_1 FROM modified_FunctionDiv_FunctionDiv_stream INTO CHECKSUM"
    "test_name": "function/arithmetical/FunctionDiv.test"
  - "query": "SELECT f32 / i8 AS f32_i8, f32 / (i8 + INT8(1)) AS f32_i8_plus_1, f32 / i16 AS f32_i16, f32 / (i16 + INT16(1)) AS f32_i16_plus_1, f32 / i32 AS f32_i32, f32 / (i32 + INT32(1)) AS f32_i32_plus_1, f32 / i64 AS f32_i64, f32 / (i64 + INT64(1)) AS f32_i64_plus_1, f32 / u8 AS f32_u8, f32 / (u8 + UINT8(1)) AS f32_u8_plus_1, f32 / u16 AS f32_u16, f32 / (u16 + UINT16(1)) AS f32_u16_plus_1, f32 / u32 AS f32_u32, f32 / (u32 + UINT32(1)) AS f32_u32_plus_1, f32 / u64 AS f32_u64, f32 / (u64 + UINT64(1)) AS f32_u64_plus_1, f32 / f32 AS f32_f32, f32 / (f32 + FLOAT32(1)) AS f32_f32_plus_1, f32 / f64 AS f32_f64, f32 / (f64 + FLOAT64(1)) AS f32_f64_plus_1 FROM modified_FunctionDiv_FunctionDiv_stream INTO CHECKSUM"
    "test_name": "function/arithmetical/FunctionDiv.test"
  - "query": "SELECT f64 / i8 AS f64_i8, f64 / (i8 + INT8(1)) AS f64_i8_plus_1, f64 / i16 AS f64_i16, f64 / (i16 + INT16(1)) AS f64_i16_plus_1, f64 / i32 AS f64_i32, f64 / (i32 + INT32(1)) AS f64_i32_plus_1, f64 / i64 AS f64_i64, f64 / (i64 + INT64(1)) AS f64_i64_plus_1, f64 / u8 AS f64_u8, f64 / (u8 + UINT8(1)) AS f64_u8_plus_1, f64 / u16 AS f64_u16, f64 / (u16 + UINT16(1)) AS f64_u16_plus_1, f64 / u32 AS f64_u32, f64 / (u32 + UINT32(1)) AS f64_u32_plus_1, f64 / u64 AS f64_u64, f64 / (u64 + UINT64(1)) AS f64_u64_plus_1, f64 / f32 AS f64_f32, f64 / (f32 + FLOAT32(1)) AS f64_f32_plus_1, f64 / f64 AS f64_f64, f64 / (f64 + FLOAT64(1)) AS f64_f64_plus_1 FROM modified_FunctionDiv_FunctionDiv_stream INTO CHECKSUM"
    "test_name": "function/arithmetical/FunctionDiv.test"
  - "query": "SELECT i8 + i8 AS i8_i8, i8 + i8 + INT8(1) AS i8_i8_plus_1, i8 + i16 AS i8_i16, i8 + i16 + INT16(1) AS i8_i16_plus_1, i8 + i32 AS i8_i32, i8 + i32 + INT32(1) AS i8_i32_plus_1, i8 + i64 AS i8_i64, i8 + i64 + INT32(1) AS i8_i64_plus_1, i8 + u8  AS i8_u8, i8 + u8  + UINT8(1) AS i8_u8_plus_1, i8 + u16 AS i8_u16, i8 + u16 + UINT16(1) AS i8_u16_plus_1, i8 + u32 AS i8_u32, i8 + u32 + UINT32(1) AS i8_u32_plus_1, i8 + u64 AS i8_u64, i8 + u64 + UINT64(1) AS i8_u64_plus_1, i8 + f32 AS i8_f32, i8 + f32 + FLOAT32(1) AS i8_f32_plus_1, i8 + f64 AS i8_f64, i8 + f64 + FLOAT64(1) AS i8_f64_plus_1 FROM FunctionAdd_stream INTO CHECKSUM"
    "test_name": "function/arithmetical/FunctionAdd.test"
  - "query": "SELECT i16 + i8 AS i16_i8, i16 + i8 + INT8(1) AS i16_i8_plus_1, i16 + i16 AS i16_i16, i16 + i16 + INT16(1) AS i16_i16_plus_1, i16 + i32 AS i16_i32, i16 + i32 + INT32(1) AS i16_i32_plus_1, i16 + i64 AS i16_i64, i16 + i64 + INT64(1) AS i16_i64_plus_1, i16 + u8 AS i16_u8, i16 + u8 + UINT8(1) AS i16_u8_plus_1, u16 + i16 AS i16_u16, u16 + i16 + UINT16(1) AS i16_u16_plus_1, i16 + u32 AS i16_u32, i16 + u32 + UINT32(1) AS i16_u32_plus_1, i16 + u64 AS i16_u64, i16 + u64 + UINT64(1) AS i16_u64_plus_1, i16 + f32 AS i16_f32, i16 + f32 + FLOAT32(1) AS i16_f32_plus_1, i16 + f64 AS i16_f64, i16 + f64 + FLOAT64(1) AS i16_f64_plus_1 FROM FunctionAdd_stream INTO CHECKSUM"
    "test_name": "function/arithmetical/FunctionAdd.test"
  - "query": "SELECT i32 + i8 AS i32_i8, i32 + i8 + INT8(1) AS i32_i8_plus_1, i32 + i16 AS i32_i16, i32 + i16 + INT16(1) AS i32_i16_plus_1, i32 + i32 AS i32_i32, i32 + i32 + INT32(1) AS i32_i32_plus_1, i32 + i64 AS i32_i64, i32 + i64 + INT64(1) AS i32_i64_plus_1, i32 + u8 AS i32_u8, i32 + u8 + UINT8(1) AS i32_u8_plus_1, i32 + u16 AS i32_u16, i32 + u16 + UINT16(1) AS i32_u16_plus_1, i32 + u32 AS i32_u32, i32 + u32 + UINT32(1) AS i32_u32_plus_1, i32 + u64 AS i32_u64, i32 + u64 + UINT64(1) AS i32_u64_plus_1, i32 + f32 AS i32_f32, i32 + f32 + FLOAT32(1) AS i32_f32_plus_1, i32 + f64 AS i32_f64, i32 + f64 + FLOAT64(1) AS i32_f64_plus_1 FROM FunctionAdd_stream INTO CHECKSUM"
    "test_name": "function/arithmetical/FunctionAdd.test"
  - "query": "SELECT i64 + i8 AS i64_i8, i64 + i8 + INT8(1) AS i64_i8_plus_1, i64 + i16 AS i64_i16, i64 + i16 + INT16(1) AS i64_i16_plus_1, i64 + i32 AS i64_i32, i64 + i32 + INT32(1) AS i64_i32_plus_1, i64 + i64 AS i64_i64, i64 + i64 + INT64(1) AS i64_i64_plus_1, i64 + u8 AS i64_u8, i64 + u8 + UINT8(1) AS i64_u8_plus_1, i64 + u16 AS i64_u16, i64 + u16 + UINT16(1) AS i64_u16_plus_1, i64 + u32 AS i64_u32, i64 + u32 + UINT32(1) AS i64_u32_plus_1, i64 + u64 AS i64_u64, i64 + u64 + UINT64(1) AS i64_u64_plus_1, i64 + f32 AS i64_f32, i64 + f32 + FLOAT32(1) AS i64_f32_plus_1, i64 + f64 AS i64_f64, i64 + f64 + FLOAT64(1) AS i64_f64_plus_1 FROM FunctionAdd_stream INTO CHECKSUM"
    "test_name": "function/arithmetical/FunctionAdd.test"
  - "query": "SELECT i8 / i8 AS i8_i8, i8 / (i8 + INT8(1)) AS i8_i8_plus_1, i8 / i16 AS i8_i16, i8 / (i16 + INT16(1)) AS i8_i16_plus_1, i8 / i32 AS i8_i32, i8 / (i32 + INT32(1)) AS i8_i32_plus_1, i8 / i64 AS i8_i64, i8 / (i64 + INT64(1)) AS i8_i64_plus_1, i8 / u8 AS i8_u8, i8 / (u8 + UINT8(1)) AS i8_u8_plus_1, i8 / u16 AS i8_u16, i8 / (u16 + UINT16(1)) AS i8_u16_plus_1, i8 / u32 AS i8_u32, i8 / (u32 + UINT32(1)) AS i8_u32_plus_1, i8 / u64 AS i8_u64, i8 / (u64 + UINT64(1)) AS i8_u64_plus_1, i8 / f32 AS i8_f32, i8 / (f32 + FLOAT32(1)) AS i8_f32_plus_1, i8 / f64 AS i8_f64, i8 / (f64 + FLOAT64(1)) AS i8_f64_plus_1 FROM FunctionDiv_stream INTO CHECKSUM"
    "test_name": "function/arithmetical/FunctionDiv.test"
  - "query": "SELECT i16 / i8 AS i16_i8, i16 / (i8 + INT8(1)) AS i16_i8_plus_1, i16 / i16 AS i16_i16, i16 / (i16 + INT16(1)) AS i16_i16_plus_1, i16 / i32 AS i16_i32, i16 / (i32 + INT32(1)) AS i16_i32_plus_1, i16 / i64 AS i16_i64, i16 / (i64 + INT64(1)) AS i16_i64_plus_1, i16 / u8 AS i16_u8, i16 / (u8 + UINT8(1)) AS i16_u8_plus_1, i16 / u16 AS i16_u16, i16 / (u16 + UINT16(1)) AS i16_u16_plus_1, i16 / u32 AS i16_u32, i16 / (u32 + UINT32(1)) AS i16_u32_plus_1, i16 / u64 AS i16_u64, i16 / (u64 + UINT64(1)) AS i16_u64_plus_1, i16 / f32 AS i16_f32, i16 / (f32 + FLOAT32(1)) AS i16_f32_plus_1, i16 / f64 AS i16_f64, i16 / (f64 + FLOAT64(1)) AS i16_f64_plus_1 FROM FunctionDiv_stream INTO CHECKSUM"
    "test_name": "function/arithmetical/FunctionDiv.test"
  - "query": "SELECT i32 / i8 AS i32_i8, i32 / (i8 + INT8(1)) AS i32_i8_plus_1, i32 / i16 AS i32_i16, i32 / (i16 + INT16(1)) AS i32_i16_plus_1, i32 / i32 AS i32_i32, i32 / (i32 + INT32(1)) AS i32_i32_plus_1, i32 / i64 AS i32_i64, i32 / (i64 + INT64(1)) AS i32_i64_plus_1, i32 / u8 AS i32_u8, i32 / (u8 + UINT8(1)) AS i32_u8_plus_1, i32 / u16 AS i32_u16, i32 / (u16 + UINT16(1)) AS i32_u16_plus_1, i32 / u32 AS i32_u32, i32 / (u32 + UINT32(1)) AS i32_u32_plus_1, i32 / u64 AS i32_u64, i32 / (u64 + UINT64(1)) AS i32_u64_plus_1, i32 / f32 AS i32_f32, i32 / (f32 + FLOAT32(1)) AS i32_f32_plus_1, i32 / f64 AS i32_f64, i32 / (f64 + FLOAT64(1)) AS i32_f64_plus_1 FROM FunctionDiv_stream INTO CHECKSUM"
    "test_name": "function/arithmetical/FunctionDiv.test"
  - "query": "SELECT i64 / i8 AS i64_i8, i64 / (i8 + INT8(1)) AS i64_i8_plus_1, i64 / i16 AS i64_i16, i64 / (i16 + INT16(1)) AS i64_i16_plus_1, i64 / i32 AS i64_i32, i64 / (i32 + INT32(1)) AS i64_i32_plus_1, i64 / i64 AS i64_i64, i64 / (i64 + INT64(1)) AS i64_i64_plus_1, i64 / u8 AS i64_u8, i64 / (u8 + UINT8(1)) AS i64_u8_plus_1, i64 / u16 AS i64_u16, i64 / (u16 + UINT16(1)) AS i64_u16_plus_1, i64 / u32 AS i64_u32, i64 / (u32 + UINT32(1)) AS i64_u32_plus_1, i64 / u64 AS i64_u64, i64 / (u64 + UINT64(1)) AS i64_u64_plus_1, i64 / f32 AS i64_f32, i64 / (f32 + FLOAT32(1)) AS i64_f32_plus_1, i64 / f64 AS i64_f64, i64 / (f64 + FLOAT64(1)) AS i64_f64_plus_1 FROM FunctionDiv_stream INTO CHECKSUM"
    "test_name": "function/arithmetical/FunctionDiv.test"
  - "query": "SELECT u8 / i8 AS u8_i8, u8 / (i8 + INT8(1)) AS u8_i8_plus_1, u8 / i16 AS u8_i16, u8 / (i16 + INT16(1)) AS u8_i16_plus_1, u8 / i32 AS u8_i32, u8 / (i32 + INT32(1)) AS u8_i32_plus_1, u8 / i64 AS u8_i64, u8 / (i64 + INT64(1)) AS u8_i64_plus_1, u8 / u8 AS u8_u8, u8 / (u8 + UINT8(1)) AS u8_u8_plus_1, u8 / u16 AS u8_u16, u8 / (u16 + UINT16(1)) AS u8_u16_plus_1, u8 / u32 AS u8_u32, u8 / (u32 + UINT32(1)) AS u8_u32_plus_1, u8 / u64 AS u8_u64, u8 / (u64 + UINT64(1)) AS u8_u64_plus_1, u8 / f32 AS u8_f32, u8 / (f32 + FLOAT32(1)) AS u8_f32_plus_1, u8 / f64 AS u8_f64, u8 / (f64 + FLOAT64(1)) AS u8_f64_plus_1 FROM FunctionDiv_stream INTO CHECKSUM"
    "test_name": "function/arithmetical/FunctionDiv.test"
  - "query": "SELECT u16 / i8 AS u16_i8, u16 / (i8 + INT8(1)) AS u16_i8_plus_1, u16 / i16 AS u16_i16, u16 / (i16 + INT16(1)) AS u16_i16_plus_1, u16 / i32 AS u16_i32, u16 / (i32 + INT32(1)) AS u16_i32_plus_1, u16 / i64 AS u16_i64, u16 / (i64 + INT64(1)) AS u16_i64_plus_1, u16 / u8 AS u16_u8, u16 / (u8 + UINT8(1)) AS u16_u8_plus_1, u16 / u16 AS u16_u16, u16 / (u16 + UINT16(1)) AS u16_u16_plus_1, u16 / u32 AS u16_u32, u16 / (u32 + UINT32(1)) AS u16_u32_plus_1, u16 / u64 AS u16_u64, u16 / (u64 + UINT64(1)) AS u16_u64_plus_1, u16 / f32 AS u16_f32, u16 / (f32 + FLOAT32(1)) AS u16_f32_plus_1, u16 / f64 AS u16_f64, u16 / (f64 + FLOAT64(1)) AS u16_f64_plus_1 FROM FunctionDiv_stream INTO CHECKSUM"
    "test_name": "function/arithmetical/FunctionDiv.test"
  - "query": "SELECT u32 / i8 AS u32_i8, u32 / (i8 + INT8(1)) AS u32_i8_plus_1, u32 / i16 AS u32_i16, u32 / (i16 + INT16(1)) AS u32_i16_plus_1, u32 / i32 AS u32_i32, u32 / (i32 + INT32(1)) AS u32_i32_plus_1, u32 / i64 AS u32_i64, u32 / (i64 + INT64(1)) AS u32_i64_plus_1, u32 / u8 AS u32_u8, u32 / (u8 + UINT8(1)) AS u32_u8_plus_1, u32 / u16 AS u32_u16, u32 / (u16 + UINT16(1)) AS u32_u16_plus_1, u32 / u32 AS u32_u32, u32 / (u32 + UINT32(1)) AS u32_u32_plus_1, u32 / u64 AS u32_u64, u32 / (u64 + UINT64(1)) AS u32_u64_plus_1, u32 / f32 AS u32_f32, u32 / (f32 + FLOAT32(1)) AS u32_f32_plus_1, u32 / f64 AS u32_f64, u32 / (f64 + FLOAT64(1)) AS u32_f64_plus_1 FROM FunctionDiv_stream INTO CHECKSUM"
    "test_name": "function/arithmetical/FunctionDiv.test"
  - "query": "SELECT u64 / i8 AS u64_i8, u64 / (i8 + INT8(1)) AS u64_i8_plus_1, u64 / i16 AS u64_i16, u64 / (i16 + INT16(1)) AS u64_i16_plus_1, u64 / i32 AS u64_i32, u64 / (i32 + INT32(1)) AS u64_i32_plus_1, u64 / i64 AS u64_i64, u64 / (i64 + INT64(1)) AS u64_i64_plus_1, u64 / u8 AS u64_u8, u64 / (u8 + UINT8(1)) AS u64_u8_plus_1, u64 / u16 AS u64_u16, u64 / (u16 + UINT16(1)) AS u64_u16_plus_1, u64 / u32 AS u64_u32, u64 / (u32 + UINT32(1)) AS u64_u32_plus_1, u64 / u64 AS u64_u64, u64 / (u64 + UINT64(1)) AS u64_u64_plus_1, u64 / f32 AS u64_f32, u64 / (f32 + FLOAT32(1)) AS u64_f32_plus_1, u64 / f64 AS u64_f64, u64 / (f64 + FLOAT64(1)) AS u64_f64_plus_1 FROM FunctionDiv_stream INTO CHECKSUM"
    "test_name": "function/arithmetical/FunctionDiv.test"
  - "query": "SELECT f32 / i8 AS f32_i8, f32 / (i8 + INT8(1)) AS f32_i8_plus_1, f32 / i16 AS f32_i16, f32 / (i16 + INT16(1)) AS f32_i16_plus_1, f32 / i32 AS f32_i32, f32 / (i32 + INT32(1)) AS f32_i32_plus_1, f32 / i64 AS f32_i64, f32 / (i64 + INT64(1)) AS f32_i64_plus_1, f32 / u8 AS f32_u8, f32 / (u8 + UINT8(1)) AS f32_u8_plus_1, f32 / u16 AS f32_u16, f32 / (u16 + UINT16(1)) AS f32_u16_plus_1, f32 / u32 AS f32_u32, f32 / (u32 + UINT32(1)) AS f32_u32_plus_1, f32 / u64 AS f32_u64, f32 / (u64 + UINT64(1)) AS f32_u64_plus_1, f32 / f32 AS f32_f32, f32 / (f32 + FLOAT32(1)) AS f32_f32_plus_1, f32 / f64 AS f32_f64, f32 / (f64 + FLOAT64(1)) AS f32_f64_plus_1 FROM FunctionDiv_stream INTO CHECKSUM"
    "test_name": "function/arithmetical/FunctionDiv.test"
  - "query": "SELECT f64 / i8 AS f64_i8, f64 / (i8 + INT8(1)) AS f64_i8_plus_1, f64 / i16 AS f64_i16, f64 / (i16 + INT16(1)) AS f64_i16_plus_1, f64 / i32 AS f64_i32, f64 / (i32 + INT32(1)) AS f64_i32_plus_1, f64 / i64 AS f64_i64, f64 / (i64 + INT64(1)) AS f64_i64_plus_1, f64 / u8 AS f64_u8, f64 / (u8 + UINT8(1)) AS f64_u8_plus_1, f64 / u16 AS f64_u16, f64 / (u16 + UINT16(1)) AS f64_u16_plus_1, f64 / u32 AS f64_u32, f64 / (u32 + UINT32(1)) AS f64_u32_plus_1, f64 / u64 AS f64_u64, f64 / (u64 + UINT64(1)) AS f64_u64_plus_1, f64 / f32 AS f64_f32, f64 / (f32 + FLOAT32(1)) AS f64_f32_plus_1, f64 / f64 AS f64_f64, f64 / (f64 + FLOAT64(1)) AS f64_f64_plus_1 FROM FunctionDiv_stream INTO CHECKSUM"
    "test_name": "function/arithmetical/FunctionDiv.test"
  - "query": "SELECT i8 % i8 AS i8_i8, i8 % (i8 + INT8(1)) AS i8_i8_plus_1, i8 % i16 AS i8_i16, i8 % (i16 + INT16(1)) AS i8_i16_plus_1, i8 % i32 AS i8_i32, i8 % (i32 + INT32(1)) AS i8_i32_plus_1, i8 % i64 AS i8_i64, i8 % (i64 + INT64(1)) AS i8_i64_plus_1, i8 % u8 AS i8_u8, i8 % (u8 + UINT8(1)) AS i8_u8_plus_1, i8 % u16 AS i8_u16, i8 % (u16 + UINT16(1)) AS i8_u16_plus_1, i8 % u32 AS i8_u32, i8 % (u32 + UINT32(1)) AS i8_u32_plus_1, i8 % u64 AS i8_u64, i8 % (u64 + UINT64(1)) AS i8_u64_plus_1 FROM FunctionModulo_stream INTO CHECKSUM"
    "test_name": "function/arithmetical/FunctionModulo.test"
  - "query": "SELECT i16 % i8 AS i16_i8, i16 % (i8 + INT8(1)) AS i16_i8_plus_1, i16 % i16 AS i16_i16, i16 % (i16 + INT16(1)) AS i16_i16_plus_1, i16 % i32 AS i16_i32, i16 % (i32 + INT32(1)) AS i16_i32_plus_1, i16 % i64 AS i16_i64, i16 % (i64 + INT64(1)) AS i16_i64_plus_1, i16 % u8 AS i16_u8, i16 % (u8 + UINT8(1)) AS i16_u8_plus_1, i16 % u16 AS i16_u16, i16 % (u16 + UINT16(1)) AS i16_u16_plus_1, i16 % u32 AS i16_u32, i16 % (u32 + UINT32(1)) AS i16_u32_plus_1, i16 % u64 AS i16_u64, i16 % (u64 + UINT64(1)) AS i16_u64_plus_1 FROM FunctionModulo_stream INTO CHECKSUM"
    "test_name": "function/arithmetical/FunctionModulo.test"
  - "query": "SELECT i32 % i8 AS i32_i8, i32 % (i8 + INT8(1)) AS i32_i8_plus_1, i32 % i16 AS i32_i16, i32 % (i16 + INT16(1)) AS i32_i16_plus_1, i32 % i32 AS i32_i32, i32 % (i32 + INT32(1)) AS i32_i32_plus_1, i32 % i64 AS i32_i64, i32 % (i64 + INT64(1)) AS i32_i64_plus_1, i32 % u8 AS i32_u8, i32 % (u8 + UINT8(1)) AS i32_u8_plus_1, i32 % u16 AS i32_u16, i32 % (u16 + UINT16(1)) AS i32_u16_plus_1, i32 % u32 AS i32_u32, i32 % (u32 + UINT32(1)) AS i32_u32_plus_1, i32 % u64 AS i32_u64, i32 % (u64 + UINT64(1)) AS i32_u64_plus_1 FROM FunctionModulo_stream INTO CHECKSUM"
    "test_name": "function/arithmetical/FunctionModulo.test"
  - "query": "SELECT i64 % i8 AS i64_i8, i64 % (i8 + INT8(1)) AS i64_i8_plus_1, i64 % i16 AS i64_i16, i64 % (i16 + INT16(1)) AS i64_i16_plus_1, i64 % i32 AS i64_i32, i64 % (i32 + INT32(1)) AS i64_i32_plus_1, i64 % i64 AS i64_i64, i64 % (i64 + INT64(1)) AS i64_i64_plus_1, i64 % u8 AS i64_u8, i64 % (u8 + UINT8(1)) AS i64_u8_plus_1, i64 % u16 AS i64_u16, i64 % (u16 + UINT16(1)) AS i64_u16_plus_1, i64 % u32 AS i64_u32, i64 % (u32 + UINT32(1)) AS i64_u32_plus_1, i64 % u64 AS i64_u64, i64 % (u64 + UINT64(1)) AS i64_u64_plus_1 FROM FunctionModulo_stream INTO CHECKSUM"
    "test_name": "function/arithmetical/FunctionModulo.test"
  - "query": "SELECT u8 % i8 AS u8_i8, u8 % (i8 + INT8(1)) AS u8_i8_plus_1, u8 % i16 AS u8_i16, u8 % (i16 + INT16(1)) AS u8_i16_plus_1, u8 % i32 AS u8_i32, u8 % (i32 + INT32(1)) AS u8_i32_plus_1, u8 % i64 AS u8_i64, u8 % (i64 + INT64(1)) AS u8_i64_plus_1, u8 % u8 AS u8_u8, u8 % (u8 + UINT8(1)) AS u8_u8_plus_1, u8 % u16 AS u8_u16, u8 % (u16 + UINT16(1)) AS u8_u16_plus_1, u8 % u32 AS u8_u32, u8 % (u32 + UINT32(1)) AS u8_u32_plus_1, u8 % u64 AS u8_u64, u8 % (u64 + UINT64(1)) AS u8_u64_plus_1 FROM FunctionModulo_stream INTO CHECKSUM"
    "test_name": "function/arithmetical/FunctionModulo.test"
  - "query": "SELECT u16 % i8 AS u16_i8, u16 % (i8 + INT8(1)) AS u16_i8_plus_1, u16 % i16 AS u16_i16, u16 % (i16 + INT16(1)) AS u16_i16_plus_1, u16 % i32 AS u16_i32, u16 % (i32 + INT32(1)) AS u16_i32_plus_1, u16 % i64 AS u16_i64, u16 % (i64 + INT64(1)) AS u16_i64_plus_1, u16 % u8 AS u16_u8, u16 % (u8 + UINT8(1)) AS u16_u8_plus_1, u16 % u16 AS u16_u16, u16 % (u16 + UINT16(1)) AS u16_u16_plus_1, u16 % u32 AS u16_u32, u16 % (u32 + UINT32(1)) AS u16_u32_plus_1, u16 % u64 AS u16_u64, u16 % (u64 + UINT64(1)) AS u16_u64_plus_1 FROM FunctionModulo_stream INTO CHECKSUM"
    "test_name": "function/arithmetical/FunctionModulo.test"
  - "query": "SELECT u32 % i8 AS u32_i8, u32 % (i8 + INT8(1)) AS u32_i8_plus_1, u32 % i16 AS u32_i16, u32 % (i16 + INT16(1)) AS u32_i16_plus_1, u32 % i32 AS u32_i32, u32 % (i32 + INT32(1)) AS u32_i32_plus_1, u32 % i64 AS u32_i64, u32 % (i64 + INT64(1)) AS u32_i64_plus_1, u32 % u8 AS u32_u8, u32 % (u8 + UINT8(1)) AS u32_u8_plus_1, u32 % u16 AS u32_u16, u32 % (u16 + UINT16(1)) AS u32_u16_plus_1, u32 % u32 AS u32_u32, u32 % (u32 + UINT32(1)) AS u32_u32_plus_1, u32 % u64 AS u32_u64, u32 % (u64 + UINT64(1)) AS u32_u64_plus_1 FROM FunctionModulo_stream INTO CHECKSUM"
    "test_name": "function/arithmetical/FunctionModulo.test"
  - "query": "SELECT u64 % i8 AS u64_i8, u64 % (i8 + INT8(1)) AS u64_i8_plus_1, u64 % i16 AS u64_i16, u64 % (i16 + INT16(1)) AS u64_i16_plus_1, u64 % i32 AS u64_i32, u64 % (i32 + INT32(1)) AS u64_i32_plus_1, u64 % i64 AS u64_i64, u64 % (i64 + INT64(1)) AS u64_i64_plus_1, u64 % u8 AS u64_u8, u64 % (u8 + UINT8(1)) AS u64_u8_plus_1, u64 % u16 AS u64_u16, u64 % (u16 + UINT16(1)) AS u64_u16_plus_1, u64 % u32 AS u64_u32, u64 % (u32 + UINT32(1)) AS u64_u32_plus_1, u64 % u64 AS u64_u64, u64 % (u64 + UINT64(1)) AS u64_u64_plus_1 FROM FunctionModulo_stream INTO CHECKSUM"
    "test_name": "function/arithmetical/FunctionModulo.test"
  - "query": "SELECT i8 * i8 AS i8_i8, i8 * (i8 + INT32(1)) AS i8_i8_plus_1, i8 * i16 AS i8_i16, i8 * (i16 + INT32(1)) AS i8_i16_plus_1, i8 * i32 AS i8_i32, i8 * (i32 + INT32(1)) AS i8_i32_plus_1, i8 * i64 AS i8_i64, i8 * (i64 + INT32(1)) AS i8_i64_plus_1, i8 * u8 AS i8_u8, i8 * (u8 + UINT8(1)) AS i8_u8_plus_1, i8 * u16 AS i8_u16, i8 * (u16 + UINT16(1)) AS i8_u16_plus_1, i8 * u32 AS i8_u32, i8 * (u32 + UINT32(1)) AS i8_u32_plus_1, i8 * u64 AS i8_u64, i8 * (u64 + UINT64(1)) AS i8_u64_plus_1, i8 * f32 AS i8_f32, i8 * (f32 + FLOAT32(1)) AS i8_f32_plus_1, i8 * f64 AS i8_f64, i8 * (f64 + FLOAT64(1)) AS i8_f64_plus_1 FROM FunctionMul_stream INTO CHECKSUM"
    "test_name": "function/arithmetical/FunctionMul.test"
  - "query": "SELECT i16 * i8 AS i16_i8, i16 * (i8 + INT8(1)) AS i16_i8_plus_1, i16 * i16 AS i16_i16, i16 * (i16 + INT16(1)) AS i16_i16_plus_1, i16 * i32 AS i16_i32, i16 * (i32 + INT32(1)) AS i16_i32_plus_1, i16 * i64 AS i16_i64, i16 * (i64 + INT64(1)) AS i16_i64_plus_1, i16 * u8 AS i16_u8, i16 * (u8 + UINT8(1)) AS i16_u8_plus_1, i16 * u16 AS i16_u16, i16 * (u16 + UINT16(1)) AS i16_u16_plus_1, i16 * u32 AS i16_u32, i16 * (u32 + UINT32(1)) AS i16_u32_plus_1, i16 * u64 AS i16_u64, i16 * (u64 + UINT64(1)) AS i16_u64_plus_1, i16 * f32 AS i16_f32, i16 * (f32 + FLOAT32(1)) AS i16_f32_plus_1, i16 * f64 AS i16_f64, i16 * (f64 + FLOAT64(1)) AS i16_f64_plus_1 FROM FunctionMul_stream INTO CHECKSUM"
    "test_name": "function/arithmetical/FunctionMul.test"
  - "query": "SELECT i32 * i8 AS i32_i8, i32 * (i8 + INT8(1)) AS i32_i8_plus_1, i32 * i16 AS i32_i16, i32 * (i16 + INT16(1)) AS i32_i16_plus_1, i32 * i32 AS i32_i32, i32 * (i32 + INT32(1)) AS i32_i32_plus_1, i32 * i64 AS i32_i64, i32 * (i64 + INT64(1)) AS i32_i64_plus_1, i32 * u8 AS i32_u8, i32 * (u8 + UINT8(1)) AS i32_u8_plus_1, i32 * u16 AS i32_u16, i32 * (u16 + UINT16(1)) AS i32_u16_plus_1, i32 * u32 AS i32_u32, i32 * (u32 + UINT32(1)) AS i32_u32_plus_1, i32 * u64 AS i32_u64, i32 * (u64 + UINT64(1)) AS i32_u64_plus_1, i32 * f32 AS i32_f32, i32 * (f32 + FLOAT32(1)) AS i32_f32_plus_1, i32 * f64 AS i32_f64, i32 * (f64 + FLOAT64(1)) AS i32_f64_plus_1 FROM FunctionMul_stream INTO CHECKSUM"
    "test_name": "function/arithmetical/FunctionMul.test"
  - "query": "SELECT i64 * i8 AS i64_i8, i64 * (i8 + INT8(1)) AS i64_i8_plus_1, i64 * i16 AS i64_i16, i64 * (i16 + INT16(1)) AS i64_i16_plus_1, i64 * i32 AS i64_i32, i64 * (i32 + INT32(1)) AS i64_i32_plus_1, i64 * i64 AS i64_i64, i64 * (i64 + INT64(1)) AS i64_i64_plus_1, i64 * u8 AS i64_u8, i64 * (u8 + UINT8(1)) AS i64_u8_plus_1, i64 * u16 AS i64_u16, i64 * (u16 + UINT16(1)) AS i64_u16_plus_1, i64 * u32 AS i64_u32, i64 * (u32 + UINT32(1)) AS i64_u32_plus_1, i64 * u64 AS i64_u64, i64 * (u64 + UINT64(1)) AS i64_u64_plus_1, i64 * f32 AS i64_f32, i64 * (f32 + FLOAT32(1)) AS i64_f32_plus_1, i64 * f64 AS i64_f64, i64 * (f64 + FLOAT64(1)) AS i64_f64_plus_1 FROM FunctionMul_stream INTO CHECKSUM"
    "test_name": "function/arithmetical/FunctionMul.test"
  - "query": "SELECT i8 - i8 AS i8_i8, i8 - i8 + INT8(1) AS i8_i8_plus_1, i8 - i16 AS i8_i16, i8 - i16 + INT16(1) AS i8_i16_plus_1, i8 - i32 AS i8_i32, i8 - i32 + INT32(1) AS i8_i32_plus_1, i8 - i64 AS i8_i64, i8 - i64 + INT64(1) AS i8_i64_plus_1, i8 - u8  AS i8_u8, i8 - u8 + UINT8(1) AS i8_u8_plus_1, i8 - u16 AS i8_u16, i8 - u16 + UINT16(1) AS i8_u16_plus_1, i8 - u32 AS i8_u32, i8 - u32 + UINT32(1) AS i8_u32_plus_1, i8 - u64 AS i8_u64, i8 - u64 + UINT64(1) AS i8_u64_plus_1, i8 - f32 AS i8_f32, i8 - f32 + FLOAT32(1) AS i8_f32_plus_1, i8 - f64 AS i8_f64, i8 - f64 + FLOAT64(1) AS i8_f64_plus_1 FROM FunctionSub_stream INTO CHECKSUM"
    "test_name": "function/arithmetical/FunctionAdd.test"
  - "query": "SELECT i16 - i8 AS i16_i8, i16 - i8 + INT8(1) AS i16_i8_plus_1, i16 - i16 AS i16_i16, i16 - i16 + INT16(1) AS i16_i16_plus_1, i16 - i32 AS i16_i32, i16 - i32 + INT32(1) AS i16_i32_plus_1, i16 - i64 AS i16_i64, i16 - i64 + INT64(1) AS i16_i64_plus_1, i16 - u8 AS i16_u8, i16 - u8 + UINT8(1) AS i16_u8_plus_1, u16 - i16 AS i16_u16, u16 - i16 + UINT16(1) AS i16_u16_plus_1, i16 - u32 AS i16_u32, i16 - u32 + UINT32(1) AS i16_u32_plus_1, i16 - u64 AS i16_u64, i16 - u64 + UINT32(1) AS i16_u64_plus_1, i16 - f32 AS i16_f32, i16 - f32 + FLOAT32(1) AS i16_f32_plus_1, i16 - f64 AS i16_f64, i16 - f64 + FLOAT64(1) AS i16_f64_plus_1 FROM FunctionSub_stream INTO CHECKSUM"
    "test_name": "function/arithmetical/FunctionAdd.test"
  - "query": "SELECT i32 - i8 AS i32_i8, i32 - i8 + INT8(1) AS i32_i8_plus_1, i32 - i16 AS i32_i16, i32 - i16 + INT16(1) AS i32_i16_plus_1, i32 - i32 AS i32_i32, i32 - i32 + INT32(1) AS i32_i32_plus_1, i32 - i64 AS i32_i64, i32 - i64 + INT64(1) AS i32_i64_plus_1, i32 - u8 AS i32_u8, i32 - u8 + UINT8(1) AS i32_u8_plus_1, i32 - u16 AS i32_u16, i32 - u16 + UINT16(1) AS i32_u16_plus_1, i32 - u32 AS i32_u32, i32 - u32 + UINT32(1) AS i32_u32_plus_1, i32 - u64 AS i32_u64, i32 - u64 + UINT32(1) AS i32_u64_plus_1, i32 - f32 AS i32_f32, i32 - f32 + FLOAT32(1) AS i32_f32_plus_1, i32 - f64 AS i32_f64, i32 - f64 + FLOAT64(1) AS i32_f64_plus_1 FROM FunctionSub_stream INTO CHECKSUM"
    "test_name": "function/arithmetical/FunctionAdd.test"
  - "query": "SELECT i64 - i8 AS i64_i8, i64 - i8 + INT8(1) AS i64_i8_plus_1, i64 - i16 AS i64_i16, i64 - i16 + INT16(1) AS i64_i16_plus_1, i64 - i32 AS i64_i32, i64 - i32 + INT32(1) AS i64_i32_plus_1, i64 - i64 AS i64_i64, i64 - i64 + INT64(1) AS i64_i64_plus_1, i64 - u8 AS i64_u8, i64 - u8 + UINT32(1) AS i64_u8_plus_1, i64 - u16 AS i64_u16, i64 - u16 + UINT32(1) AS i64_u16_plus_1, i64 - u32 AS i64_u32, i64 - u32 + UINT32(1) AS i64_u32_plus_1, i64 - u64 AS i64_u64, i64 - u64 + UINT32(1) AS i64_u64_plus_1, i64 - f32 AS i64_f32, i64 - f32 + FLOAT32(1) AS i64_f32_plus_1, i64 - f64 AS i64_f64, i64 - f64 + FLOAT64(1) AS i64_f64_plus_1 FROM FunctionSub_stream INTO CHECKSUM"
    "test_name": "function/arithmetical/FunctionAdd.test"
  - "query": "SELECT u8 - i8 AS u8_i8, u8 - i8 + INT8(1) AS u8_i8_plus_1, u8 - i16 AS u8_i16, u8 - i16 + INT16(1) AS u8_i16_plus_1, u8 - i32 AS u8_i32, u8 - i32 + INT32(1) AS u8_i32_plus_1, u8 - i64 AS u8_i64, u8 - i64 + INT64(1) AS u8_i64_plus_1, u8 - u8  AS u8_u8, u8 - u8 + UINT8(1) AS u8_u8_plus_1, u8 - u16 AS u8_u16, u8 - u16 + UINT16(1) AS u8_u16_plus_1, u8 - u32 AS u8_u32, u8 - u32 + UINT32(1) AS u8_u32_plus_1, u8 - u64 AS u8_u64, u8 - u64 + UINT64(1) AS u8_u64_plus_1, u8 - f32 AS u8_f32, u8 - f32 + FLOAT32(1) AS u8_f32_plus_1, u8 - f64 AS u8_f64, u8 - f64 + FLOAT64(1) AS u8_f64_plus_1 FROM FunctionSub_stream INTO CHECKSUM"
    "test_name": "function/arithmetical/FunctionAdd.test"
  - "query": "SELECT u16 - i8 AS u16_i8, u16 - i8 + INT8(1) AS u16_i8_plus_1, u16 - i16 AS u16_i16, u16 - i16 + INT16(1) AS u16_i16_plus_1, u16 - i32 AS u16_i32, u16 - i32 + INT32(1) AS u16_i32_plus_1, u16 - i64 AS u16_i64, u16 - i64 + INT64(1) AS u16_i64_plus_1, u16 - u8 AS u16_u8, u16 - u8 + UINT8(1) AS u16_u8_plus_1, u16 - i16 AS u16_u16, u16 - i16 + INT16(1) AS u16_u16_plus_1, u16 - u32 AS u16_u32, u16 - u32 + UINT32(1) AS u16_u32_plus_1, u16 - u64 AS u16_u64, u16 - u64 + UINT32(1) AS u16_u64_plus_1, u16 - f32 AS u16_f32, u16 - f32 + FLOAT32(1) AS u16_f32_plus_1, u16 - f64 AS u16_f64, u16 - f64 + FLOAT64(1) AS u16_f64_plus_1 FROM FunctionSub_stream INTO CHECKSUM"
    "test_name": "function/arithmetical/FunctionAdd.test"
  - "query": "SELECT u32 - i8 AS u32_i8, u32 - i8 + INT8(1) AS u32_i8_plus_1, u32 - i16 AS u32_i16, u32 - i16 + INT16(1) AS u32_i16_plus_1, u32 - i32 AS u32_i32, u32 - i32 + INT32(1) AS u32_i32_plus_1, u32 - i64 AS u32_i64, u32 - i64 + INT64(1) AS u32_i64_plus_1, u32 - u8 AS u32_u8, u32 - u8 + UINT32(1) AS u32_u8_plus_1, u32 - u16 AS u32_u16, u32 - u16 + UINT32(1) AS u32_u16_plus_1, u32 - u32 AS u32_u32, u32 - u32 + UINT32(1) AS u32_u32_plus_1, u32 - u64 AS u32_u64, u32 - u64 + UINT32(1) AS u32_u64_plus_1, u32 - f32 AS u32_f32, u32 - f32 + FLOAT32(1) AS u32_f32_plus_1, u32 - f64 AS u32_f64, u32 - f64 + FLOAT64(1) AS u32_f64_plus_1 FROM FunctionSub_stream INTO CHECKSUM"
    "test_name": "function/arithmetical/FunctionAdd.test"
  - "query": "SELECT u64 - i8 AS u64_i8, u64 - i8 + INT8(1) AS u64_i8_plus_1, u64 - i16 AS u64_i16, u64 - i16 + INT16(1) AS u64_i16_plus_1, u64 - i32 AS u64_i32, u64 - i32 + INT32(1) AS u64_i32_plus_1, u64 - i64 AS u64_i64, u64 - i64 + INT64(1) AS u64_i64_plus_1, u64 - u8 AS u64_u8, u64 - u8 + UINT32(1) AS u64_u8_plus_1, u64 - u16 AS u64_u16, u64 - u16 + UINT32(1) AS u64_u16_plus_1, u64 - u32 AS u64_u32, u64 - u32 + UINT32(1) AS u64_u32_plus_1, u64 - u64 AS u64_u64, u64 - u64 + UINT32(1) AS u64_u64_plus_1, u64 - f32 AS u64_f32, u64 - f32 + FLOAT32(1) AS u64_f32_plus_1, u64 - f64 AS u64_f64, u64 - f64 + FLOAT64(1) AS u64_f64_plus_1 FROM FunctionSub_stream INTO CHECKSUM"
    "test_name": "function/arithmetical/FunctionAdd.test"
  - "query": "SELECT f32 - i8 AS f32_i8, f32 - i8 + INT8(1) AS f32_i8_plus_1, f32 - i16 AS f32_i16, f32 - i16 + INT16(1) AS f32_i16_plus_1, f32 - i32 AS f32_i32, f32 - i32 + INT32(1) AS f32_i32_plus_1, f32 - i64 AS f32_i64, f32 - i64 + INT64(1) AS f32_i64_plus_1, f32 - u8 AS f32_u8, f32 - u8 + UINT32(1) AS f32_u8_plus_1, f32 - u16 AS f32_u16, f32 - u16 + UINT32(1) AS f32_u16_plus_1, f32 - u32 AS f32_u32, f32 - u32 + UINT32(1) AS f32_u32_plus_1, f32 - u64 AS f32_u64, f32 - u64 + UINT32(1) AS f32_u64_plus_1, f32 - f32 AS f32_f32, f32 - f32 + FLOAT32(1) AS f32_f32_plus_1, f32 - f64 AS f32_f64, f32 - f64 + FLOAT64(1) AS f32_f64_plus_1 FROM FunctionSub_stream INTO CHECKSUM"
    "test_name": "function/arithmetical/FunctionAdd.test"
  - "query": "SELECT f64 - i8 AS f64_i8, f64 - i8 + INT8(1) AS f64_i8_plus_1, f64 - i16 AS f64_i16, f64 - i16 + INT16(1) AS f64_i16_plus_1, f64 - i32 AS f64_i32, f64 - i32 + INT32(1) AS f64_i32_plus_1, f64 - i64 AS f64_i64, f64 - i64 + INT64(1) AS f64_i64_plus_1, f64 - u8 AS f64_u8, f64 - u8 + UINT32(1) AS f64_u8_plus_1, f64 - u16 AS f64_u16, f64 - u16 + UINT32(1) AS f64_u16_plus_1, f64 - u32 AS f64_u32, f64 - u32 + UINT32(1) AS f64_u32_plus_1, f64 - u64 AS f64_u64, f64 - u64 + UINT32(1) AS f64_u64_plus_1, f64 - f32 AS f64_f32, f64 - f32 + FLOAT32(1) AS f64_f32_plus_1, f64 - f64 AS f64_f64, f64 - f64 + FLOAT64(1) AS f64_f64_plus_1 FROM FunctionSub_stream INTO CHECKSUM"
    "test_name": "function/arithmetical/FunctionAdd.test"
  - "query": "SELECT i8 > i8 AS i8_i8, i8 > i8 + INT8(1) AS i8_i8_plus_1, i8 > i16 AS i8_i16, i8 > i16 + INT16(1) AS i8_i16_plus_1, i8 > i32 AS i8_i32, i8 > i32 + INT32(1) AS i8_i32_plus_1, i8 > i64 AS i8_i64, i8 > i64 + INT64(1) AS i8_i64_plus_1, i8 > u8  AS i8_u8, i8 > u8 + UINT8(1) AS i8_u8_plus_1, i8 > u16 AS i8_u16, i8 > u16 + UINT16(1) AS i8_u16_plus_1, i8 > u32 AS i8_u32, i8 > u32 + UINT32(1) AS i8_u32_plus_1, i8 > u64 AS i8_u64, i8 > u64 + UINT64(1) AS i8_u64_plus_1, i8 > f32 AS i8_f32, i8 > f32 + FLOAT32(1) AS i8_f32_plus_1, i8 > f64 AS i8_f64, i8 > f64 + FLOAT64(1) AS i8_f64_plus_1 FROM FunctionGreater_stream INTO CHECKSUM"
    "test_name": "function/comparison/FunctionGreater.test"
  - "query": "SELECT i16 > i8 AS i16_i8, i16 > i8 + INT8(1) AS i16_i8_plus_1, i16 > i16 AS i16_i16, i16 > i16 + INT16(1) AS i16_i16_plus_1, i16 > i32 AS i16_i32, i16 > i32 + INT32(1) AS i16_i32_plus_1, i16 > i64 AS i16_i64, i16 > i64 + INT64(1) AS i16_i64_plus_1, i16 > u8 AS i16_u8, i16 > u8 + UINT8(1) AS i16_u8_plus_1, u16 > i16 AS i16_u16, u16 > i16 + INT16(1) AS i16_u16_plus_1, i16 > u32 AS i16_u32, i16 > u32 + UINT32(1) AS i16_u32_plus_1, i16 > u64 AS i16_u64, i16 > u64 + UINT64(1) AS i16_u64_plus_1, i16 > f32 AS i16_f32, i16 > f32 + FLOAT32(1) AS i16_f32_plus_1, i16 > f64 AS i16_f64, i16 > f64 + FLOAT64(1) AS i16_f64_plus_1 FROM FunctionGreater_stream INTO CHECKSUM"
    "test_name": "function/comparison/FunctionGreater.test"
  - "query": "SELECT i32 > i8 AS i32_i8, i32 > i8 + INT8(1) AS i32_i8_plus_1, i32 > i16 AS i32_i16, i32 > i16 + INT16(1) AS i32_i16_plus_1, i32 > i32 AS i32_i32, i32 > i32 + INT32(1) AS i32_i32_plus_1, i32 > i64 AS i32_i64, i32 > i64 + INT64(1) AS i32_i64_plus_1, i32 > u8 AS i32_u8, i32 > u8 + UINT8(1) AS i32_u8_plus_1, i32 > u16 AS i32_u16, i32 > u16 + UINT16(1) AS i32_u16_plus_1, i32 > u32 AS i32_u32, i32 > u32 + UINT32(1) AS i32_u32_plus_1, i32 > u64 AS i32_u64, i32 > u64 + UINT64(1) AS i32_u64_plus_1, i32 > f32 AS i32_f32, i32 > f32 + FLOAT32(1) AS i32_f32_plus_1, i32 > f64 AS i32_f64, i32 > f64 + FLOAT64(1) AS i32_f64_plus_1 FROM FunctionGreater_stream INTO CHECKSUM"
    "test_name": "function/comparison/FunctionGreater.test"
  - "query": "SELECT i64 > i8 AS i64_i8, i64 > i8 + INT8(1) AS i64_i8_plus_1, i64 > i16 AS i64_i16, i64 > i16 + INT16(1) AS i64_i16_plus_1, i64 > i32 AS i64_i32, i64 > i32 + INT32(1) AS i64_i32_plus_1, i64 > i64 AS i64_i64, i64 > i64 + INT64(1) AS i64_i64_plus_1, i64 > u8 AS i64_u8, i64 > u8 + UINT8(1) AS i64_u8_plus_1, i64 > u16 AS i64_u16, i64 > u16 + UINT16(1) AS i64_u16_plus_1, i64 > u32 AS i64_u32, i64 > u32 + UINT32(1) AS i64_u32_plus_1, i64 > u64 AS i64_u64, i64 > u64 + UINT64(1) AS i64_u64_plus_1, i64 > f32 AS i64_f32, i64 > f32 + FLOAT32(1) AS i64_f32_plus_1, i64 > f64 AS i64_f64, i64 > f64 + FLOAT64(1) AS i64_f64_plus_1 FROM FunctionGreater_stream INTO CHECKSUM"
    "test_name": "function/comparison/FunctionGreater.test"
  - "query": "SELECT u8 > i8 AS u8_i8, u8 > i8 + INT8(1) AS u8_i8_plus_1, u8 > i16 AS u8_i16, u8 > i16 + INT16(1) AS u8_i16_plus_1, u8 > i32 AS u8_i32, u8 > i32 + INT32(1) AS u8_i32_plus_1, u8 > i64 AS u8_i64, u8 > i64 + INT64(1) AS u8_i64_plus_1, u8 > u8  AS u8_u8, u8 > u8 + UINT8(1) AS u8_u8_plus_1, u8 > u16 AS u8_u16, u8 > u16 + UINT16(1) AS u8_u16_plus_1, u8 > u32 AS u8_u32, u8 > u32 + UINT32(1) AS u8_u32_plus_1, u8 > u64 AS u8_u64, u8 > u64 + UINT64(1) AS u8_u64_plus_1, u8 > f32 AS u8_f32, u8 > f32 + FLOAT32(1) AS u8_f32_plus_1, u8 > f64 AS u8_f64, u8 > f64 + FLOAT64(1) AS u8_f64_plus_1 FROM FunctionGreater_stream INTO CHECKSUM"
    "test_name": "function/comparison/FunctionGreater.test"
  - "query": "SELECT u16 > i8 AS u16_i8, u16 > i8 + INT8(1) AS u16_i8_plus_1, u16 > i16 AS u16_i16, u16 > i16 + INT16(1) AS u16_i16_plus_1, u16 > i32 AS u16_i32, u16 > i32 + INT32(1) AS u16_i32_plus_1, u16 > i64 AS u16_i64, u16 > i64 + INT64(1) AS u16_i64_plus_1, u16 > u8 AS u16_u8, u16 > u8 + UINT8(1) AS u16_u8_plus_1, u16 > i16 AS u16_u16, u16 > i16 + INT16(1) AS u16_u16_plus_1, u16 > u32 AS u16_u32, u16 > u32 + UINT32(1) AS u16_u32_plus_1, u16 > u64 AS u16_u64, u16 > u64 + UINT64(1) AS u16_u64_plus_1, u16 > f32 AS u16_f32, u16 > f32 + FLOAT32(1) AS u16_f32_plus_1, u16 > f64 AS u16_f64, u16 > f64 + FLOAT64(1) AS u16_f64_plus_1 FROM FunctionGreater_stream INTO CHECKSUM"
    "test_name": "function/comparison/FunctionGreater.test"
  - "query": "SELECT u32 > i8 AS u32_i8, u32 > i8 + INT8(1) AS u32_i8_plus_1, u32 > i16 AS u32_i16, u32 > i16 + INT16(1) AS u32_i16_plus_1, u32 > i32 AS u32_i32, u32 > i32 + INT32(1) AS u32_i32_plus_1, u32 > i64 AS u32_i64, u32 > i64 + INT64(1) AS u32_i64_plus_1, u32 > u8 AS u32_u8, u32 > u8 + UINT8(1) AS u32_u8_plus_1, u32 > u16 AS u32_u16, u32 > u16 + UINT16(1) AS u32_u16_plus_1, u32 > u32 AS u32_u32, u32 > u32 + UINT32(1) AS u32_u32_plus_1, u32 > u64 AS u32_u64, u32 > u64 + UINT64(1) AS u32_u64_plus_1, u32 > f32 AS u32_f32, u32 > f32 + FLOAT32(1) AS u32_f32_plus_1, u32 > f64 AS u32_f64, u32 > f64 + FLOAT64(1) AS u32_f64_plus_1 FROM FunctionGreater_stream INTO CHECKSUM"
    "test_name": "function/comparison/FunctionGreater.test"
  - "query": "SELECT u64 > i8 AS u64_i8, u64 > i8 + INT8(1) AS u64_i8_plus_1, u64 > i16 AS u64_i16, u64 > i16 + INT16(1) AS u64_i16_plus_1, u64 > i32 AS u64_i32, u64 > i32 + INT32(1) AS u64_i32_plus_1, u64 > i64 AS u64_i64, u64 > i64 + INT64(1) AS u64_i64_plus_1, u64 > u8 AS u64_u8, u64 > u8 + UINT8(1) AS u64_u8_plus_1, u64 > u16 AS u64_u16, u64 > u16 + UINT16(1) AS u64_u16_plus_1, u64 > u32 AS u64_u32, u64 > u32 + UINT32(1) AS u64_u32_plus_1, u64 > u64 AS u64_u64, u64 > u64 + UINT64(1) AS u64_u64_plus_1, u64 > f32 AS u64_f32, u64 > f32 + FLOAT32(1) AS u64_f32_plus_1, u64 > f64 AS u64_f64, u64 > f64 + FLOAT64(1) AS u64_f64_plus_1 FROM FunctionGreater_stream INTO CHECKSUM"
    "test_name": "function/comparison/FunctionGreater.test"
  - "query": "SELECT i8 >= i8 AS i8_i8, i8 >= i8 + INT8(1) AS i8_i8_plus_1, i8 >= i16 AS i8_i16, i8 >= i16 + INT16(1) AS i8_i16_plus_1, i8 >= i32 AS i8_i32, i8 >= i32 + INT32(1) AS i8_i32_plus_1, i8 >= i64 AS i8_i64, i8 >= i64 + INT64(1) AS i8_i64_plus_1, i8 >= u8  AS i8_u8, i8 >= u8 + UINT8(1) AS i8_u8_plus_1, i8 >= u16 AS i8_u16, i8 >= u16 + UINT16(1) AS i8_u16_plus_1, i8 >= u32 AS i8_u32, i8 >= u32 + UINT32(1) AS i8_u32_plus_1, i8 >= u64 AS i8_u64, i8 >= u64 + UINT64(1) AS i8_u64_plus_1, i8 >= f32 AS i8_f32, i8 >= f32 + FLOAT32(1) AS i8_f32_plus_1, i8 >= f64 AS i8_f64, i8 >= f64 + FLOAT64(1) AS i8_f64_plus_1 FROM FunctionGreaterEquals_stream INTO CHECKSUM"
    "test_name": "function/comparison/FunctionGreaterEquals.test"
  - "query": "SELECT i16 >= i8 AS i16_i8, i16 >= i8 + INT8(1) AS i16_i8_plus_1, i16 >= i16 AS i16_i16, i16 >= i16 + INT16(1) AS i16_i16_plus_1, i16 >= i32 AS i16_i32, i16 >= i32 + INT32(1) AS i16_i32_plus_1, i16 >= i64 AS i16_i64, i16 >= i64 + INT64(1) AS i16_i64_plus_1, i16 >= u8 AS i16_u8, i16 >= u8 + UINT8(1) AS i16_u8_plus_1, u16 >= i16 AS i16_u16, u16 >= i16 + INT16(1) AS i16_u16_plus_1, i16 >= u32 AS i16_u32, i16 >= u32 + UINT32(1) AS i16_u32_plus_1, i16 >= u64 AS i16_u64, i16 >= u64 + UINT64(1) AS i16_u64_plus_1, i16 >= f32 AS i16_f32, i16 >= f32 + FLOAT32(1) AS i16_f32_plus_1, i16 >= f64 AS i16_f64, i16 >= f64 + FLOAT64(1) AS i16_f64_plus_1 FROM FunctionGreaterEquals_stream INTO CHECKSUM"
    "test_name": "function/comparison/FunctionGreaterEquals.test"
  - "query": "SELECT i32 >= i8 AS i32_i8, i32 >= i8 + INT8(1) AS i32_i8_plus_1, i32 >= i16 AS i32_i16, i32 >= i16 + INT16(1) AS i32_i16_plus_1, i32 >= i32 AS i32_i32, i32 >= i32 + INT32(1) AS i32_i32_plus_1, i32 >= i64 AS i32_i64, i32 >= i64 + INT64(1) AS i32_i64_plus_1, i32 >= u8 AS i32_u8, i32 >= u8 + UINT8(1) AS i32_u8_plus_1, i32 >= u16 AS i32_u16, i32 >= u16 + UINT16(1) AS i32_u16_plus_1, i32 >= u32 AS i32_u32, i32 >= u32 + UINT32(1) AS i32_u32_plus_1, i32 >= u64 AS i32_u64, i32 >= u64 + UINT64(1) AS i32_u64_plus_1, i32 >= f32 AS i32_f32, i32 >= f32 + FLOAT32(1) AS i32_f32_plus_1, i32 >= f64 AS i32_f64, i32 >= f64 + FLOAT64(1) AS i32_f64_plus_1 FROM FunctionGreaterEquals_stream INTO CHECKSUM"
    "test_name": "function/comparison/FunctionGreaterEquals.test"
  - "query": "SELECT i64 >= i8 AS i64_i8, i64 >= i8 + INT8(1) AS i64_i8_plus_1, i64 >= i16 AS i64_i16, i64 >= i16 + INT16(1) AS i64_i16_plus_1, i64 >= i32 AS i64_i32, i64 >= i32 + INT32(1) AS i64_i32_plus_1, i64 >= i64 AS i64_i64, i64 >= i64 + INT64(1) AS i64_i64_plus_1, i64 >= u8 AS i64_u8, i64 >= u8 + UINT8(1) AS i64_u8_plus_1, i64 >= u16 AS i64_u16, i64 >= u16 + UINT16(1) AS i64_u16_plus_1, i64 >= u32 AS i64_u32, i64 >= u32 + UINT32(1) AS i64_u32_plus_1, i64 >= u64 AS i64_u64, i64 >= u64 + UINT64(1) AS i64_u64_plus_1, i64 >= f32 AS i64_f32, i64 >= f32 + FLOAT32(1) AS i64_f32_plus_1, i64 >= f64 AS i64_f64, i64 >= f64 + FLOAT64(1) AS i64_f64_plus_1 FROM FunctionGreaterEquals_stream INTO CHECKSUM"
    "test_name": "function/comparison/FunctionGreaterEquals.test"
  - "query": "SELECT u8 >= i8 AS u8_i8, u8 >= i8 + INT8(1) AS u8_i8_plus_1, u8 >= i16 AS u8_i16, u8 >= i16 + INT16(1) AS u8_i16_plus_1, u8 >= i32 AS u8_i32, u8 >= i32 + INT32(1) AS u8_i32_plus_1, u8 >= i64 AS u8_i64, u8 >= i64 + INT64(1) AS u8_i64_plus_1, u8 >= u8  AS u8_u8, u8 >= u8 + UINT8(1) AS u8_u8_plus_1, u8 >= u16 AS u8_u16, u8 >= u16 + UINT16(1) AS u8_u16_plus_1, u8 >= u32 AS u8_u32, u8 >= u32 + UINT32(1) AS u8_u32_plus_1, u8 >= u64 AS u8_u64, u8 >= u64 + UINT64(1) AS u8_u64_plus_1, u8 >= f32 AS u8_f32, u8 >= f32 + FLOAT32(1) AS u8_f32_plus_1, u8 >= f64 AS u8_f64, u8 >= f64 + FLOAT64(1) AS u8_f64_plus_1 FROM FunctionGreaterEquals_stream INTO CHECKSUM"
    "test_name": "function/comparison/FunctionGreaterEquals.test"
  - "query": "SELECT u16 >= i8 AS u16_i8, u16 >= i8 + INT8(1) AS u16_i8_plus_1, u16 >= i16 AS u16_i16, u16 >= i16 + INT16(1) AS u16_i16_plus_1, u16 >= i32 AS u16_i32, u16 >= i32 + INT32(1) AS u16_i32_plus_1, u16 >= i64 AS u16_i64, u16 >= i64 + INT64(1) AS u16_i64_plus_1, u16 >= u8 AS u16_u8, u16 >= u8 + UINT8(1) AS u16_u8_plus_1, u16 >= i16 AS u16_u16, u16 >= i16 + INT16(1) AS u16_u16_plus_1, u16 >= u32 AS u16_u32, u16 >= u32 + UINT32(1) AS u16_u32_plus_1, u16 >= u64 AS u16_u64, u16 >= u64 + UINT64(1) AS u16_u64_plus_1, u16 >= f32 AS u16_f32, u16 >= f32 + FLOAT32(1) AS u16_f32_plus_1, u16 >= f64 AS u16_f64, u16 >= f64 + FLOAT64(1) AS u16_f64_plus_1 FROM FunctionGreaterEquals_stream INTO CHECKSUM"
    "test_name": "function/comparison/FunctionGreaterEquals.test"
  - "query": "SELECT u32 >= i8 AS u32_i8, u32 >= i8 + INT8(1) AS u32_i8_plus_1, u32 >= i16 AS u32_i16, u32 >= i16 + INT16(1) AS u32_i16_plus_1, u32 >= i32 AS u32_i32, u32 >= i32 + INT32(1) AS u32_i32_plus_1, u32 >= i64 AS u32_i64, u32 >= i64 + INT64(1) AS u32_i64_plus_1, u32 >= u8 AS u32_u8, u32 >= u8 + UINT8(1) AS u32_u8_plus_1, u32 >= u16 AS u32_u16, u32 >= u16 + UINT16(1) AS u32_u16_plus_1, u32 >= u32 AS u32_u32, u32 >= u32 + UINT32(1) AS u32_u32_plus_1, u32 >= u64 AS u32_u64, u32 >= u64 + UINT64(1) AS u32_u64_plus_1, u32 >= f32 AS u32_f32, u32 >= f32 + FLOAT32(1) AS u32_f32_plus_1, u32 >= f64 AS u32_f64, u32 >= f64 + FLOAT64(1) AS u32_f64_plus_1 FROM FunctionGreaterEquals_stream INTO CHECKSUM"
    "test_name": "function/comparison/FunctionGreaterEquals.test"
  - "query": "SELECT u64 >= i8 AS u64_i8, u64 >= i8 + INT8(1) AS u64_i8_plus_1, u64 >= i16 AS u64_i16, u64 >= i16 + INT16(1) AS u64_i16_plus_1, u64 >= i32 AS u64_i32, u64 >= i32 + INT32(1) AS u64_i32_plus_1, u64 >= i64 AS u64_i64, u64 >= i64 + INT64(1) AS u64_i64_plus_1, u64 >= u8 AS u64_u8, u64 >= u8 + UINT8(1) AS u64_u8_plus_1, u64 >= u16 AS u64_u16, u64 >= u16 + UINT16(1) AS u64_u16_plus_1, u64 >= u32 AS u64_u32, u64 >= u32 + UINT32(1) AS u64_u32_plus_1, u64 >= u64 AS u64_u64, u64 >= u64 + UINT64(1) AS u64_u64_plus_1, u64 >= f32 AS u64_f32, u64 >= f32 + FLOAT32(1) AS u64_f32_plus_1, u64 >= f64 AS u64_f64, u64 >= f64 + FLOAT64(1) AS u64_f64_plus_1 FROM FunctionGreaterEquals_stream INTO CHECKSUM"
    "test_name": "function/comparison/FunctionGreaterEquals.test"
  - "query": "SELECT i8 < i8 AS i8_i8, i8 < i8 + INT8(1) AS i8_i8_plus_1, i8 < i16 AS i8_i16, i8 < i16 + INT16(1) AS i8_i16_plus_1, i8 < i32 AS i8_i32, i8 < i32 + INT32(1) AS i8_i32_plus_1, i8 < i64 AS i8_i64, i8 < i64 + INT64(1) AS i8_i64_plus_1, i8 < u8  AS i8_u8, i8 < u8 + UINT8(1) AS i8_u8_plus_1, i8 < u16 AS i8_u16, i8 < u16 + UINT16(1) AS i8_u16_plus_1, i8 < u32 AS i8_u32, i8 < u32 + UINT32(1) AS i8_u32_plus_1, i8 < u64 AS i8_u64, i8 < u64 + UINT64(1) AS i8_u64_plus_1, i8 < f32 AS i8_f32, i8 < f32 + FLOAT32(1) AS i8_f32_plus_1, i8 < f64 AS i8_f64, i8 < f64 + FLOAT64(1) AS i8_f64_plus_1 FROM FunctionLess_stream INTO CHECKSUM"
    "test_name": "function/comparison/FunctionLess.test"
  - "query": "SELECT i16 < i8 AS i16_i8, i16 < i8 + INT8(1) AS i16_i8_plus_1, i16 < i16 AS i16_i16, i16 < i16 + INT16(1) AS i16_i16_plus_1, i16 < i32 AS i16_i32, i16 < i32 + INT32(1) AS i16_i32_plus_1, i16 < i64 AS i16_i64, i16 < i64 + INT64(1) AS i16_i64_plus_1, i16 < u8 AS i16_u8, i16 < u8 + UINT8(1) AS i16_u8_plus_1, u16 < i16 AS i16_u16, u16 < i16 + INT16(1) AS i16_u16_plus_1, i16 < u32 AS i16_u32, i16 < u32 + UINT32(1) AS i16_u32_plus_1, i16 < u64 AS i16_u64, i16 < u64 + UINT64(1) AS i16_u64_plus_1, i16 < f32 AS i16_f32, i16 < f32 + FLOAT32(1) AS i16_f32_plus_1, i16 < f64 AS i16_f64, i16 < f64 + FLOAT64(1) AS i16_f64_plus_1 FROM FunctionLess_stream INTO CHECKSUM"
    "test_name": "function/comparison/FunctionLess.test"
  - "query": "SELECT i32 < i8 AS i32_i8, i32 < i8 + INT8(1) AS i32_i8_plus_1, i32 < i16 AS i32_i16, i32 < i16 + INT16(1) AS i32_i16_plus_1, i32 < i32 AS i32_i32, i32 < i32 + INT32(1) AS i32_i32_plus_1, i32 < i64 AS i32_i64, i32 < i64 + INT64(1) AS i32_i64_plus_1, i32 < u8 AS i32_u8, i32 < u8 + UINT8(1) AS i32_u8_plus_1, i32 < u16 AS i32_u16, i32 < u16 + UINT16(1) AS i32_u16_plus_1, i32 < u32 AS i32_u32, i32 < u32 + UINT32(1) AS i32_u32_plus_1, i32 < u64 AS i32_u64, i32 < u64 + UINT64(1) AS i32_u64_plus_1, i32 < f32 AS i32_f32, i32 < f32 + FLOAT32(1) AS i32_f32_plus_1, i32 < f64 AS i32_f64, i32 < f64 + FLOAT64(1) AS i32_f64_plus_1 FROM FunctionLess_stream INTO CHECKSUM"
    "test_name": "function/comparison/FunctionLess.test"
  - "query": "SELECT i64 < i8 AS i64_i8, i64 < i8 + INT8(1) AS i64_i8_plus_1, i64 < i16 AS i64_i16, i64 < i16 + INT16(1) AS i64_i16_plus_1, i64 < i32 AS i64_i32, i64 < i32 + INT32(1) AS i64_i32_plus_1, i64 < i64 AS i64_i64, i64 < i64 + INT64(1) AS i64_i64_plus_1, i64 < u8 AS i64_u8, i64 < u8 + UINT8(1) AS i64_u8_plus_1, i64 < u16 AS i64_u16, i64 < u16 + UINT16(1) AS i64_u16_plus_1, i64 < u32 AS i64_u32, i64 < u32 + UINT32(1) AS i64_u32_plus_1, i64 < u64 AS i64_u64, i64 < u64 + UINT64(1) AS i64_u64_plus_1, i64 < f32 AS i64_f32, i64 < f32 + FLOAT32(1) AS i64_f32_plus_1, i64 < f64 AS i64_f64, i64 < f64 + FLOAT64(1) AS i64_f64_plus_1 FROM FunctionLess_stream INTO CHECKSUM"
    "test_name": "function/comparison/FunctionLess.test"
  - "query": "SELECT u8 < i8 AS u8_i8, u8 < i8 + INT8(1) AS u8_i8_plus_1, u8 < i16 AS u8_i16, u8 < i16 + INT16(1) AS u8_i16_plus_1, u8 < i32 AS u8_i32, u8 < i32 + INT32(1) AS u8_i32_plus_1, u8 < i64 AS u8_i64, u8 < i64 + INT64(1) AS u8_i64_plus_1, u8 < u8  AS u8_u8, u8 < u8 + UINT8(1) AS u8_u8_plus_1, u8 < u16 AS u8_u16, u8 < u16 + UINT16(1) AS u8_u16_plus_1, u8 < u32 AS u8_u32, u8 < u32 + UINT32(1) AS u8_u32_plus_1, u8 < u64 AS u8_u64, u8 < u64 + UINT64(1) AS u8_u64_plus_1, u8 < f32 AS u8_f32, u8 < f32 + FLOAT32(1) AS u8_f32_plus_1, u8 < f64 AS u8_f64, u8 < f64 + FLOAT64(1) AS u8_f64_plus_1 FROM FunctionLess_stream INTO CHECKSUM"
    "test_name": "function/comparison/FunctionLess.test"
  - "query": "SELECT u16 < i8 AS u16_i8, u16 < i8 + INT8(1) AS u16_i8_plus_1, u16 < i16 AS u16_i16, u16 < i16 + INT16(1) AS u16_i16_plus_1, u16 < i32 AS u16_i32, u16 < i32 + INT32(1) AS u16_i32_plus_1, u16 < i64 AS u16_i64, u16 < i64 + INT64(1) AS u16_i64_plus_1, u16 < u8 AS u16_u8, u16 < u8 + UINT8(1) AS u16_u8_plus_1, u16 < i16 AS u16_u16, u16 < i16 + INT16(1) AS u16_u16_plus_1, u16 < u32 AS u16_u32, u16 < u32 + UINT32(1) AS u16_u32_plus_1, u16 < u64 AS u16_u64, u16 < u64 + UINT64(1) AS u16_u64_plus_1, u16 < f32 AS u16_f32, u16 < f32 + FLOAT32(1) AS u16_f32_plus_1, u16 < f64 AS u16_f64, u16 < f64 + FLOAT64(1) AS u16_f64_plus_1 FROM FunctionLess_stream INTO CHECKSUM"
    "test_name": "function/comparison/FunctionLess.test"
  - "query": "SELECT u32 < i8 AS u32_i8, u32 < i8 + INT8(1) AS u32_i8_plus_1, u32 < i16 AS u32_i16, u32 < i16 + INT16(1) AS u32_i16_plus_1, u32 < i32 AS u32_i32, u32 < i32 + INT32(1) AS u32_i32_plus_1, u32 < i64 AS u32_i64, u32 < i64 + INT64(1) AS u32_i64_plus_1, u32 < u8 AS u32_u8, u32 < u8 + UINT8(1) AS u32_u8_plus_1, u32 < u16 AS u32_u16, u32 < u16 + UINT16(1) AS u32_u16_plus_1, u32 < u32 AS u32_u32, u32 < u32 + UINT32(1) AS u32_u32_plus_1, u32 < u64 AS u32_u64, u32 < u64 + UINT64(1) AS u32_u64_plus_1, u32 < f32 AS u32_f32, u32 < f32 + FLOAT32(1) AS u32_f32_plus_1, u32 < f64 AS u32_f64, u32 < f64 + FLOAT64(1) AS u32_f64_plus_1 FROM FunctionLess_stream INTO CHECKSUM"
    "test_name": "function/comparison/FunctionLess.test"
  - "query": "SELECT u64 < i8 AS u64_i8, u64 < i8 + INT8(1) AS u64_i8_plus_1, u64 < i16 AS u64_i16, u64 < i16 + INT16(1) AS u64_i16_plus_1, u64 < i32 AS u64_i32, u64 < i32 + INT32(1) AS u64_i32_plus_1, u64 < i64 AS u64_i64, u64 < i64 + INT64(1) AS u64_i64_plus_1, u64 < u8 AS u64_u8, u64 < u8 + UINT8(1) AS u64_u8_plus_1, u64 < u16 AS u64_u16, u64 < u16 + UINT16(1) AS u64_u16_plus_1, u64 < u32 AS u64_u32, u64 < u32 + UINT32(1) AS u64_u32_plus_1, u64 < u64 AS u64_u64, u64 < u64 + UINT64(1) AS u64_u64_plus_1, u64 < f32 AS u64_f32, u64 < f32 + FLOAT32(1) AS u64_f32_plus_1, u64 < f64 AS u64_f64, u64 < f64 + FLOAT64(1) AS u64_f64_plus_1 FROM FunctionLess_stream INTO CHECKSUM"
    "test_name": "function/comparison/FunctionLess.test"
  - "query": "SELECT i8 <= i8 AS i8_i8, i8 <= i8 + INT8(1) AS i8_i8_plus_1, i8 <= i16 AS i8_i16, i8 <= i16 + INT16(1) AS i8_i16_plus_1, i8 <= i32 AS i8_i32, i8 <= i32 + INT32(1) AS i8_i32_plus_1, i8 <= i64 AS i8_i64, i8 <= i64 + INT64(1) AS i8_i64_plus_1, i8 <= u8  AS i8_u8, i8 <= u8 + UINT8(1) AS i8_u8_plus_1, i8 <= u16 AS i8_u16, i8 <= u16 + UINT16(1) AS i8_u16_plus_1, i8 <= u32 AS i8_u32, i8 <= u32 + UINT32(1) AS i8_u32_plus_1, i8 <= u64 AS i8_u64, i8 <= u64 + UINT64(1) AS i8_u64_plus_1, i8 <= f32 AS i8_f32, i8 <= f32 + FLOAT32(1) AS i8_f32_plus_1, i8 <= f64 AS i8_f64, i8 <= f64 + FLOAT64(1) AS i8_f64_plus_1 FROM FunctionLessEquals_stream INTO CHECKSUM"
    "test_name": "function/comparison/FunctionLessEquals.test"
  - "query": "SELECT i16 <= i8 AS i16_i8, i16 <= i8 + INT8(1) AS i16_i8_plus_1, i16 <= i16 AS i16_i16, i16 <= i16 + INT16(1) AS i16_i16_plus_1, i16 <= i32 AS i16_i32, i16 <= i32 + INT32(1) AS i16_i32_plus_1, i16 <= i64 AS i16_i64, i16 <= i64 + INT64(1) AS i16_i64_plus_1, i16 <= u8 AS i16_u8, i16 <= u8 + UINT8(1) AS i16_u8_plus_1, u16 <= i16 AS i16_u16, u16 <= i16 + INT16(1) AS i16_u16_plus_1, i16 <= u32 AS i16_u32, i16 <= u32 + UINT32(1) AS i16_u32_plus_1, i16 <= u64 AS i16_u64, i16 <= u64 + UINT64(1) AS i16_u64_plus_1, i16 <= f32 AS i16_f32, i16 <= f32 + FLOAT32(1) AS i16_f32_plus_1, i16 <= f64 AS i16_f64, i16 <= f64 + FLOAT64(1) AS i16_f64_plus_1 FROM FunctionLessEquals_stream INTO CHECKSUM"
    "test_name": "function/comparison/FunctionLessEquals.test"
  - "query": "SELECT i32 <= i8 AS i32_i8, i32 <= i8 + INT8(1) AS i32_i8_plus_1, i32 <= i16 AS i32_i16, i32 <= i16 + INT16(1) AS i32_i16_plus_1, i32 <= i32 AS i32_i32, i32 <= i32 + INT32(1) AS i32_i32_plus_1, i32 <= i64 AS i32_i64, i32 <= i64 + INT64(1) AS i32_i64_plus_1, i32 <= u8 AS i32_u8, i32 <= u8 + UINT8(1) AS i32_u8_plus_1, i32 <= u16 AS i32_u16, i32 <= u16 + UINT16(1) AS i32_u16_plus_1, i32 <= u32 AS i32_u32, i32 <= u32 + UINT32(1) AS i32_u32_plus_1, i32 <= u64 AS i32_u64, i32 <= u64 + UINT64(1) AS i32_u64_plus_1, i32 <= f32 AS i32_f32, i32 <= f32 + FLOAT32(1) AS i32_f32_plus_1, i32 <= f64 AS i32_f64, i32 <= f64 + FLOAT64(1) AS i32_f64_plus_1 FROM FunctionLessEquals_stream INTO CHECKSUM"
    "test_name": "function/comparison/FunctionLessEquals.test"
  - "query": "SELECT i64 <= i8 AS i64_i8, i64 <= i8 + INT8(1) AS i64_i8_plus_1, i64 <= i16 AS i64_i16, i64 <= i16 + INT16(1) AS i64_i16_plus_1, i64 <= i32 AS i64_i32, i64 <= i32 + INT32(1) AS i64_i32_plus_1, i64 <= i64 AS i64_i64, i64 <= i64 + INT64(1) AS i64_i64_plus_1, i64 <= u8 AS i64_u8, i64 <= u8 + UINT8(1) AS i64_u8_plus_1, i64 <= u16 AS i64_u16, i64 <= u16 + UINT16(1) AS i64_u16_plus_1, i64 <= u32 AS i64_u32, i64 <= u32 + UINT32(1) AS i64_u32_plus_1, i64 <= u64 AS i64_u64, i64 <= u64 + UINT64(1) AS i64_u64_plus_1, i64 <= f32 AS i64_f32, i64 <= f32 + FLOAT32(1) AS i64_f32_plus_1, i64 <= f64 AS i64_f64, i64 <= f64 + FLOAT64(1) AS i64_f64_plus_1 FROM FunctionLessEquals_stream INTO CHECKSUM"
    "test_name": "function/comparison/FunctionLessEquals.test"
  - "query": "SELECT u8 <= i8 AS u8_i8, u8 <= i8 + INT8(1) AS u8_i8_plus_1, u8 <= i16 AS u8_i16, u8 <= i16 + INT16(1) AS u8_i16_plus_1, u8 <= i32 AS u8_i32, u8 <= i32 + INT32(1) AS u8_i32_plus_1, u8 <= i64 AS u8_i64, u8 <= i64 + INT64(1) AS u8_i64_plus_1, u8 <= u8  AS u8_u8, u8 <= u8 + UINT8(1) AS u8_u8_plus_1, u8 <= u16 AS u8_u16, u8 <= u16 + UINT16(1) AS u8_u16_plus_1, u8 <= u32 AS u8_u32, u8 <= u32 + UINT32(1) AS u8_u32_plus_1, u8 <= u64 AS u8_u64, u8 <= u64 + UINT64(1) AS u8_u64_plus_1, u8 <= f32 AS u8_f32, u8 <= f32 + FLOAT32(1) AS u8_f32_plus_1, u8 <= f64 AS u8_f64, u8 <= f64 + FLOAT64(1) AS u8_f64_plus_1 FROM FunctionLessEquals_stream INTO CHECKSUM"
    "test_name": "function/comparison/FunctionLessEquals.test"
  - "query": "SELECT u16 <= i8 AS u16_i8, u16 <= i8 + INT8(1) AS u16_i8_plus_1, u16 <= i16 AS u16_i16, u16 <= i16 + INT16(1) AS u16_i16_plus_1, u16 <= i32 AS u16_i32, u16 <= i32 + INT32(1) AS u16_i32_plus_1, u16 <= i64 AS u16_i64, u16 <= i64 + INT64(1) AS u16_i64_plus_1, u16 <= u8 AS u16_u8, u16 <= u8 + UINT8(1) AS u16_u8_plus_1, u16 <= i16 AS u16_u16, u16 <= i16 + INT16(1) AS u16_u16_plus_1, u16 <= u32 AS u16_u32, u16 <= u32 + UINT32(1) AS u16_u32_plus_1, u16 <= u64 AS u16_u64, u16 <= u64 + UINT64(1) AS u16_u64_plus_1, u16 <= f32 AS u16_f32, u16 <= f32 + FLOAT32(1) AS u16_f32_plus_1, u16 <= f64 AS u16_f64, u16 <= f64 + FLOAT64(1) AS u16_f64_plus_1 FROM FunctionLessEquals_stream INTO CHECKSUM"
    "test_name": "function/comparison/FunctionLessEquals.test"
  - "query": "SELECT u32 <= i8 AS u32_i8, u32 <= i8 + INT8(1) AS u32_i8_plus_1, u32 <= i16 AS u32_i16, u32 <= i16 + INT16(1) AS u32_i16_plus_1, u32 <= i32 AS u32_i32, u32 <= i32 + INT32(1) AS u32_i32_plus_1, u32 <= i64 AS u32_i64, u32 <= i64 + INT64(1) AS u32_i64_plus_1, u32 <= u8 AS u32_u8, u32 <= u8 + UINT8(1) AS u32_u8_plus_1, u32 <= u16 AS u32_u16, u32 <= u16 + UINT16(1) AS u32_u16_plus_1, u32 <= u32 AS u32_u32, u32 <= u32 + UINT32(1) AS u32_u32_plus_1, u32 <= u64 AS u32_u64, u32 <= u64 + UINT64(1) AS u32_u64_plus_1, u32 <= f32 AS u32_f32, u32 <= f32 + FLOAT32(1) AS u32_f32_plus_1, u32 <= f64 AS u32_f64, u32 <= f64 + FLOAT64(1) AS u32_f64_plus_1 FROM FunctionLessEquals_stream INTO CHECKSUM"
    "test_name": "function/comparison/FunctionLessEquals.test"
  - "query": "SELECT u64 <= i8 AS u64_i8, u64 <= i8 + INT8(1) AS u64_i8_plus_1, u64 <= i16 AS u64_i16, u64 <= i16 + INT16(1) AS u64_i16_plus_1, u64 <= i32 AS u64_i32, u64 <= i32 + INT32(1) AS u64_i32_plus_1, u64 <= i64 AS u64_i64, u64 <= i64 + INT64(1) AS u64_i64_plus_1, u64 <= u8 AS u64_u8, u64 <= u8 + UINT8(1) AS u64_u8_plus_1, u64 <= u16 AS u64_u16, u64 <= u16 + UINT16(1) AS u64_u16_plus_1, u64 <= u32 AS u64_u32, u64 <= u32 + UINT32(1) AS u64_u32_plus_1, u64 <= u64 AS u64_u64, u64 <= u64 + UINT64(1) AS u64_u64_plus_1, u64 <= f32 AS u64_f32, u64 <= f32 + FLOAT32(1) AS u64_f32_plus_1, u64 <= f64 AS u64_f64, u64 <= f64 + FLOAT64(1) AS u64_f64_plus_1 FROM FunctionLessEquals_stream INTO CHECKSUM"
    "test_name": "function/comparison/FunctionLessEquals.test"
  - "query": "SELECT (i8 == INT32(1)) and ((i16 == INT32(1)) and (i32 == INT32(1))) AS a, (i32 == INT32(1)) and ((i64 == INT32(1)) and (u8 == INT32(2))) AS b, (u8 == INT32(2)) and ((u16 == INT32(1)) and (u32 == INT32(2))) AS c, (u8 == INT32(2)) and ((u16 == INT32(1)) and (u32 == INT32(2))) AS d, (i8 == INT32(1)) and not ((i16 == INT32(1)) and (i32 == INT32(1))) AS e, (i32 == INT32(1)) and not ((i64 == INT32(1)) and (u8 == INT32(2))) AS f, (u8 == INT32(2)) and not ((u16 == INT32(1)) and (u32 == INT32(2))) AS g, (u8 == INT32(2)) and not ((u16 == INT32(1)) and (i32 == INT32(2))) AS h FROM FunctionAnd_stream INTO CHECKSUM"
    "test_name": "function/logical/FunctionAnd.test"
  - "query": "SELECT (i8 == INT32(1)) and (i16 < INT32(2)) AS a, (i32 == INT32(1)) and (i64 > INT32(0)) AS b, (u8 == INT32(2)) and (u16 <= INT32(2)) AS c, (u8 == INT32(2)) and (u16 >= INT32(2)) AS d, (i8 == INT32(1)) and not (i16 == INT32(1)) AS e, (i32 == INT32(1)) and not (i64 == INT32(1)) AS f, (u8 == INT32(2)) and not (u16 == INT32(1)) AS g, (u8 == INT32(2)) and not (u16 == INT32(2)) AS h FROM FunctionAnd_stream INTO CHECKSUM"
    "test_name": "function/logical/FunctionAnd.test"
  - "query": "SELECT (i8 == INT32(1)) and ((i16 < INT32(2)) and (i32 == INT32(1))) AS a, (i32 == INT32(1)) and ((i64 > INT32(0)) and (u8 == INT32(2))) AS b, (u8 == INT32(2)) and ((u16 <= INT32(2)) and (u32 == INT32(2))) AS c, (u8 == INT32(2)) and ((u16 >= INT32(2)) and (u32 == INT32(2))) AS d, (i8 == INT32(1)) and not ((i16 == INT32(1)) and (i32 == INT32(1))) AS e, (i32 == INT32(1)) and not ((i64 == INT32(1)) and (u8 == INT32(2))) AS f, (u8 == INT32(2)) and not ((u16 == INT32(1)) and (u32 == INT32(2))) AS g, (u8 == INT32(2)) and not ((u16 == INT32(1)) and (i32 == INT32(2))) AS h FROM FunctionAnd_stream INTO CHECKSUM"
    "test_name": "function/logical/FunctionAnd.test"
  - "query": "SELECT i8 == i8 AS bool1, i8 == i8 + INT8(1) AS bool2, i8 == i16 AS bool3, i8 == i16 + INT16(1) AS bool4, i8 == i32 AS bool5, i8 == i32 + INT32(1) AS bool6, i8 == i64 AS bool7, i8 == i64 + INT64(1) AS bool8, i8 == u8 AS bool9, i8 == u8 + UINT8(1) AS bool10, i8 == u16 AS bool11, i8 == u16 + UINT16(1) AS bool12, i8 == u32 AS bool13, i8 == u32 + UINT32(1) AS bool14, i8 == u64 AS bool15, i8 == u64 + UINT64(1) AS bool16, i8 == f32 AS bool17, i8 == f32 + FLOAT32(1) AS bool18, i8 == f64 AS bool19, i8 == f64 + FLOAT64(1) AS bool20 FROM FunctionEqual_stream INTO CHECKSUM"
    "test_name": "function/logical/FunctionEqual.test"
  - "query": "SELECT i16 == i8 AS bool1, i16 == i8 + INT8(1) AS bool2, i16 == i16 AS bool3, i16 == i16 + INT16(1) AS bool4, i16 == i32 AS bool5, i16 == i32 + INT32(1) AS bool6, i16 == i64 AS bool7, i16 == i64 + INT64(1) AS bool8, i16 == u8 AS bool9, i16 == u8 + UINT8(1) AS bool10, i16 == u16 AS bool11, i16 == u16 + UINT16(1) AS bool12, i16 == u32 AS bool13, i16 == u32 + UINT32(1) AS bool14, i16 == u64 AS bool15, i16 == u64 + UINT64(1) AS bool16, i16 == f32 AS bool17, i16 == f32 + FLOAT32(1) AS bool18, i16 == f64 AS bool19, i16 == f64 + FLOAT64(1) AS bool20 FROM FunctionEqual_stream INTO CHECKSUM"
    "test_name": "function/logical/FunctionEqual.test"
  - "query": "SELECT i32 == i8 AS bool1, i32 == i8 + INT8(1) AS bool2, i32 == i16 AS bool3, i32 == i16 + INT16(1) AS bool4, i32 == i32 AS bool5, i32 == i32 + INT32(1) AS bool6, i32 == i64 AS bool7, i32 == i64 + INT64(1) AS bool8, i32 == u8 AS bool9, i32 == u8 + UINT8(1) AS bool10, i32 == u16 AS bool11, i32 == u16 + UINT16(1) AS bool12, i32 == u32 AS bool13, i32 == u32 + UINT32(1) AS bool14, i32 == u64 AS bool15, i32 == u64 + UINT64(1) AS bool16, i32 == f32 AS bool17, i32 == f32 + FLOAT32(1) AS bool18, i32 == f64 AS bool19, i32 == f64 + FLOAT64(1) AS bool20 FROM FunctionEqual_stream INTO CHECKSUM"
    "test_name": "function/logical/FunctionEqual.test"
  - "query": "SELECT i64 == i8 AS bool1, i64 == i8 + INT8(1) AS bool2, i64 == i16 AS bool3, i64 == i16 + INT16(1) AS bool4, i64 == i32 AS bool5, i64 == i32 + INT32(1) AS bool6, i64 == i64 AS bool7, i64 == i64 + INT64(1) AS bool8, i64 == u8 AS bool9, i64 == u8 + UINT8(1) AS bool10, i64 == u16 AS bool11, i64 == u16 + UINT16(1) AS bool12, i64 == u32 AS bool13, i64 == u32 + UINT32(1) AS bool14, i64 == u64 AS bool15, i64 == u64 + UINT64(1) AS bool16, i64 == f32 AS bool17, i64 == f32 + FLOAT32(1) AS bool18, i64 == f64 AS bool19, i64 == f64 + FLOAT64(1) AS bool20 FROM FunctionEqual_stream INTO CHECKSUM"
    "test_name": "function/logical/FunctionEqual.test"
  - "query": "SELECT i8 != i8 AS bool1, i8 != i8 + INT8(1) AS bool2, i8 != i16 AS bool3, i8 != i16 + INT16(1) AS bool4, i8 != i32 AS bool5, i8 != i32 + INT32(1) AS bool6, i8 != i64 AS bool7, i8 != i64 + INT64(1) AS bool8, i8 != u8 AS bool9, i8 != u8 + UINT8(1) AS bool10, i8 != u16 AS bool11, i8 != u16 + UINT16(1) AS bool12, i8 != u32 AS bool13, i8 != u32 + UINT32(1) AS bool14, i8 != u64 AS bool15, i8 != u64 + UINT64(1) AS bool16, i8 != f32 AS bool17, i8 != f32 + FLOAT32(1) AS bool18, i8 != f64 AS bool19, i8 != f64 + FLOAT64(1) AS bool20 FROM FunctionNotEqual_stream INTO CHECKSUM"
    "test_name": "function/logical/FunctionNotEqual.test"
  - "query": "SELECT i16 != i8 AS bool1, i16 != i8 + INT8(1) AS bool2, i16 != i16 AS bool3, i16 != i16 + INT16(1) AS bool4, i16 != i32 AS bool5, i16 != i32 + INT32(1) AS bool6, i16 != i64 AS bool7, i16 != i64 + INT64(1) AS bool8, i16 != u8 AS bool9, i16 != u8 + UINT8(1) AS bool10, i16 != u16 AS bool11, i16 != u16 + UINT16(1) AS bool12, i16 != u32 AS bool13, i16 != u32 + UINT32(1) AS bool14, i16 != u64 AS bool15, i16 != u64 + UINT64(1) AS bool16, i16 != f32 AS bool17, i16 != f32 + FLOAT32(1) AS bool18, i16 != f64 AS bool19, i16 != f64 + FLOAT64(1) AS bool20 FROM FunctionNotEqual_stream INTO CHECKSUM"
    "test_name": "function/logical/FunctionNotEqual.test"
  - "query": "SELECT i32 != i8 AS bool1, i32 != i8 + INT8(1) AS bool2, i32 != i16 AS bool3, i32 != i16 + INT16(1) AS bool4, i32 != i32 AS bool5, i32 != i32 + INT32(1) AS bool6, i32 != i64 AS bool7, i32 != i64 + INT64(1) AS bool8, i32 != u8 AS bool9, i32 != u8 + UINT8(1) AS bool10, i32 != u16 AS bool11, i32 != u16 + UINT16(1) AS bool12, i32 != u32 AS bool13, i32 != u32 + UINT32(1) AS bool14, i32 != u64 AS bool15, i32 != u64 + UINT64(1) AS bool16, i32 != f32 AS bool17, i32 != f32 + FLOAT32(1) AS bool18, i32 != f64 AS bool19, i32 != f64 + FLOAT64(1) AS bool20 FROM FunctionNotEqual_stream INTO CHECKSUM"
    "test_name": "function/logical/FunctionNotEqual.test"
  - "query": "SELECT i64 != i8 AS bool1, i64 != i8 + INT8(1) AS bool2, i64 != i16 AS bool3, i64 != i16 + INT16(1) AS bool4, i64 != i32 AS bool5, i64 != i32 + INT32(1) AS bool6, i64 != i64 AS bool7, i64 != i64 + INT64(1) AS bool8, i64 != u8 AS bool9, i64 != u8 + UINT8(1) AS bool10, i64 != u16 AS bool11, i64 != u16 + UINT16(1) AS bool12, i64 != u32 AS bool13, i64 != u32 + UINT32(1) AS bool14, i64 != u64 AS bool15, i64 != u64 + UINT64(1) AS bool16, i64 != f32 AS bool17, i64 != f32 + FLOAT32(1) AS bool18, i64 != f64 AS bool19, i64 != f64 + FLOAT64(1) AS bool20 FROM FunctionNotEqual_stream INTO CHECKSUM"
    "test_name": "function/logical/FunctionNotEqual.test"
  - "query": "SELECT (i8 == INT32(2)) or ((i16 == INT32(2)) or (u32 == INT32(1))) AS a, (i32 == INT32(2)) or ((i64 == INT32(2)) or (u8 == INT32(2))) AS b, (u8 == INT32(2)) or ((u16 == INT32(1)) or (u32 == INT32(1))) AS c, (u8 == INT32(2)) or ((u16 == INT32(1)) or (u32 == INT32(1))) AS d, (i8 == INT32(1)) or not ((i16 == INT32(2)) or (i32 == INT32(1))) AS e FROM FunctionOr_stream INTO CHECKSUM"
    "test_name": "function/logical/FunctionOr.test"
  - "query": "SELECT (i8 == INT32(2)) or (i16 < INT32(0)) AS a, (i32 == INT32(2)) or (i64 > INT32(0)) AS b, (u8 == INT32(2)) or (u16 <= INT32(2)) AS c, (u8 == INT32(2)) or (u16 >= INT32(2)) AS d, (i8 == INT32(1)) or not (i16 == INT32(2)) AS e FROM FunctionOr_stream INTO CHECKSUM"
    "test_name": "function/logical/FunctionOr.test"
  - "query": "SELECT (i8 == INT32(2)) or ((i16 < INT32(0)) or (i32 == INT32(2))) AS a, (i32 == INT32(2)) or ((i64 > INT32(0)) or (u8 == INT32(2))) AS b, (u8 == INT32(2)) or ((u16 <= INT32(2)) or (u32 == INT32(1))) AS c, (u8 == INT32(2)) or ((u16 >= INT32(2)) or (u32 == INT32(1))) AS d, (i8 == INT32(1)) or not ((i16 == INT32(2)) or (i32 == INT32(1))) AS e FROM FunctionOr_stream INTO CHECKSUM"
    "test_name": "function/logical/FunctionOr.test"
  "FunctionAdd":
  - "query": "SELECT i8 + i8 AS i8_i8, i8 + i8 + INT8(1) AS i8_i8_plus_1, i8 + i16 AS i8_i16, i8 + i16 + INT16(1) AS i8_i16_plus_1, i8 + i32 AS i8_i32, i8 + i32 + INT32(1) AS i8_i32_plus_1, i8 + i64 AS i8_i64, i8 + i64 + INT32(1) AS i8_i64_plus_1, i8 + u8  AS i8_u8, i8 + u8  + UINT8(1) AS i8_u8_plus_1, i8 + u16 AS i8_u16, i8 + u16 + UINT16(1) AS i8_u16_plus_1, i8 + u32 AS i8_u32, i8 + u32 + UINT32(1) AS i8_u32_plus_1, i8 + u64 AS i8_u64, i8 + u64 + UINT64(1) AS i8_u64_plus_1, i8 + f32 AS i8_f32, i8 + f32 + FLOAT32(1) AS i8_f32_plus_1, i8 + f64 AS i8_f64, i8 + f64 + FLOAT64(1) AS i8_f64_plus_1 FROM FunctionAdd_stream INTO CHECKSUM"
    "test_name": "function/arithmetical/FunctionAdd.test"
  - "query": "SELECT i16 + i8 AS i16_i8, i16 + i8 + INT8(1) AS i16_i8_plus_1, i16 + i16 AS i16_i16, i16 + i16 + INT16(1) AS i16_i16_plus_1, i16 + i32 AS i16_i32, i16 + i32 + INT32(1) AS i16_i32_plus_1, i16 + i64 AS i16_i64, i16 + i64 + INT64(1) AS i16_i64_plus_1, i16 + u8 AS i16_u8, i16 + u8 + UINT8(1) AS i16_u8_plus_1, u16 + i16 AS i16_u16, u16 + i16 + UINT16(1) AS i16_u16_plus_1, i16 + u32 AS i16_u32, i16 + u32 + UINT32(1) AS i16_u32_plus_1, i16 + u64 AS i16_u64, i16 + u64 + UINT64(1) AS i16_u64_plus_1, i16 + f32 AS i16_f32, i16 + f32 + FLOAT32(1) AS i16_f32_plus_1, i16 + f64 AS i16_f64, i16 + f64 + FLOAT64(1) AS i16_f64_plus_1 FROM FunctionAdd_stream INTO CHECKSUM"
    "test_name": "function/arithmetical/FunctionAdd.test"
  - "query": "SELECT i32 + i8 AS i32_i8, i32 + i8 + INT8(1) AS i32_i8_plus_1, i32 + i16 AS i32_i16, i32 + i16 + INT16(1) AS i32_i16_plus_1, i32 + i32 AS i32_i32, i32 + i32 + INT32(1) AS i32_i32_plus_1, i32 + i64 AS i32_i64, i32 + i64 + INT64(1) AS i32_i64_plus_1, i32 + u8 AS i32_u8, i32 + u8 + UINT8(1) AS i32_u8_plus_1, i32 + u16 AS i32_u16, i32 + u16 + UINT16(1) AS i32_u16_plus_1, i32 + u32 AS i32_u32, i32 + u32 + UINT32(1) AS i32_u32_plus_1, i32 + u64 AS i32_u64, i32 + u64 + UINT64(1) AS i32_u64_plus_1, i32 + f32 AS i32_f32, i32 + f32 + FLOAT32(1) AS i32_f32_plus_1, i32 + f64 AS i32_f64, i32 + f64 + FLOAT64(1) AS i32_f64_plus_1 FROM FunctionAdd_stream INTO CHECKSUM"
    "test_name": "function/arithmetical/FunctionAdd.test"
  - "query": "SELECT i64 + i8 AS i64_i8, i64 + i8 + INT8(1) AS i64_i8_plus_1, i64 + i16 AS i64_i16, i64 + i16 + INT16(1) AS i64_i16_plus_1, i64 + i32 AS i64_i32, i64 + i32 + INT32(1) AS i64_i32_plus_1, i64 + i64 AS i64_i64, i64 + i64 + INT64(1) AS i64_i64_plus_1, i64 + u8 AS i64_u8, i64 + u8 + UINT8(1) AS i64_u8_plus_1, i64 + u16 AS i64_u16, i64 + u16 + UINT16(1) AS i64_u16_plus_1, i64 + u32 AS i64_u32, i64 + u32 + UINT32(1) AS i64_u32_plus_1, i64 + u64 AS i64_u64, i64 + u64 + UINT64(1) AS i64_u64_plus_1, i64 + f32 AS i64_f32, i64 + f32 + FLOAT32(1) AS i64_f32_plus_1, i64 + f64 AS i64_f64, i64 + f64 + FLOAT64(1) AS i64_f64_plus_1 FROM FunctionAdd_stream INTO CHECKSUM"
    "test_name": "function/arithmetical/FunctionAdd.test"
  - "query": "SELECT i8 + i8 AS i8_i8, i8 + i8 + INT8(1) AS i8_i8_plus_1, i8 + i16 AS i8_i16, i8 + i16 + INT16(1) AS i8_i16_plus_1, i8 + i32 AS i8_i32, i8 + i32 + INT32(1) AS i8_i32_plus_1, i8 + i64 AS i8_i64, i8 + i64 + INT32(1) AS i8_i64_plus_1, i8 + u8  AS i8_u8, i8 + u8  + UINT8(1) AS i8_u8_plus_1, i8 + u16 AS i8_u16, i8 + u16 + UINT16(1) AS i8_u16_plus_1, i8 + u32 AS i8_u32, i8 + u32 + UINT32(1) AS i8_u32_plus_1, i8 + u64 AS i8_u64, i8 + u64 + UINT64(1) AS i8_u64_plus_1, i8 + f32 AS i8_f32, i8 + f32 + FLOAT32(1) AS i8_f32_plus_1, i8 + f64 AS i8_f64, i8 + f64 + FLOAT64(1) AS i8_f64_plus_1 FROM FunctionAdd_stream INTO CHECKSUM"
    "test_name": "function/arithmetical/FunctionAdd.test"
  - "query": "SELECT i16 + i8 AS i16_i8, i16 + i8 + INT8(1) AS i16_i8_plus_1, i16 + i16 AS i16_i16, i16 + i16 + INT16(1) AS i16_i16_plus_1, i16 + i32 AS i16_i32, i16 + i32 + INT32(1) AS i16_i32_plus_1, i16 + i64 AS i16_i64, i16 + i64 + INT64(1) AS i16_i64_plus_1, i16 + u8 AS i16_u8, i16 + u8 + UINT8(1) AS i16_u8_plus_1, u16 + i16 AS i16_u16, u16 + i16 + UINT16(1) AS i16_u16_plus_1, i16 + u32 AS i16_u32, i16 + u32 + UINT32(1) AS i16_u32_plus_1, i16 + u64 AS i16_u64, i16 + u64 + UINT64(1) AS i16_u64_plus_1, i16 + f32 AS i16_f32, i16 + f32 + FLOAT32(1) AS i16_f32_plus_1, i16 + f64 AS i16_f64, i16 + f64 + FLOAT64(1) AS i16_f64_plus_1 FROM FunctionAdd_stream INTO CHECKSUM"
    "test_name": "function/arithmetical/FunctionAdd.test"
  - "query": "SELECT i32 + i8 AS i32_i8, i32 + i8 + INT8(1) AS i32_i8_plus_1, i32 + i16 AS i32_i16, i32 + i16 + INT16(1) AS i32_i16_plus_1, i32 + i32 AS i32_i32, i32 + i32 + INT32(1) AS i32_i32_plus_1, i32 + i64 AS i32_i64, i32 + i64 + INT64(1) AS i32_i64_plus_1, i32 + u8 AS i32_u8, i32 + u8 + UINT8(1) AS i32_u8_plus_1, i32 + u16 AS i32_u16, i32 + u16 + UINT16(1) AS i32_u16_plus_1, i32 + u32 AS i32_u32, i32 + u32 + UINT32(1) AS i32_u32_plus_1, i32 + u64 AS i32_u64, i32 + u64 + UINT64(1) AS i32_u64_plus_1, i32 + f32 AS i32_f32, i32 + f32 + FLOAT32(1) AS i32_f32_plus_1, i32 + f64 AS i32_f64, i32 + f64 + FLOAT64(1) AS i32_f64_plus_1 FROM FunctionAdd_stream INTO CHECKSUM"
    "test_name": "function/arithmetical/FunctionAdd.test"
  - "query": "SELECT i64 + i8 AS i64_i8, i64 + i8 + INT8(1) AS i64_i8_plus_1, i64 + i16 AS i64_i16, i64 + i16 + INT16(1) AS i64_i16_plus_1, i64 + i32 AS i64_i32, i64 + i32 + INT32(1) AS i64_i32_plus_1, i64 + i64 AS i64_i64, i64 + i64 + INT64(1) AS i64_i64_plus_1, i64 + u8 AS i64_u8, i64 + u8 + UINT8(1) AS i64_u8_plus_1, i64 + u16 AS i64_u16, i64 + u16 + UINT16(1) AS i64_u16_plus_1, i64 + u32 AS i64_u32, i64 + u32 + UINT32(1) AS i64_u32_plus_1, i64 + u64 AS i64_u64, i64 + u64 + UINT64(1) AS i64_u64_plus_1, i64 + f32 AS i64_f32, i64 + f32 + FLOAT32(1) AS i64_f32_plus_1, i64 + f64 AS i64_f64, i64 + f64 + FLOAT64(1) AS i64_f64_plus_1 FROM FunctionAdd_stream INTO CHECKSUM"
    "test_name": "function/arithmetical/FunctionAdd.test"
  "FunctionAnd":
  - "query": "SELECT (i8 == INT32(1)) and ((i16 == INT32(1)) and (i32 == INT32(1))) AS a, (i32 == INT32(1)) and ((i64 == INT32(1)) and (u8 == INT32(2))) AS b, (u8 == INT32(2)) and ((u16 == INT32(1)) and (u32 == INT32(2))) AS c, (u8 == INT32(2)) and ((u16 == INT32(1)) and (u32 == INT32(2))) AS d, (i8 == INT32(1)) and not ((i16 == INT32(1)) and (i32 == INT32(1))) AS e, (i32 == INT32(1)) and not ((i64 == INT32(1)) and (u8 == INT32(2))) AS f, (u8 == INT32(2)) and not ((u16 == INT32(1)) and (u32 == INT32(2))) AS g, (u8 == INT32(2)) and not ((u16 == INT32(1)) and (i32 == INT32(2))) AS h FROM FunctionAnd_stream INTO CHECKSUM"
    "test_name": "function/logical/FunctionAnd.test"
  - "query": "SELECT (i8 == INT32(1)) and (i16 < INT32(2)) AS a, (i32 == INT32(1)) and (i64 > INT32(0)) AS b, (u8 == INT32(2)) and (u16 <= INT32(2)) AS c, (u8 == INT32(2)) and (u16 >= INT32(2)) AS d, (i8 == INT32(1)) and not (i16 == INT32(1)) AS e, (i32 == INT32(1)) and not (i64 == INT32(1)) AS f, (u8 == INT32(2)) and not (u16 == INT32(1)) AS g, (u8 == INT32(2)) and not (u16 == INT32(2)) AS h FROM FunctionAnd_stream INTO CHECKSUM"
    "test_name": "function/logical/FunctionAnd.test"
  - "query": "SELECT (i8 == INT32(1)) and ((i16 < INT32(2)) and (i32 == INT32(1))) AS a, (i32 == INT32(1)) and ((i64 > INT32(0)) and (u8 == INT32(2))) AS b, (u8 == INT32(2)) and ((u16 <= INT32(2)) and (u32 == INT32(2))) AS c, (u8 == INT32(2)) and ((u16 >= INT32(2)) and (u32 == INT32(2))) AS d, (i8 == INT32(1)) and not ((i16 == INT32(1)) and (i32 == INT32(1))) AS e, (i32 == INT32(1)) and not ((i64 == INT32(1)) and (u8 == INT32(2))) AS f, (u8 == INT32(2)) and not ((u16 == INT32(1)) and (u32 == INT32(2))) AS g, (u8 == INT32(2)) and not ((u16 == INT32(1)) and (i32 == INT32(2))) AS h FROM FunctionAnd_stream INTO CHECKSUM"
    "test_name": "function/logical/FunctionAnd.test"
  - "query": "SELECT (i8 == INT32(1)) and ((i16 == INT32(1)) and (i32 == INT32(1))) AS a, (i32 == INT32(1)) and ((i64 == INT32(1)) and (u8 == INT32(2))) AS b, (u8 == INT32(2)) and ((u16 == INT32(1)) and (u32 == INT32(2))) AS c, (u8 == INT32(2)) and ((u16 == INT32(1)) and (u32 == INT32(2))) AS d, (i8 == INT32(1)) and not ((i16 == INT32(1)) and (i32 == INT32(1))) AS e, (i32 == INT32(1)) and not ((i64 == INT32(1)) and (u8 == INT32(2))) AS f, (u8 == INT32(2)) and not ((u16 == INT32(1)) and (u32 == INT32(2))) AS g, (u8 == INT32(2)) and not ((u16 == INT32(1)) and (i32 == INT32(2))) AS h FROM FunctionAnd_stream INTO CHECKSUM"
    "test_name": "function/logical/FunctionAnd.test"
  - "query": "SELECT (i8 == INT32(1)) and (i16 < INT32(2)) AS a, (i32 == INT32(1)) and (i64 > INT32(0)) AS b, (u8 == INT32(2)) and (u16 <= INT32(2)) AS c, (u8 == INT32(2)) and (u16 >= INT32(2)) AS d, (i8 == INT32(1)) and not (i16 == INT32(1)) AS e, (i32 == INT32(1)) and not (i64 == INT32(1)) AS f, (u8 == INT32(2)) and not (u16 == INT32(1)) AS g, (u8 == INT32(2)) and not (u16 == INT32(2)) AS h FROM FunctionAnd_stream INTO CHECKSUM"
    "test_name": "function/logical/FunctionAnd.test"
  - "query": "SELECT (i8 == INT32(1)) and ((i16 < INT32(2)) and (i32 == INT32(1))) AS a, (i32 == INT32(1)) and ((i64 > INT32(0)) and (u8 == INT32(2))) AS b, (u8 == INT32(2)) and ((u16 <= INT32(2)) and (u32 == INT32(2))) AS c, (u8 == INT32(2)) and ((u16 >= INT32(2)) and (u32 == INT32(2))) AS d, (i8 == INT32(1)) and not ((i16 == INT32(1)) and (i32 == INT32(1))) AS e, (i32 == INT32(1)) and not ((i64 == INT32(1)) and (u8 == INT32(2))) AS f, (u8 == INT32(2)) and not ((u16 == INT32(1)) and (u32 == INT32(2))) AS g, (u8 == INT32(2)) and not ((u16 == INT32(1)) and (i32 == INT32(2))) AS h FROM FunctionAnd_stream INTO CHECKSUM"
    "test_name": "function/logical/FunctionAnd.test"
  "FunctionDiv":
  - "query": "SELECT i8 / i8 AS i8_i8, i8 / (i8 + INT8(1)) AS i8_i8_plus_1, i8 / i16 AS i8_i16, i8 / (i16 + INT16(1)) AS i8_i16_plus_1, i8 / i32 AS i8_i32, i8 / (i32 + INT32(1)) AS i8_i32_plus_1, i8 / i64 AS i8_i64, i8 / (i64 + INT64(1)) AS i8_i64_plus_1, i8 / u8 AS i8_u8, i8 / (u8 + UINT8(1)) AS i8_u8_plus_1, i8 / u16 AS i8_u16, i8 / (u16 + UINT16(1)) AS i8_u16_plus_1, i8 / u32 AS i8_u32, i8 / (u32 + UINT32(1)) AS i8_u32_plus_1, i8 / u64 AS i8_u64, i8 / (u64 + UINT64(1)) AS i8_u64_plus_1, i8 / f32 AS i8_f32, i8 / (f32 + FLOAT32(1)) AS i8_f32_plus_1, i8 / f64 AS i8_f64, i8 / (f64 + FLOAT64(1)) AS i8_f64_plus_1 FROM modified_FunctionDiv_FunctionDiv_stream INTO CHECKSUM"
    "test_name": "function/arithmetical/FunctionDiv.test"
  - "query": "SELECT i16 / i8 AS i16_i8, i16 / (i8 + INT8(1)) AS i16_i8_plus_1, i16 / i16 AS i16_i16, i16 / (i16 + INT16(1)) AS i16_i16_plus_1, i16 / i32 AS i16_i32, i16 / (i32 + INT32(1)) AS i16_i32_plus_1, i16 / i64 AS i16_i64, i16 / (i64 + INT64(1)) AS i16_i64_plus_1, i16 / u8 AS i16_u8, i16 / (u8 + UINT8(1)) AS i16_u8_plus_1, i16 / u16 AS i16_u16, i16 / (u16 + UINT16(1)) AS i16_u16_plus_1, i16 / u32 AS i16_u32, i16 / (u32 + UINT32(1)) AS i16_u32_plus_1, i16 / u64 AS i16_u64, i16 / (u64 + UINT64(1)) AS i16_u64_plus_1, i16 / f32 AS i16_f32, i16 / (f32 + FLOAT32(1)) AS i16_f32_plus_1, i16 / f64 AS i16_f64, i16 / (f64 + FLOAT64(1)) AS i16_f64_plus_1 FROM modified_FunctionDiv_FunctionDiv_stream INTO CHECKSUM"
    "test_name": "function/arithmetical/FunctionDiv.test"
  - "query": "SELECT i32 / i8 AS i32_i8, i32 / (i8 + INT8(1)) AS i32_i8_plus_1, i32 / i16 AS i32_i16, i32 / (i16 + INT16(1)) AS i32_i16_plus_1, i32 / i32 AS i32_i32, i32 / (i32 + INT32(1)) AS i32_i32_plus_1, i32 / i64 AS i32_i64, i32 / (i64 + INT64(1)) AS i32_i64_plus_1, i32 / u8 AS i32_u8, i32 / (u8 + UINT8(1)) AS i32_u8_plus_1, i32 / u16 AS i32_u16, i32 / (u16 + UINT16(1)) AS i32_u16_plus_1, i32 / u32 AS i32_u32, i32 / (u32 + UINT32(1)) AS i32_u32_plus_1, i32 / u64 AS i32_u64, i32 / (u64 + UINT64(1)) AS i32_u64_plus_1, i32 / f32 AS i32_f32, i32 / (f32 + FLOAT32(1)) AS i32_f32_plus_1, i32 / f64 AS i32_f64, i32 / (f64 + FLOAT64(1)) AS i32_f64_plus_1 FROM modified_FunctionDiv_FunctionDiv_stream INTO CHECKSUM"
    "test_name": "function/arithmetical/FunctionDiv.test"
  - "query": "SELECT i64 / i8 AS i64_i8, i64 / (i8 + INT8(1)) AS i64_i8_plus_1, i64 / i16 AS i64_i16, i64 / (i16 + INT16(1)) AS i64_i16_plus_1, i64 / i32 AS i64_i32, i64 / (i32 + INT32(1)) AS i64_i32_plus_1, i64 / i64 AS i64_i64, i64 / (i64 + INT64(1)) AS i64_i64_plus_1, i64 / u8 AS i64_u8, i64 / (u8 + UINT8(1)) AS i64_u8_plus_1, i64 / u16 AS i64_u16, i64 / (u16 + UINT16(1)) AS i64_u16_plus_1, i64 / u32 AS i64_u32, i64 / (u32 + UINT32(1)) AS i64_u32_plus_1, i64 / u64 AS i64_u64, i64 / (u64 + UINT64(1)) AS i64_u64_plus_1, i64 / f32 AS i64_f32, i64 / (f32 + FLOAT32(1)) AS i64_f32_plus_1, i64 / f64 AS i64_f64, i64 / (f64 + FLOAT64(1)) AS i64_f64_plus_1 FROM modified_FunctionDiv_FunctionDiv_stream INTO CHECKSUM"
    "test_name": "function/arithmetical/FunctionDiv.test"
  - "query": "SELECT u8 / i8 AS u8_i8, u8 / (i8 + INT8(1)) AS u8_i8_plus_1, u8 / i16 AS u8_i16, u8 / (i16 + INT16(1)) AS u8_i16_plus_1, u8 / i32 AS u8_i32, u8 / (i32 + INT32(1)) AS u8_i32_plus_1, u8 / i64 AS u8_i64, u8 / (i64 + INT64(1)) AS u8_i64_plus_1, u8 / u8 AS u8_u8, u8 / (u8 + UINT8(1)) AS u8_u8_plus_1, u8 / u16 AS u8_u16, u8 / (u16 + UINT16(1)) AS u8_u16_plus_1, u8 / u32 AS u8_u32, u8 / (u32 + UINT32(1)) AS u8_u32_plus_1, u8 / u64 AS u8_u64, u8 / (u64 + UINT64(1)) AS u8_u64_plus_1, u8 / f32 AS u8_f32, u8 / (f32 + FLOAT32(1)) AS u8_f32_plus_1, u8 / f64 AS u8_f64, u8 / (f64 + FLOAT64(1)) AS u8_f64_plus_1 FROM modified_FunctionDiv_FunctionDiv_stream INTO CHECKSUM"
    "test_name": "function/arithmetical/FunctionDiv.test"
  - "query": "SELECT u16 / i8 AS u16_i8, u16 / (i8 + INT8(1)) AS u16_i8_plus_1, u16 / i16 AS u16_i16, u16 / (i16 + INT16(1)) AS u16_i16_plus_1, u16 / i32 AS u16_i32, u16 / (i32 + INT32(1)) AS u16_i32_plus_1, u16 / i64 AS u16_i64, u16 / (i64 + INT64(1)) AS u16_i64_plus_1, u16 / u8 AS u16_u8, u16 / (u8 + UINT8(1)) AS u16_u8_plus_1, u16 / u16 AS u16_u16, u16 / (u16 + UINT16(1)) AS u16_u16_plus_1, u16 / u32 AS u16_u32, u16 / (u32 + UINT32(1)) AS u16_u32_plus_1, u16 / u64 AS u16_u64, u16 / (u64 + UINT64(1)) AS u16_u64_plus_1, u16 / f32 AS u16_f32, u16 / (f32 + FLOAT32(1)) AS u16_f32_plus_1, u16 / f64 AS u16_f64, u16 / (f64 + FLOAT64(1)) AS u16_f64_plus_1 FROM modified_FunctionDiv_FunctionDiv_stream INTO CHECKSUM"
    "test_name": "function/arithmetical/FunctionDiv.test"
  - "query": "SELECT u32 / i8 AS u32_i8, u32 / (i8 + INT8(1)) AS u32_i8_plus_1, u32 / i16 AS u32_i16, u32 / (i16 + INT16(1)) AS u32_i16_plus_1, u32 / i32 AS u32_i32, u32 / (i32 + INT32(1)) AS u32_i32_plus_1, u32 / i64 AS u32_i64, u32 / (i64 + INT64(1)) AS u32_i64_plus_1, u32 / u8 AS u32_u8, u32 / (u8 + UINT8(1)) AS u32_u8_plus_1, u32 / u16 AS u32_u16, u32 / (u16 + UINT16(1)) AS u32_u16_plus_1, u32 / u32 AS u32_u32, u32 / (u32 + UINT32(1)) AS u32_u32_plus_1, u32 / u64 AS u32_u64, u32 / (u64 + UINT64(1)) AS u32_u64_plus_1, u32 / f32 AS u32_f32, u32 / (f32 + FLOAT32(1)) AS u32_f32_plus_1, u32 / f64 AS u32_f64, u32 / (f64 + FLOAT64(1)) AS u32_f64_plus_1 FROM modified_FunctionDiv_FunctionDiv_stream INTO CHECKSUM"
    "test_name": "function/arithmetical/FunctionDiv.test"
  - "query": "SELECT u64 / i8 AS u64_i8, u64 / (i8 + INT8(1)) AS u64_i8_plus_1, u64 / i16 AS u64_i16, u64 / (i16 + INT16(1)) AS u64_i16_plus_1, u64 / i32 AS u64_i32, u64 / (i32 + INT32(1)) AS u64_i32_plus_1, u64 / i64 AS u64_i64, u64 / (i64 + INT64(1)) AS u64_i64_plus_1, u64 / u8 AS u64_u8, u64 / (u8 + UINT8(1)) AS u64_u8_plus_1, u64 / u16 AS u64_u16, u64 / (u16 + UINT16(1)) AS u64_u16_plus_1, u64 / u32 AS u64_u32, u64 / (u32 + UINT32(1)) AS u64_u32_plus_1, u64 / u64 AS u64_u64, u64 / (u64 + UINT64(1)) AS u64_u64_plus_1, u64 / f32 AS u64_f32, u64 / (f32 + FLOAT32(1)) AS u64_f32_plus_1, u64 / f64 AS u64_f64, u64 / (f64 + FLOAT64(1)) AS u64_f64_plus_1 FROM modified_FunctionDiv_FunctionDiv_stream INTO CHECKSUM"
    "test_name": "function/arithmetical/FunctionDiv.test"
  - "query": "SELECT f32 / i8 AS f32_i8, f32 / (i8 + INT8(1)) AS f32_i8_plus_1, f32 / i16 AS f32_i16, f32 / (i16 + INT16(1)) AS f32_i16_plus_1, f32 / i32 AS f32_i32, f32 / (i32 + INT32(1)) AS f32_i32_plus_1, f32 / i64 AS f32_i64, f32 / (i64 + INT64(1)) AS f32_i64_plus_1, f32 / u8 AS f32_u8, f32 / (u8 + UINT8(1)) AS f32_u8_plus_1, f32 / u16 AS f32_u16, f32 / (u16 + UINT16(1)) AS f32_u16_plus_1, f32 / u32 AS f32_u32, f32 / (u32 + UINT32(1)) AS f32_u32_plus_1, f32 / u64 AS f32_u64, f32 / (u64 + UINT64(1)) AS f32_u64_plus_1, f32 / f32 AS f32_f32, f32 / (f32 + FLOAT32(1)) AS f32_f32_plus_1, f32 / f64 AS f32_f64, f32 / (f64 + FLOAT64(1)) AS f32_f64_plus_1 FROM modified_FunctionDiv_FunctionDiv_stream INTO CHECKSUM"
    "test_name": "function/arithmetical/FunctionDiv.test"
  - "query": "SELECT f64 / i8 AS f64_i8, f64 / (i8 + INT8(1)) AS f64_i8_plus_1, f64 / i16 AS f64_i16, f64 / (i16 + INT16(1)) AS f64_i16_plus_1, f64 / i32 AS f64_i32, f64 / (i32 + INT32(1)) AS f64_i32_plus_1, f64 / i64 AS f64_i64, f64 / (i64 + INT64(1)) AS f64_i64_plus_1, f64 / u8 AS f64_u8, f64 / (u8 + UINT8(1)) AS f64_u8_plus_1, f64 / u16 AS f64_u16, f64 / (u16 + UINT16(1)) AS f64_u16_plus_1, f64 / u32 AS f64_u32, f64 / (u32 + UINT32(1)) AS f64_u32_plus_1, f64 / u64 AS f64_u64, f64 / (u64 + UINT64(1)) AS f64_u64_plus_1, f64 / f32 AS f64_f32, f64 / (f32 + FLOAT32(1)) AS f64_f32_plus_1, f64 / f64 AS f64_f64, f64 / (f64 + FLOAT64(1)) AS f64_f64_plus_1 FROM modified_FunctionDiv_FunctionDiv_stream INTO CHECKSUM"
    "test_name": "function/arithmetical/FunctionDiv.test"
  - "query": "SELECT i8 / i8 AS i8_i8, i8 / (i8 + INT8(1)) AS i8_i8_plus_1, i8 / i16 AS i8_i16, i8 / (i16 + INT16(1)) AS i8_i16_plus_1, i8 / i32 AS i8_i32, i8 / (i32 + INT32(1)) AS i8_i32_plus_1, i8 / i64 AS i8_i64, i8 / (i64 + INT64(1)) AS i8_i64_plus_1, i8 / u8 AS i8_u8, i8 / (u8 + UINT8(1)) AS i8_u8_plus_1, i8 / u16 AS i8_u16, i8 / (u16 + UINT16(1)) AS i8_u16_plus_1, i8 / u32 AS i8_u32, i8 / (u32 + UINT32(1)) AS i8_u32_plus_1, i8 / u64 AS i8_u64, i8 / (u64 + UINT64(1)) AS i8_u64_plus_1, i8 / f32 AS i8_f32, i8 / (f32 + FLOAT32(1)) AS i8_f32_plus_1, i8 / f64 AS i8_f64, i8 / (f64 + FLOAT64(1)) AS i8_f64_plus_1 FROM modified_FunctionDiv_FunctionDiv_stream INTO CHECKSUM"
    "test_name": "function/arithmetical/FunctionDiv.test"
  - "query": "SELECT i16 / i8 AS i16_i8, i16 / (i8 + INT8(1)) AS i16_i8_plus_1, i16 / i16 AS i16_i16, i16 / (i16 + INT16(1)) AS i16_i16_plus_1, i16 / i32 AS i16_i32, i16 / (i32 + INT32(1)) AS i16_i32_plus_1, i16 / i64 AS i16_i64, i16 / (i64 + INT64(1)) AS i16_i64_plus_1, i16 / u8 AS i16_u8, i16 / (u8 + UINT8(1)) AS i16_u8_plus_1, i16 / u16 AS i16_u16, i16 / (u16 + UINT16(1)) AS i16_u16_plus_1, i16 / u32 AS i16_u32, i16 / (u32 + UINT32(1)) AS i16_u32_plus_1, i16 / u64 AS i16_u64, i16 / (u64 + UINT64(1)) AS i16_u64_plus_1, i16 / f32 AS i16_f32, i16 / (f32 + FLOAT32(1)) AS i16_f32_plus_1, i16 / f64 AS i16_f64, i16 / (f64 + FLOAT64(1)) AS i16_f64_plus_1 FROM modified_FunctionDiv_FunctionDiv_stream INTO CHECKSUM"
    "test_name": "function/arithmetical/FunctionDiv.test"
  - "query": "SELECT i32 / i8 AS i32_i8, i32 / (i8 + INT8(1)) AS i32_i8_plus_1, i32 / i16 AS i32_i16, i32 / (i16 + INT16(1)) AS i32_i16_plus_1, i32 / i32 AS i32_i32, i32 / (i32 + INT32(1)) AS i32_i32_plus_1, i32 / i64 AS i32_i64, i32 / (i64 + INT64(1)) AS i32_i64_plus_1, i32 / u8 AS i32_u8, i32 / (u8 + UINT8(1)) AS i32_u8_plus_1, i32 / u16 AS i32_u16, i32 / (u16 + UINT16(1)) AS i32_u16_plus_1, i32 / u32 AS i32_u32, i32 / (u32 + UINT32(1)) AS i32_u32_plus_1, i32 / u64 AS i32_u64, i32 / (u64 + UINT64(1)) AS i32_u64_plus_1, i32 / f32 AS i32_f32, i32 / (f32 + FLOAT32(1)) AS i32_f32_plus_1, i32 / f64 AS i32_f64, i32 / (f64 + FLOAT64(1)) AS i32_f64_plus_1 FROM modified_FunctionDiv_FunctionDiv_stream INTO CHECKSUM"
    "test_name": "function/arithmetical/FunctionDiv.test"
  - "query": "SELECT i64 / i8 AS i64_i8, i64 / (i8 + INT8(1)) AS i64_i8_plus_1, i64 / i16 AS i64_i16, i64 / (i16 + INT16(1)) AS i64_i16_plus_1, i64 / i32 AS i64_i32, i64 / (i32 + INT32(1)) AS i64_i32_plus_1, i64 / i64 AS i64_i64, i64 / (i64 + INT64(1)) AS i64_i64_plus_1, i64 / u8 AS i64_u8, i64 / (u8 + UINT8(1)) AS i64_u8_plus_1, i64 / u16 AS i64_u16, i64 / (u16 + UINT16(1)) AS i64_u16_plus_1, i64 / u32 AS i64_u32, i64 / (u32 + UINT32(1)) AS i64_u32_plus_1, i64 / u64 AS i64_u64, i64 / (u64 + UINT64(1)) AS i64_u64_plus_1, i64 / f32 AS i64_f32, i64 / (f32 + FLOAT32(1)) AS i64_f32_plus_1, i64 / f64 AS i64_f64, i64 / (f64 + FLOAT64(1)) AS i64_f64_plus_1 FROM modified_FunctionDiv_FunctionDiv_stream INTO CHECKSUM"
    "test_name": "function/arithmetical/FunctionDiv.test"
  - "query": "SELECT u8 / i8 AS u8_i8, u8 / (i8 + INT8(1)) AS u8_i8_plus_1, u8 / i16 AS u8_i16, u8 / (i16 + INT16(1)) AS u8_i16_plus_1, u8 / i32 AS u8_i32, u8 / (i32 + INT32(1)) AS u8_i32_plus_1, u8 / i64 AS u8_i64, u8 / (i64 + INT64(1)) AS u8_i64_plus_1, u8 / u8 AS u8_u8, u8 / (u8 + UINT8(1)) AS u8_u8_plus_1, u8 / u16 AS u8_u16, u8 / (u16 + UINT16(1)) AS u8_u16_plus_1, u8 / u32 AS u8_u32, u8 / (u32 + UINT32(1)) AS u8_u32_plus_1, u8 / u64 AS u8_u64, u8 / (u64 + UINT64(1)) AS u8_u64_plus_1, u8 / f32 AS u8_f32, u8 / (f32 + FLOAT32(1)) AS u8_f32_plus_1, u8 / f64 AS u8_f64, u8 / (f64 + FLOAT64(1)) AS u8_f64_plus_1 FROM modified_FunctionDiv_FunctionDiv_stream INTO CHECKSUM"
    "test_name": "function/arithmetical/FunctionDiv.test"
  - "query": "SELECT u16 / i8 AS u16_i8, u16 / (i8 + INT8(1)) AS u16_i8_plus_1, u16 / i16 AS u16_i16, u16 / (i16 + INT16(1)) AS u16_i16_plus_1, u16 / i32 AS u16_i32, u16 / (i32 + INT32(1)) AS u16_i32_plus_1, u16 / i64 AS u16_i64, u16 / (i64 + INT64(1)) AS u16_i64_plus_1, u16 / u8 AS u16_u8, u16 / (u8 + UINT8(1)) AS u16_u8_plus_1, u16 / u16 AS u16_u16, u16 / (u16 + UINT16(1)) AS u16_u16_plus_1, u16 / u32 AS u16_u32, u16 / (u32 + UINT32(1)) AS u16_u32_plus_1, u16 / u64 AS u16_u64, u16 / (u64 + UINT64(1)) AS u16_u64_plus_1, u16 / f32 AS u16_f32, u16 / (f32 + FLOAT32(1)) AS u16_f32_plus_1, u16 / f64 AS u16_f64, u16 / (f64 + FLOAT64(1)) AS u16_f64_plus_1 FROM modified_FunctionDiv_FunctionDiv_stream INTO CHECKSUM"
    "test_name": "function/arithmetical/FunctionDiv.test"
  - "query": "SELECT u32 / i8 AS u32_i8, u32 / (i8 + INT8(1)) AS u32_i8_plus_1, u32 / i16 AS u32_i16, u32 / (i16 + INT16(1)) AS u32_i16_plus_1, u32 / i32 AS u32_i32, u32 / (i32 + INT32(1)) AS u32_i32_plus_1, u32 / i64 AS u32_i64, u32 / (i64 + INT64(1)) AS u32_i64_plus_1, u32 / u8 AS u32_u8, u32 / (u8 + UINT8(1)) AS u32_u8_plus_1, u32 / u16 AS u32_u16, u32 / (u16 + UINT16(1)) AS u32_u16_plus_1, u32 / u32 AS u32_u32, u32 / (u32 + UINT32(1)) AS u32_u32_plus_1, u32 / u64 AS u32_u64, u32 / (u64 + UINT64(1)) AS u32_u64_plus_1, u32 / f32 AS u32_f32, u32 / (f32 + FLOAT32(1)) AS u32_f32_plus_1, u32 / f64 AS u32_f64, u32 / (f64 + FLOAT64(1)) AS u32_f64_plus_1 FROM modified_FunctionDiv_FunctionDiv_stream INTO CHECKSUM"
    "test_name": "function/arithmetical/FunctionDiv.test"
  - "query": "SELECT u64 / i8 AS u64_i8, u64 / (i8 + INT8(1)) AS u64_i8_plus_1, u64 / i16 AS u64_i16, u64 / (i16 + INT16(1)) AS u64_i16_plus_1, u64 / i32 AS u64_i32, u64 / (i32 + INT32(1)) AS u64_i32_plus_1, u64 / i64 AS u64_i64, u64 / (i64 + INT64(1)) AS u64_i64_plus_1, u64 / u8 AS u64_u8, u64 / (u8 + UINT8(1)) AS u64_u8_plus_1, u64 / u16 AS u64_u16, u64 / (u16 + UINT16(1)) AS u64_u16_plus_1, u64 / u32 AS u64_u32, u64 / (u32 + UINT32(1)) AS u64_u32_plus_1, u64 / u64 AS u64_u64, u64 / (u64 + UINT64(1)) AS u64_u64_plus_1, u64 / f32 AS u64_f32, u64 / (f32 + FLOAT32(1)) AS u64_f32_plus_1, u64 / f64 AS u64_f64, u64 / (f64 + FLOAT64(1)) AS u64_f64_plus_1 FROM modified_FunctionDiv_FunctionDiv_stream INTO CHECKSUM"
    "test_name": "function/arithmetical/FunctionDiv.test"
  - "query": "SELECT f32 / i8 AS f32_i8, f32 / (i8 + INT8(1)) AS f32_i8_plus_1, f32 / i16 AS f32_i16, f32 / (i16 + INT16(1)) AS f32_i16_plus_1, f32 / i32 AS f32_i32, f32 / (i32 + INT32(1)) AS f32_i32_plus_1, f32 / i64 AS f32_i64, f32 / (i64 + INT64(1)) AS f32_i64_plus_1, f32 / u8 AS f32_u8, f32 / (u8 + UINT8(1)) AS f32_u8_plus_1, f32 / u16 AS f32_u16, f32 / (u16 + UINT16(1)) AS f32_u16_plus_1, f32 / u32 AS f32_u32, f32 / (u32 + UINT32(1)) AS f32_u32_plus_1, f32 / u64 AS f32_u64, f32 / (u64 + UINT64(1)) AS f32_u64_plus_1, f32 / f32 AS f32_f32, f32 / (f32 + FLOAT32(1)) AS f32_f32_plus_1, f32 / f64 AS f32_f64, f32 / (f64 + FLOAT64(1)) AS f32_f64_plus_1 FROM modified_FunctionDiv_FunctionDiv_stream INTO CHECKSUM"
    "test_name": "function/arithmetical/FunctionDiv.test"
  - "query": "SELECT f64 / i8 AS f64_i8, f64 / (i8 + INT8(1)) AS f64_i8_plus_1, f64 / i16 AS f64_i16, f64 / (i16 + INT16(1)) AS f64_i16_plus_1, f64 / i32 AS f64_i32, f64 / (i32 + INT32(1)) AS f64_i32_plus_1, f64 / i64 AS f64_i64, f64 / (i64 + INT64(1)) AS f64_i64_plus_1, f64 / u8 AS f64_u8, f64 / (u8 + UINT8(1)) AS f64_u8_plus_1, f64 / u16 AS f64_u16, f64 / (u16 + UINT16(1)) AS f64_u16_plus_1, f64 / u32 AS f64_u32, f64 / (u32 + UINT32(1)) AS f64_u32_plus_1, f64 / u64 AS f64_u64, f64 / (u64 + UINT64(1)) AS f64_u64_plus_1, f64 / f32 AS f64_f32, f64 / (f32 + FLOAT32(1)) AS f64_f32_plus_1, f64 / f64 AS f64_f64, f64 / (f64 + FLOAT64(1)) AS f64_f64_plus_1 FROM modified_FunctionDiv_FunctionDiv_stream INTO CHECKSUM"
    "test_name": "function/arithmetical/FunctionDiv.test"
  - "query": "SELECT i8 / i8 AS i8_i8, i8 / (i8 + INT8(1)) AS i8_i8_plus_1, i8 / i16 AS i8_i16, i8 / (i16 + INT16(1)) AS i8_i16_plus_1, i8 / i32 AS i8_i32, i8 / (i32 + INT32(1)) AS i8_i32_plus_1, i8 / i64 AS i8_i64, i8 / (i64 + INT64(1)) AS i8_i64_plus_1, i8 / u8 AS i8_u8, i8 / (u8 + UINT8(1)) AS i8_u8_plus_1, i8 / u16 AS i8_u16, i8 / (u16 + UINT16(1)) AS i8_u16_plus_1, i8 / u32 AS i8_u32, i8 / (u32 + UINT32(1)) AS i8_u32_plus_1, i8 / u64 AS i8_u64, i8 / (u64 + UINT64(1)) AS i8_u64_plus_1, i8 / f32 AS i8_f32, i8 / (f32 + FLOAT32(1)) AS i8_f32_plus_1, i8 / f64 AS i8_f64, i8 / (f64 + FLOAT64(1)) AS i8_f64_plus_1 FROM FunctionDiv_stream INTO CHECKSUM"
    "test_name": "function/arithmetical/FunctionDiv.test"
  - "query": "SELECT i16 / i8 AS i16_i8, i16 / (i8 + INT8(1)) AS i16_i8_plus_1, i16 / i16 AS i16_i16, i16 / (i16 + INT16(1)) AS i16_i16_plus_1, i16 / i32 AS i16_i32, i16 / (i32 + INT32(1)) AS i16_i32_plus_1, i16 / i64 AS i16_i64, i16 / (i64 + INT64(1)) AS i16_i64_plus_1, i16 / u8 AS i16_u8, i16 / (u8 + UINT8(1)) AS i16_u8_plus_1, i16 / u16 AS i16_u16, i16 / (u16 + UINT16(1)) AS i16_u16_plus_1, i16 / u32 AS i16_u32, i16 / (u32 + UINT32(1)) AS i16_u32_plus_1, i16 / u64 AS i16_u64, i16 / (u64 + UINT64(1)) AS i16_u64_plus_1, i16 / f32 AS i16_f32, i16 / (f32 + FLOAT32(1)) AS i16_f32_plus_1, i16 / f64 AS i16_f64, i16 / (f64 + FLOAT64(1)) AS i16_f64_plus_1 FROM FunctionDiv_stream INTO CHECKSUM"
    "test_name": "function/arithmetical/FunctionDiv.test"
  - "query": "SELECT i32 / i8 AS i32_i8, i32 / (i8 + INT8(1)) AS i32_i8_plus_1, i32 / i16 AS i32_i16, i32 / (i16 + INT16(1)) AS i32_i16_plus_1, i32 / i32 AS i32_i32, i32 / (i32 + INT32(1)) AS i32_i32_plus_1, i32 / i64 AS i32_i64, i32 / (i64 + INT64(1)) AS i32_i64_plus_1, i32 / u8 AS i32_u8, i32 / (u8 + UINT8(1)) AS i32_u8_plus_1, i32 / u16 AS i32_u16, i32 / (u16 + UINT16(1)) AS i32_u16_plus_1, i32 / u32 AS i32_u32, i32 / (u32 + UINT32(1)) AS i32_u32_plus_1, i32 / u64 AS i32_u64, i32 / (u64 + UINT64(1)) AS i32_u64_plus_1, i32 / f32 AS i32_f32, i32 / (f32 + FLOAT32(1)) AS i32_f32_plus_1, i32 / f64 AS i32_f64, i32 / (f64 + FLOAT64(1)) AS i32_f64_plus_1 FROM FunctionDiv_stream INTO CHECKSUM"
    "test_name": "function/arithmetical/FunctionDiv.test"
  - "query": "SELECT i64 / i8 AS i64_i8, i64 / (i8 + INT8(1)) AS i64_i8_plus_1, i64 / i16 AS i64_i16, i64 / (i16 + INT16(1)) AS i64_i16_plus_1, i64 / i32 AS i64_i32, i64 / (i32 + INT32(1)) AS i64_i32_plus_1, i64 / i64 AS i64_i64, i64 / (i64 + INT64(1)) AS i64_i64_plus_1, i64 / u8 AS i64_u8, i64 / (u8 + UINT8(1)) AS i64_u8_plus_1, i64 / u16 AS i64_u16, i64 / (u16 + UINT16(1)) AS i64_u16_plus_1, i64 / u32 AS i64_u32, i64 / (u32 + UINT32(1)) AS i64_u32_plus_1, i64 / u64 AS i64_u64, i64 / (u64 + UINT64(1)) AS i64_u64_plus_1, i64 / f32 AS i64_f32, i64 / (f32 + FLOAT32(1)) AS i64_f32_plus_1, i64 / f64 AS i64_f64, i64 / (f64 + FLOAT64(1)) AS i64_f64_plus_1 FROM FunctionDiv_stream INTO CHECKSUM"
    "test_name": "function/arithmetical/FunctionDiv.test"
  - "query": "SELECT u8 / i8 AS u8_i8, u8 / (i8 + INT8(1)) AS u8_i8_plus_1, u8 / i16 AS u8_i16, u8 / (i16 + INT16(1)) AS u8_i16_plus_1, u8 / i32 AS u8_i32, u8 / (i32 + INT32(1)) AS u8_i32_plus_1, u8 / i64 AS u8_i64, u8 / (i64 + INT64(1)) AS u8_i64_plus_1, u8 / u8 AS u8_u8, u8 / (u8 + UINT8(1)) AS u8_u8_plus_1, u8 / u16 AS u8_u16, u8 / (u16 + UINT16(1)) AS u8_u16_plus_1, u8 / u32 AS u8_u32, u8 / (u32 + UINT32(1)) AS u8_u32_plus_1, u8 / u64 AS u8_u64, u8 / (u64 + UINT64(1)) AS u8_u64_plus_1, u8 / f32 AS u8_f32, u8 / (f32 + FLOAT32(1)) AS u8_f32_plus_1, u8 / f64 AS u8_f64, u8 / (f64 + FLOAT64(1)) AS u8_f64_plus_1 FROM FunctionDiv_stream INTO CHECKSUM"
    "test_name": "function/arithmetical/FunctionDiv.test"
  - "query": "SELECT u16 / i8 AS u16_i8, u16 / (i8 + INT8(1)) AS u16_i8_plus_1, u16 / i16 AS u16_i16, u16 / (i16 + INT16(1)) AS u16_i16_plus_1, u16 / i32 AS u16_i32, u16 / (i32 + INT32(1)) AS u16_i32_plus_1, u16 / i64 AS u16_i64, u16 / (i64 + INT64(1)) AS u16_i64_plus_1, u16 / u8 AS u16_u8, u16 / (u8 + UINT8(1)) AS u16_u8_plus_1, u16 / u16 AS u16_u16, u16 / (u16 + UINT16(1)) AS u16_u16_plus_1, u16 / u32 AS u16_u32, u16 / (u32 + UINT32(1)) AS u16_u32_plus_1, u16 / u64 AS u16_u64, u16 / (u64 + UINT64(1)) AS u16_u64_plus_1, u16 / f32 AS u16_f32, u16 / (f32 + FLOAT32(1)) AS u16_f32_plus_1, u16 / f64 AS u16_f64, u16 / (f64 + FLOAT64(1)) AS u16_f64_plus_1 FROM FunctionDiv_stream INTO CHECKSUM"
    "test_name": "function/arithmetical/FunctionDiv.test"
  - "query": "SELECT u32 / i8 AS u32_i8, u32 / (i8 + INT8(1)) AS u32_i8_plus_1, u32 / i16 AS u32_i16, u32 / (i16 + INT16(1)) AS u32_i16_plus_1, u32 / i32 AS u32_i32, u32 / (i32 + INT32(1)) AS u32_i32_plus_1, u32 / i64 AS u32_i64, u32 / (i64 + INT64(1)) AS u32_i64_plus_1, u32 / u8 AS u32_u8, u32 / (u8 + UINT8(1)) AS u32_u8_plus_1, u32 / u16 AS u32_u16, u32 / (u16 + UINT16(1)) AS u32_u16_plus_1, u32 / u32 AS u32_u32, u32 / (u32 + UINT32(1)) AS u32_u32_plus_1, u32 / u64 AS u32_u64, u32 / (u64 + UINT64(1)) AS u32_u64_plus_1, u32 / f32 AS u32_f32, u32 / (f32 + FLOAT32(1)) AS u32_f32_plus_1, u32 / f64 AS u32_f64, u32 / (f64 + FLOAT64(1)) AS u32_f64_plus_1 FROM FunctionDiv_stream INTO CHECKSUM"
    "test_name": "function/arithmetical/FunctionDiv.test"
  - "query": "SELECT u64 / i8 AS u64_i8, u64 / (i8 + INT8(1)) AS u64_i8_plus_1, u64 / i16 AS u64_i16, u64 / (i16 + INT16(1)) AS u64_i16_plus_1, u64 / i32 AS u64_i32, u64 / (i32 + INT32(1)) AS u64_i32_plus_1, u64 / i64 AS u64_i64, u64 / (i64 + INT64(1)) AS u64_i64_plus_1, u64 / u8 AS u64_u8, u64 / (u8 + UINT8(1)) AS u64_u8_plus_1, u64 / u16 AS u64_u16, u64 / (u16 + UINT16(1)) AS u64_u16_plus_1, u64 / u32 AS u64_u32, u64 / (u32 + UINT32(1)) AS u64_u32_plus_1, u64 / u64 AS u64_u64, u64 / (u64 + UINT64(1)) AS u64_u64_plus_1, u64 / f32 AS u64_f32, u64 / (f32 + FLOAT32(1)) AS u64_f32_plus_1, u64 / f64 AS u64_f64, u64 / (f64 + FLOAT64(1)) AS u64_f64_plus_1 FROM FunctionDiv_stream INTO CHECKSUM"
    "test_name": "function/arithmetical/FunctionDiv.test"
  - "query": "SELECT f32 / i8 AS f32_i8, f32 / (i8 + INT8(1)) AS f32_i8_plus_1, f32 / i16 AS f32_i16, f32 / (i16 + INT16(1)) AS f32_i16_plus_1, f32 / i32 AS f32_i32, f32 / (i32 + INT32(1)) AS f32_i32_plus_1, f32 / i64 AS f32_i64, f32 / (i64 + INT64(1)) AS f32_i64_plus_1, f32 / u8 AS f32_u8, f32 / (u8 + UINT8(1)) AS f32_u8_plus_1, f32 / u16 AS f32_u16, f32 / (u16 + UINT16(1)) AS f32_u16_plus_1, f32 / u32 AS f32_u32, f32 / (u32 + UINT32(1)) AS f32_u32_plus_1, f32 / u64 AS f32_u64, f32 / (u64 + UINT64(1)) AS f32_u64_plus_1, f32 / f32 AS f32_f32, f32 / (f32 + FLOAT32(1)) AS f32_f32_plus_1, f32 / f64 AS f32_f64, f32 / (f64 + FLOAT64(1)) AS f32_f64_plus_1 FROM FunctionDiv_stream INTO CHECKSUM"
    "test_name": "function/arithmetical/FunctionDiv.test"
  - "query": "SELECT f64 / i8 AS f64_i8, f64 / (i8 + INT8(1)) AS f64_i8_plus_1, f64 / i16 AS f64_i16, f64 / (i16 + INT16(1)) AS f64_i16_plus_1, f64 / i32 AS f64_i32, f64 / (i32 + INT32(1)) AS f64_i32_plus_1, f64 / i64 AS f64_i64, f64 / (i64 + INT64(1)) AS f64_i64_plus_1, f64 / u8 AS f64_u8, f64 / (u8 + UINT8(1)) AS f64_u8_plus_1, f64 / u16 AS f64_u16, f64 / (u16 + UINT16(1)) AS f64_u16_plus_1, f64 / u32 AS f64_u32, f64 / (u32 + UINT32(1)) AS f64_u32_plus_1, f64 / u64 AS f64_u64, f64 / (u64 + UINT64(1)) AS f64_u64_plus_1, f64 / f32 AS f64_f32, f64 / (f32 + FLOAT32(1)) AS f64_f32_plus_1, f64 / f64 AS f64_f64, f64 / (f64 + FLOAT64(1)) AS f64_f64_plus_1 FROM FunctionDiv_stream INTO CHECKSUM"
    "test_name": "function/arithmetical/FunctionDiv.test"
  "FunctionEqual":
  - "query": "SELECT i8 == i8 AS bool1, i8 == i8 + INT8(1) AS bool2, i8 == i16 AS bool3, i8 == i16 + INT16(1) AS bool4, i8 == i32 AS bool5, i8 == i32 + INT32(1) AS bool6, i8 == i64 AS bool7, i8 == i64 + INT64(1) AS bool8, i8 == u8 AS bool9, i8 == u8 + UINT8(1) AS bool10, i8 == u16 AS bool11, i8 == u16 + UINT16(1) AS bool12, i8 == u32 AS bool13, i8 == u32 + UINT32(1) AS bool14, i8 == u64 AS bool15, i8 == u64 + UINT64(1) AS bool16, i8 == f32 AS bool17, i8 == f32 + FLOAT32(1) AS bool18, i8 == f64 AS bool19, i8 == f64 + FLOAT64(1) AS bool20 FROM FunctionEqual_stream INTO CHECKSUM"
    "test_name": "function/logical/FunctionEqual.test"
  - "query": "SELECT i16 == i8 AS bool1, i16 == i8 + INT8(1) AS bool2, i16 == i16 AS bool3, i16 == i16 + INT16(1) AS bool4, i16 == i32 AS bool5, i16 == i32 + INT32(1) AS bool6, i16 == i64 AS bool7, i16 == i64 + INT64(1) AS bool8, i16 == u8 AS bool9, i16 == u8 + UINT8(1) AS bool10, i16 == u16 AS bool11, i16 == u16 + UINT16(1) AS bool12, i16 == u32 AS bool13, i16 == u32 + UINT32(1) AS bool14, i16 == u64 AS bool15, i16 == u64 + UINT64(1) AS bool16, i16 == f32 AS bool17, i16 == f32 + FLOAT32(1) AS bool18, i16 == f64 AS bool19, i16 == f64 + FLOAT64(1) AS bool20 FROM FunctionEqual_stream INTO CHECKSUM"
    "test_name": "function/logical/FunctionEqual.test"
  - "query": "SELECT i32 == i8 AS bool1, i32 == i8 + INT8(1) AS bool2, i32 == i16 AS bool3, i32 == i16 + INT16(1) AS bool4, i32 == i32 AS bool5, i32 == i32 + INT32(1) AS bool6, i32 == i64 AS bool7, i32 == i64 + INT64(1) AS bool8, i32 == u8 AS bool9, i32 == u8 + UINT8(1) AS bool10, i32 == u16 AS bool11, i32 == u16 + UINT16(1) AS bool12, i32 == u32 AS bool13, i32 == u32 + UINT32(1) AS bool14, i32 == u64 AS bool15, i32 == u64 + UINT64(1) AS bool16, i32 == f32 AS bool17, i32 == f32 + FLOAT32(1) AS bool18, i32 == f64 AS bool19, i32 == f64 + FLOAT64(1) AS bool20 FROM FunctionEqual_stream INTO CHECKSUM"
    "test_name": "function/logical/FunctionEqual.test"
  - "query": "SELECT i64 == i8 AS bool1, i64 == i8 + INT8(1) AS bool2, i64 == i16 AS bool3, i64 == i16 + INT16(1) AS bool4, i64 == i32 AS bool5, i64 == i32 + INT32(1) AS bool6, i64 == i64 AS bool7, i64 == i64 + INT64(1) AS bool8, i64 == u8 AS bool9, i64 == u8 + UINT8(1) AS bool10, i64 == u16 AS bool11, i64 == u16 + UINT16(1) AS bool12, i64 == u32 AS bool13, i64 == u32 + UINT32(1) AS bool14, i64 == u64 AS bool15, i64 == u64 + UINT64(1) AS bool16, i64 == f32 AS bool17, i64 == f32 + FLOAT32(1) AS bool18, i64 == f64 AS bool19, i64 == f64 + FLOAT64(1) AS bool20 FROM FunctionEqual_stream INTO CHECKSUM"
    "test_name": "function/logical/FunctionEqual.test"
  - "query": "SELECT i8 == i8 AS bool1, i8 == i8 + INT8(1) AS bool2, i8 == i16 AS bool3, i8 == i16 + INT16(1) AS bool4, i8 == i32 AS bool5, i8 == i32 + INT32(1) AS bool6, i8 == i64 AS bool7, i8 == i64 + INT64(1) AS bool8, i8 == u8 AS bool9, i8 == u8 + UINT8(1) AS bool10, i8 == u16 AS bool11, i8 == u16 + UINT16(1) AS bool12, i8 == u32 AS bool13, i8 == u32 + UINT32(1) AS bool14, i8 == u64 AS bool15, i8 == u64 + UINT64(1) AS bool16, i8 == f32 AS bool17, i8 == f32 + FLOAT32(1) AS bool18, i8 == f64 AS bool19, i8 == f64 + FLOAT64(1) AS bool20 FROM FunctionEqual_stream INTO CHECKSUM"
    "test_name": "function/logical/FunctionEqual.test"
  - "query": "SELECT i16 == i8 AS bool1, i16 == i8 + INT8(1) AS bool2, i16 == i16 AS bool3, i16 == i16 + INT16(1) AS bool4, i16 == i32 AS bool5, i16 == i32 + INT32(1) AS bool6, i16 == i64 AS bool7, i16 == i64 + INT64(1) AS bool8, i16 == u8 AS bool9, i16 == u8 + UINT8(1) AS bool10, i16 == u16 AS bool11, i16 == u16 + UINT16(1) AS bool12, i16 == u32 AS bool13, i16 == u32 + UINT32(1) AS bool14, i16 == u64 AS bool15, i16 == u64 + UINT64(1) AS bool16, i16 == f32 AS bool17, i16 == f32 + FLOAT32(1) AS bool18, i16 == f64 AS bool19, i16 == f64 + FLOAT64(1) AS bool20 FROM FunctionEqual_stream INTO CHECKSUM"
    "test_name": "function/logical/FunctionEqual.test"
  - "query": "SELECT i32 == i8 AS bool1, i32 == i8 + INT8(1) AS bool2, i32 == i16 AS bool3, i32 == i16 + INT16(1) AS bool4, i32 == i32 AS bool5, i32 == i32 + INT32(1) AS bool6, i32 == i64 AS bool7, i32 == i64 + INT64(1) AS bool8, i32 == u8 AS bool9, i32 == u8 + UINT8(1) AS bool10, i32 == u16 AS bool11, i32 == u16 + UINT16(1) AS bool12, i32 == u32 AS bool13, i32 == u32 + UINT32(1) AS bool14, i32 == u64 AS bool15, i32 == u64 + UINT64(1) AS bool16, i32 == f32 AS bool17, i32 == f32 + FLOAT32(1) AS bool18, i32 == f64 AS bool19, i32 == f64 + FLOAT64(1) AS bool20 FROM FunctionEqual_stream INTO CHECKSUM"
    "test_name": "function/logical/FunctionEqual.test"
  - "query": "SELECT i64 == i8 AS bool1, i64 == i8 + INT8(1) AS bool2, i64 == i16 AS bool3, i64 == i16 + INT16(1) AS bool4, i64 == i32 AS bool5, i64 == i32 + INT32(1) AS bool6, i64 == i64 AS bool7, i64 == i64 + INT64(1) AS bool8, i64 == u8 AS bool9, i64 == u8 + UINT8(1) AS bool10, i64 == u16 AS bool11, i64 == u16 + UINT16(1) AS bool12, i64 == u32 AS bool13, i64 == u32 + UINT32(1) AS bool14, i64 == u64 AS bool15, i64 == u64 + UINT64(1) AS bool16, i64 == f32 AS bool17, i64 == f32 + FLOAT32(1) AS bool18, i64 == f64 AS bool19, i64 == f64 + FLOAT64(1) AS bool20 FROM FunctionEqual_stream INTO CHECKSUM"
    "test_name": "function/logical/FunctionEqual.test"
  "FunctionGreater":
  - "query": "SELECT i8 > i8 AS i8_i8, i8 > i8 + INT8(1) AS i8_i8_plus_1, i8 > i16 AS i8_i16, i8 > i16 + INT16(1) AS i8_i16_plus_1, i8 > i32 AS i8_i32, i8 > i32 + INT32(1) AS i8_i32_plus_1, i8 > i64 AS i8_i64, i8 > i64 + INT64(1) AS i8_i64_plus_1, i8 > u8  AS i8_u8, i8 > u8 + UINT8(1) AS i8_u8_plus_1, i8 > u16 AS i8_u16, i8 > u16 + UINT16(1) AS i8_u16_plus_1, i8 > u32 AS i8_u32, i8 > u32 + UINT32(1) AS i8_u32_plus_1, i8 > u64 AS i8_u64, i8 > u64 + UINT64(1) AS i8_u64_plus_1, i8 > f32 AS i8_f32, i8 > f32 + FLOAT32(1) AS i8_f32_plus_1, i8 > f64 AS i8_f64, i8 > f64 + FLOAT64(1) AS i8_f64_plus_1 FROM FunctionGreater_stream INTO CHECKSUM"
    "test_name": "function/comparison/FunctionGreater.test"
  - "query": "SELECT i16 > i8 AS i16_i8, i16 > i8 + INT8(1) AS i16_i8_plus_1, i16 > i16 AS i16_i16, i16 > i16 + INT16(1) AS i16_i16_plus_1, i16 > i32 AS i16_i32, i16 > i32 + INT32(1) AS i16_i32_plus_1, i16 > i64 AS i16_i64, i16 > i64 + INT64(1) AS i16_i64_plus_1, i16 > u8 AS i16_u8, i16 > u8 + UINT8(1) AS i16_u8_plus_1, u16 > i16 AS i16_u16, u16 > i16 + INT16(1) AS i16_u16_plus_1, i16 > u32 AS i16_u32, i16 > u32 + UINT32(1) AS i16_u32_plus_1, i16 > u64 AS i16_u64, i16 > u64 + UINT64(1) AS i16_u64_plus_1, i16 > f32 AS i16_f32, i16 > f32 + FLOAT32(1) AS i16_f32_plus_1, i16 > f64 AS i16_f64, i16 > f64 + FLOAT64(1) AS i16_f64_plus_1 FROM FunctionGreater_stream INTO CHECKSUM"
    "test_name": "function/comparison/FunctionGreater.test"
  - "query": "SELECT i32 > i8 AS i32_i8, i32 > i8 + INT8(1) AS i32_i8_plus_1, i32 > i16 AS i32_i16, i32 > i16 + INT16(1) AS i32_i16_plus_1, i32 > i32 AS i32_i32, i32 > i32 + INT32(1) AS i32_i32_plus_1, i32 > i64 AS i32_i64, i32 > i64 + INT64(1) AS i32_i64_plus_1, i32 > u8 AS i32_u8, i32 > u8 + UINT8(1) AS i32_u8_plus_1, i32 > u16 AS i32_u16, i32 > u16 + UINT16(1) AS i32_u16_plus_1, i32 > u32 AS i32_u32, i32 > u32 + UINT32(1) AS i32_u32_plus_1, i32 > u64 AS i32_u64, i32 > u64 + UINT64(1) AS i32_u64_plus_1, i32 > f32 AS i32_f32, i32 > f32 + FLOAT32(1) AS i32_f32_plus_1, i32 > f64 AS i32_f64, i32 > f64 + FLOAT64(1) AS i32_f64_plus_1 FROM FunctionGreater_stream INTO CHECKSUM"
    "test_name": "function/comparison/FunctionGreater.test"
  - "query": "SELECT i64 > i8 AS i64_i8, i64 > i8 + INT8(1) AS i64_i8_plus_1, i64 > i16 AS i64_i16, i64 > i16 + INT16(1) AS i64_i16_plus_1, i64 > i32 AS i64_i32, i64 > i32 + INT32(1) AS i64_i32_plus_1, i64 > i64 AS i64_i64, i64 > i64 + INT64(1) AS i64_i64_plus_1, i64 > u8 AS i64_u8, i64 > u8 + UINT8(1) AS i64_u8_plus_1, i64 > u16 AS i64_u16, i64 > u16 + UINT16(1) AS i64_u16_plus_1, i64 > u32 AS i64_u32, i64 > u32 + UINT32(1) AS i64_u32_plus_1, i64 > u64 AS i64_u64, i64 > u64 + UINT64(1) AS i64_u64_plus_1, i64 > f32 AS i64_f32, i64 > f32 + FLOAT32(1) AS i64_f32_plus_1, i64 > f64 AS i64_f64, i64 > f64 + FLOAT64(1) AS i64_f64_plus_1 FROM FunctionGreater_stream INTO CHECKSUM"
    "test_name": "function/comparison/FunctionGreater.test"
  - "query": "SELECT u8 > i8 AS u8_i8, u8 > i8 + INT8(1) AS u8_i8_plus_1, u8 > i16 AS u8_i16, u8 > i16 + INT16(1) AS u8_i16_plus_1, u8 > i32 AS u8_i32, u8 > i32 + INT32(1) AS u8_i32_plus_1, u8 > i64 AS u8_i64, u8 > i64 + INT64(1) AS u8_i64_plus_1, u8 > u8  AS u8_u8, u8 > u8 + UINT8(1) AS u8_u8_plus_1, u8 > u16 AS u8_u16, u8 > u16 + UINT16(1) AS u8_u16_plus_1, u8 > u32 AS u8_u32, u8 > u32 + UINT32(1) AS u8_u32_plus_1, u8 > u64 AS u8_u64, u8 > u64 + UINT64(1) AS u8_u64_plus_1, u8 > f32 AS u8_f32, u8 > f32 + FLOAT32(1) AS u8_f32_plus_1, u8 > f64 AS u8_f64, u8 > f64 + FLOAT64(1) AS u8_f64_plus_1 FROM FunctionGreater_stream INTO CHECKSUM"
    "test_name": "function/comparison/FunctionGreater.test"
  - "query": "SELECT u16 > i8 AS u16_i8, u16 > i8 + INT8(1) AS u16_i8_plus_1, u16 > i16 AS u16_i16, u16 > i16 + INT16(1) AS u16_i16_plus_1, u16 > i32 AS u16_i32, u16 > i32 + INT32(1) AS u16_i32_plus_1, u16 > i64 AS u16_i64, u16 > i64 + INT64(1) AS u16_i64_plus_1, u16 > u8 AS u16_u8, u16 > u8 + UINT8(1) AS u16_u8_plus_1, u16 > i16 AS u16_u16, u16 > i16 + INT16(1) AS u16_u16_plus_1, u16 > u32 AS u16_u32, u16 > u32 + UINT32(1) AS u16_u32_plus_1, u16 > u64 AS u16_u64, u16 > u64 + UINT64(1) AS u16_u64_plus_1, u16 > f32 AS u16_f32, u16 > f32 + FLOAT32(1) AS u16_f32_plus_1, u16 > f64 AS u16_f64, u16 > f64 + FLOAT64(1) AS u16_f64_plus_1 FROM FunctionGreater_stream INTO CHECKSUM"
    "test_name": "function/comparison/FunctionGreater.test"
  - "query": "SELECT u32 > i8 AS u32_i8, u32 > i8 + INT8(1) AS u32_i8_plus_1, u32 > i16 AS u32_i16, u32 > i16 + INT16(1) AS u32_i16_plus_1, u32 > i32 AS u32_i32, u32 > i32 + INT32(1) AS u32_i32_plus_1, u32 > i64 AS u32_i64, u32 > i64 + INT64(1) AS u32_i64_plus_1, u32 > u8 AS u32_u8, u32 > u8 + UINT8(1) AS u32_u8_plus_1, u32 > u16 AS u32_u16, u32 > u16 + UINT16(1) AS u32_u16_plus_1, u32 > u32 AS u32_u32, u32 > u32 + UINT32(1) AS u32_u32_plus_1, u32 > u64 AS u32_u64, u32 > u64 + UINT64(1) AS u32_u64_plus_1, u32 > f32 AS u32_f32, u32 > f32 + FLOAT32(1) AS u32_f32_plus_1, u32 > f64 AS u32_f64, u32 > f64 + FLOAT64(1) AS u32_f64_plus_1 FROM FunctionGreater_stream INTO CHECKSUM"
    "test_name": "function/comparison/FunctionGreater.test"
  - "query": "SELECT u64 > i8 AS u64_i8, u64 > i8 + INT8(1) AS u64_i8_plus_1, u64 > i16 AS u64_i16, u64 > i16 + INT16(1) AS u64_i16_plus_1, u64 > i32 AS u64_i32, u64 > i32 + INT32(1) AS u64_i32_plus_1, u64 > i64 AS u64_i64, u64 > i64 + INT64(1) AS u64_i64_plus_1, u64 > u8 AS u64_u8, u64 > u8 + UINT8(1) AS u64_u8_plus_1, u64 > u16 AS u64_u16, u64 > u16 + UINT16(1) AS u64_u16_plus_1, u64 > u32 AS u64_u32, u64 > u32 + UINT32(1) AS u64_u32_plus_1, u64 > u64 AS u64_u64, u64 > u64 + UINT64(1) AS u64_u64_plus_1, u64 > f32 AS u64_f32, u64 > f32 + FLOAT32(1) AS u64_f32_plus_1, u64 > f64 AS u64_f64, u64 > f64 + FLOAT64(1) AS u64_f64_plus_1 FROM FunctionGreater_stream INTO CHECKSUM"
    "test_name": "function/comparison/FunctionGreater.test"
  - "query": "SELECT i8 > i8 AS i8_i8, i8 > i8 + INT8(1) AS i8_i8_plus_1, i8 > i16 AS i8_i16, i8 > i16 + INT16(1) AS i8_i16_plus_1, i8 > i32 AS i8_i32, i8 > i32 + INT32(1) AS i8_i32_plus_1, i8 > i64 AS i8_i64, i8 > i64 + INT64(1) AS i8_i64_plus_1, i8 > u8  AS i8_u8, i8 > u8 + UINT8(1) AS i8_u8_plus_1, i8 > u16 AS i8_u16, i8 > u16 + UINT16(1) AS i8_u16_plus_1, i8 > u32 AS i8_u32, i8 > u32 + UINT32(1) AS i8_u32_plus_1, i8 > u64 AS i8_u64, i8 > u64 + UINT64(1) AS i8_u64_plus_1, i8 > f32 AS i8_f32, i8 > f32 + FLOAT32(1) AS i8_f32_plus_1, i8 > f64 AS i8_f64, i8 > f64 + FLOAT64(1) AS i8_f64_plus_1 FROM FunctionGreater_stream INTO CHECKSUM"
    "test_name": "function/comparison/FunctionGreater.test"
  - "query": "SELECT i16 > i8 AS i16_i8, i16 > i8 + INT8(1) AS i16_i8_plus_1, i16 > i16 AS i16_i16, i16 > i16 + INT16(1) AS i16_i16_plus_1, i16 > i32 AS i16_i32, i16 > i32 + INT32(1) AS i16_i32_plus_1, i16 > i64 AS i16_i64, i16 > i64 + INT64(1) AS i16_i64_plus_1, i16 > u8 AS i16_u8, i16 > u8 + UINT8(1) AS i16_u8_plus_1, u16 > i16 AS i16_u16, u16 > i16 + INT16(1) AS i16_u16_plus_1, i16 > u32 AS i16_u32, i16 > u32 + UINT32(1) AS i16_u32_plus_1, i16 > u64 AS i16_u64, i16 > u64 + UINT64(1) AS i16_u64_plus_1, i16 > f32 AS i16_f32, i16 > f32 + FLOAT32(1) AS i16_f32_plus_1, i16 > f64 AS i16_f64, i16 > f64 + FLOAT64(1) AS i16_f64_plus_1 FROM FunctionGreater_stream INTO CHECKSUM"
    "test_name": "function/comparison/FunctionGreater.test"
  - "query": "SELECT i32 > i8 AS i32_i8, i32 > i8 + INT8(1) AS i32_i8_plus_1, i32 > i16 AS i32_i16, i32 > i16 + INT16(1) AS i32_i16_plus_1, i32 > i32 AS i32_i32, i32 > i32 + INT32(1) AS i32_i32_plus_1, i32 > i64 AS i32_i64, i32 > i64 + INT64(1) AS i32_i64_plus_1, i32 > u8 AS i32_u8, i32 > u8 + UINT8(1) AS i32_u8_plus_1, i32 > u16 AS i32_u16, i32 > u16 + UINT16(1) AS i32_u16_plus_1, i32 > u32 AS i32_u32, i32 > u32 + UINT32(1) AS i32_u32_plus_1, i32 > u64 AS i32_u64, i32 > u64 + UINT64(1) AS i32_u64_plus_1, i32 > f32 AS i32_f32, i32 > f32 + FLOAT32(1) AS i32_f32_plus_1, i32 > f64 AS i32_f64, i32 > f64 + FLOAT64(1) AS i32_f64_plus_1 FROM FunctionGreater_stream INTO CHECKSUM"
    "test_name": "function/comparison/FunctionGreater.test"
  - "query": "SELECT i64 > i8 AS i64_i8, i64 > i8 + INT8(1) AS i64_i8_plus_1, i64 > i16 AS i64_i16, i64 > i16 + INT16(1) AS i64_i16_plus_1, i64 > i32 AS i64_i32, i64 > i32 + INT32(1) AS i64_i32_plus_1, i64 > i64 AS i64_i64, i64 > i64 + INT64(1) AS i64_i64_plus_1, i64 > u8 AS i64_u8, i64 > u8 + UINT8(1) AS i64_u8_plus_1, i64 > u16 AS i64_u16, i64 > u16 + UINT16(1) AS i64_u16_plus_1, i64 > u32 AS i64_u32, i64 > u32 + UINT32(1) AS i64_u32_plus_1, i64 > u64 AS i64_u64, i64 > u64 + UINT64(1) AS i64_u64_plus_1, i64 > f32 AS i64_f32, i64 > f32 + FLOAT32(1) AS i64_f32_plus_1, i64 > f64 AS i64_f64, i64 > f64 + FLOAT64(1) AS i64_f64_plus_1 FROM FunctionGreater_stream INTO CHECKSUM"
    "test_name": "function/comparison/FunctionGreater.test"
  - "query": "SELECT u8 > i8 AS u8_i8, u8 > i8 + INT8(1) AS u8_i8_plus_1, u8 > i16 AS u8_i16, u8 > i16 + INT16(1) AS u8_i16_plus_1, u8 > i32 AS u8_i32, u8 > i32 + INT32(1) AS u8_i32_plus_1, u8 > i64 AS u8_i64, u8 > i64 + INT64(1) AS u8_i64_plus_1, u8 > u8  AS u8_u8, u8 > u8 + UINT8(1) AS u8_u8_plus_1, u8 > u16 AS u8_u16, u8 > u16 + UINT16(1) AS u8_u16_plus_1, u8 > u32 AS u8_u32, u8 > u32 + UINT32(1) AS u8_u32_plus_1, u8 > u64 AS u8_u64, u8 > u64 + UINT64(1) AS u8_u64_plus_1, u8 > f32 AS u8_f32, u8 > f32 + FLOAT32(1) AS u8_f32_plus_1, u8 > f64 AS u8_f64, u8 > f64 + FLOAT64(1) AS u8_f64_plus_1 FROM FunctionGreater_stream INTO CHECKSUM"
    "test_name": "function/comparison/FunctionGreater.test"
  - "query": "SELECT u16 > i8 AS u16_i8, u16 > i8 + INT8(1) AS u16_i8_plus_1, u16 > i16 AS u16_i16, u16 > i16 + INT16(1) AS u16_i16_plus_1, u16 > i32 AS u16_i32, u16 > i32 + INT32(1) AS u16_i32_plus_1, u16 > i64 AS u16_i64, u16 > i64 + INT64(1) AS u16_i64_plus_1, u16 > u8 AS u16_u8, u16 > u8 + UINT8(1) AS u16_u8_plus_1, u16 > i16 AS u16_u16, u16 > i16 + INT16(1) AS u16_u16_plus_1, u16 > u32 AS u16_u32, u16 > u32 + UINT32(1) AS u16_u32_plus_1, u16 > u64 AS u16_u64, u16 > u64 + UINT64(1) AS u16_u64_plus_1, u16 > f32 AS u16_f32, u16 > f32 + FLOAT32(1) AS u16_f32_plus_1, u16 > f64 AS u16_f64, u16 > f64 + FLOAT64(1) AS u16_f64_plus_1 FROM FunctionGreater_stream INTO CHECKSUM"
    "test_name": "function/comparison/FunctionGreater.test"
  - "query": "SELECT u32 > i8 AS u32_i8, u32 > i8 + INT8(1) AS u32_i8_plus_1, u32 > i16 AS u32_i16, u32 > i16 + INT16(1) AS u32_i16_plus_1, u32 > i32 AS u32_i32, u32 > i32 + INT32(1) AS u32_i32_plus_1, u32 > i64 AS u32_i64, u32 > i64 + INT64(1) AS u32_i64_plus_1, u32 > u8 AS u32_u8, u32 > u8 + UINT8(1) AS u32_u8_plus_1, u32 > u16 AS u32_u16, u32 > u16 + UINT16(1) AS u32_u16_plus_1, u32 > u32 AS u32_u32, u32 > u32 + UINT32(1) AS u32_u32_plus_1, u32 > u64 AS u32_u64, u32 > u64 + UINT64(1) AS u32_u64_plus_1, u32 > f32 AS u32_f32, u32 > f32 + FLOAT32(1) AS u32_f32_plus_1, u32 > f64 AS u32_f64, u32 > f64 + FLOAT64(1) AS u32_f64_plus_1 FROM FunctionGreater_stream INTO CHECKSUM"
    "test_name": "function/comparison/FunctionGreater.test"
  - "query": "SELECT u64 > i8 AS u64_i8, u64 > i8 + INT8(1) AS u64_i8_plus_1, u64 > i16 AS u64_i16, u64 > i16 + INT16(1) AS u64_i16_plus_1, u64 > i32 AS u64_i32, u64 > i32 + INT32(1) AS u64_i32_plus_1, u64 > i64 AS u64_i64, u64 > i64 + INT64(1) AS u64_i64_plus_1, u64 > u8 AS u64_u8, u64 > u8 + UINT8(1) AS u64_u8_plus_1, u64 > u16 AS u64_u16, u64 > u16 + UINT16(1) AS u64_u16_plus_1, u64 > u32 AS u64_u32, u64 > u32 + UINT32(1) AS u64_u32_plus_1, u64 > u64 AS u64_u64, u64 > u64 + UINT64(1) AS u64_u64_plus_1, u64 > f32 AS u64_f32, u64 > f32 + FLOAT32(1) AS u64_f32_plus_1, u64 > f64 AS u64_f64, u64 > f64 + FLOAT64(1) AS u64_f64_plus_1 FROM FunctionGreater_stream INTO CHECKSUM"
    "test_name": "function/comparison/FunctionGreater.test"
  "FunctionGreaterEquals":
  - "query": "SELECT i8 >= i8 AS i8_i8, i8 >= i8 + INT8(1) AS i8_i8_plus_1, i8 >= i16 AS i8_i16, i8 >= i16 + INT16(1) AS i8_i16_plus_1, i8 >= i32 AS i8_i32, i8 >= i32 + INT32(1) AS i8_i32_plus_1, i8 >= i64 AS i8_i64, i8 >= i64 + INT64(1) AS i8_i64_plus_1, i8 >= u8  AS i8_u8, i8 >= u8 + UINT8(1) AS i8_u8_plus_1, i8 >= u16 AS i8_u16, i8 >= u16 + UINT16(1) AS i8_u16_plus_1, i8 >= u32 AS i8_u32, i8 >= u32 + UINT32(1) AS i8_u32_plus_1, i8 >= u64 AS i8_u64, i8 >= u64 + UINT64(1) AS i8_u64_plus_1, i8 >= f32 AS i8_f32, i8 >= f32 + FLOAT32(1) AS i8_f32_plus_1, i8 >= f64 AS i8_f64, i8 >= f64 + FLOAT64(1) AS i8_f64_plus_1 FROM FunctionGreaterEquals_stream INTO CHECKSUM"
    "test_name": "function/comparison/FunctionGreaterEquals.test"
  - "query": "SELECT i16 >= i8 AS i16_i8, i16 >= i8 + INT8(1) AS i16_i8_plus_1, i16 >= i16 AS i16_i16, i16 >= i16 + INT16(1) AS i16_i16_plus_1, i16 >= i32 AS i16_i32, i16 >= i32 + INT32(1) AS i16_i32_plus_1, i16 >= i64 AS i16_i64, i16 >= i64 + INT64(1) AS i16_i64_plus_1, i16 >= u8 AS i16_u8, i16 >= u8 + UINT8(1) AS i16_u8_plus_1, u16 >= i16 AS i16_u16, u16 >= i16 + INT16(1) AS i16_u16_plus_1, i16 >= u32 AS i16_u32, i16 >= u32 + UINT32(1) AS i16_u32_plus_1, i16 >= u64 AS i16_u64, i16 >= u64 + UINT64(1) AS i16_u64_plus_1, i16 >= f32 AS i16_f32, i16 >= f32 + FLOAT32(1) AS i16_f32_plus_1, i16 >= f64 AS i16_f64, i16 >= f64 + FLOAT64(1) AS i16_f64_plus_1 FROM FunctionGreaterEquals_stream INTO CHECKSUM"
    "test_name": "function/comparison/FunctionGreaterEquals.test"
  - "query": "SELECT i32 >= i8 AS i32_i8, i32 >= i8 + INT8(1) AS i32_i8_plus_1, i32 >= i16 AS i32_i16, i32 >= i16 + INT16(1) AS i32_i16_plus_1, i32 >= i32 AS i32_i32, i32 >= i32 + INT32(1) AS i32_i32_plus_1, i32 >= i64 AS i32_i64, i32 >= i64 + INT64(1) AS i32_i64_plus_1, i32 >= u8 AS i32_u8, i32 >= u8 + UINT8(1) AS i32_u8_plus_1, i32 >= u16 AS i32_u16, i32 >= u16 + UINT16(1) AS i32_u16_plus_1, i32 >= u32 AS i32_u32, i32 >= u32 + UINT32(1) AS i32_u32_plus_1, i32 >= u64 AS i32_u64, i32 >= u64 + UINT64(1) AS i32_u64_plus_1, i32 >= f32 AS i32_f32, i32 >= f32 + FLOAT32(1) AS i32_f32_plus_1, i32 >= f64 AS i32_f64, i32 >= f64 + FLOAT64(1) AS i32_f64_plus_1 FROM FunctionGreaterEquals_stream INTO CHECKSUM"
    "test_name": "function/comparison/FunctionGreaterEquals.test"
  - "query": "SELECT i64 >= i8 AS i64_i8, i64 >= i8 + INT8(1) AS i64_i8_plus_1, i64 >= i16 AS i64_i16, i64 >= i16 + INT16(1) AS i64_i16_plus_1, i64 >= i32 AS i64_i32, i64 >= i32 + INT32(1) AS i64_i32_plus_1, i64 >= i64 AS i64_i64, i64 >= i64 + INT64(1) AS i64_i64_plus_1, i64 >= u8 AS i64_u8, i64 >= u8 + UINT8(1) AS i64_u8_plus_1, i64 >= u16 AS i64_u16, i64 >= u16 + UINT16(1) AS i64_u16_plus_1, i64 >= u32 AS i64_u32, i64 >= u32 + UINT32(1) AS i64_u32_plus_1, i64 >= u64 AS i64_u64, i64 >= u64 + UINT64(1) AS i64_u64_plus_1, i64 >= f32 AS i64_f32, i64 >= f32 + FLOAT32(1) AS i64_f32_plus_1, i64 >= f64 AS i64_f64, i64 >= f64 + FLOAT64(1) AS i64_f64_plus_1 FROM FunctionGreaterEquals_stream INTO CHECKSUM"
    "test_name": "function/comparison/FunctionGreaterEquals.test"
  - "query": "SELECT u8 >= i8 AS u8_i8, u8 >= i8 + INT8(1) AS u8_i8_plus_1, u8 >= i16 AS u8_i16, u8 >= i16 + INT16(1) AS u8_i16_plus_1, u8 >= i32 AS u8_i32, u8 >= i32 + INT32(1) AS u8_i32_plus_1, u8 >= i64 AS u8_i64, u8 >= i64 + INT64(1) AS u8_i64_plus_1, u8 >= u8  AS u8_u8, u8 >= u8 + UINT8(1) AS u8_u8_plus_1, u8 >= u16 AS u8_u16, u8 >= u16 + UINT16(1) AS u8_u16_plus_1, u8 >= u32 AS u8_u32, u8 >= u32 + UINT32(1) AS u8_u32_plus_1, u8 >= u64 AS u8_u64, u8 >= u64 + UINT64(1) AS u8_u64_plus_1, u8 >= f32 AS u8_f32, u8 >= f32 + FLOAT32(1) AS u8_f32_plus_1, u8 >= f64 AS u8_f64, u8 >= f64 + FLOAT64(1) AS u8_f64_plus_1 FROM FunctionGreaterEquals_stream INTO CHECKSUM"
    "test_name": "function/comparison/FunctionGreaterEquals.test"
  - "query": "SELECT u16 >= i8 AS u16_i8, u16 >= i8 + INT8(1) AS u16_i8_plus_1, u16 >= i16 AS u16_i16, u16 >= i16 + INT16(1) AS u16_i16_plus_1, u16 >= i32 AS u16_i32, u16 >= i32 + INT32(1) AS u16_i32_plus_1, u16 >= i64 AS u16_i64, u16 >= i64 + INT64(1) AS u16_i64_plus_1, u16 >= u8 AS u16_u8, u16 >= u8 + UINT8(1) AS u16_u8_plus_1, u16 >= i16 AS u16_u16, u16 >= i16 + INT16(1) AS u16_u16_plus_1, u16 >= u32 AS u16_u32, u16 >= u32 + UINT32(1) AS u16_u32_plus_1, u16 >= u64 AS u16_u64, u16 >= u64 + UINT64(1) AS u16_u64_plus_1, u16 >= f32 AS u16_f32, u16 >= f32 + FLOAT32(1) AS u16_f32_plus_1, u16 >= f64 AS u16_f64, u16 >= f64 + FLOAT64(1) AS u16_f64_plus_1 FROM FunctionGreaterEquals_stream INTO CHECKSUM"
    "test_name": "function/comparison/FunctionGreaterEquals.test"
  - "query": "SELECT u32 >= i8 AS u32_i8, u32 >= i8 + INT8(1) AS u32_i8_plus_1, u32 >= i16 AS u32_i16, u32 >= i16 + INT16(1) AS u32_i16_plus_1, u32 >= i32 AS u32_i32, u32 >= i32 + INT32(1) AS u32_i32_plus_1, u32 >= i64 AS u32_i64, u32 >= i64 + INT64(1) AS u32_i64_plus_1, u32 >= u8 AS u32_u8, u32 >= u8 + UINT8(1) AS u32_u8_plus_1, u32 >= u16 AS u32_u16, u32 >= u16 + UINT16(1) AS u32_u16_plus_1, u32 >= u32 AS u32_u32, u32 >= u32 + UINT32(1) AS u32_u32_plus_1, u32 >= u64 AS u32_u64, u32 >= u64 + UINT64(1) AS u32_u64_plus_1, u32 >= f32 AS u32_f32, u32 >= f32 + FLOAT32(1) AS u32_f32_plus_1, u32 >= f64 AS u32_f64, u32 >= f64 + FLOAT64(1) AS u32_f64_plus_1 FROM FunctionGreaterEquals_stream INTO CHECKSUM"
    "test_name": "function/comparison/FunctionGreaterEquals.test"
  - "query": "SELECT u64 >= i8 AS u64_i8, u64 >= i8 + INT8(1) AS u64_i8_plus_1, u64 >= i16 AS u64_i16, u64 >= i16 + INT16(1) AS u64_i16_plus_1, u64 >= i32 AS u64_i32, u64 >= i32 + INT32(1) AS u64_i32_plus_1, u64 >= i64 AS u64_i64, u64 >= i64 + INT64(1) AS u64_i64_plus_1, u64 >= u8 AS u64_u8, u64 >= u8 + UINT8(1) AS u64_u8_plus_1, u64 >= u16 AS u64_u16, u64 >= u16 + UINT16(1) AS u64_u16_plus_1, u64 >= u32 AS u64_u32, u64 >= u32 + UINT32(1) AS u64_u32_plus_1, u64 >= u64 AS u64_u64, u64 >= u64 + UINT64(1) AS u64_u64_plus_1, u64 >= f32 AS u64_f32, u64 >= f32 + FLOAT32(1) AS u64_f32_plus_1, u64 >= f64 AS u64_f64, u64 >= f64 + FLOAT64(1) AS u64_f64_plus_1 FROM FunctionGreaterEquals_stream INTO CHECKSUM"
    "test_name": "function/comparison/FunctionGreaterEquals.test"
  - "query": "SELECT i8 >= i8 AS i8_i8, i8 >= i8 + INT8(1) AS i8_i8_plus_1, i8 >= i16 AS i8_i16, i8 >= i16 + INT16(1) AS i8_i16_plus_1, i8 >= i32 AS i8_i32, i8 >= i32 + INT32(1) AS i8_i32_plus_1, i8 >= i64 AS i8_i64, i8 >= i64 + INT64(1) AS i8_i64_plus_1, i8 >= u8  AS i8_u8, i8 >= u8 + UINT8(1) AS i8_u8_plus_1, i8 >= u16 AS i8_u16, i8 >= u16 + UINT16(1) AS i8_u16_plus_1, i8 >= u32 AS i8_u32, i8 >= u32 + UINT32(1) AS i8_u32_plus_1, i8 >= u64 AS i8_u64, i8 >= u64 + UINT64(1) AS i8_u64_plus_1, i8 >= f32 AS i8_f32, i8 >= f32 + FLOAT32(1) AS i8_f32_plus_1, i8 >= f64 AS i8_f64, i8 >= f64 + FLOAT64(1) AS i8_f64_plus_1 FROM FunctionGreaterEquals_stream INTO CHECKSUM"
    "test_name": "function/comparison/FunctionGreaterEquals.test"
  - "query": "SELECT i16 >= i8 AS i16_i8, i16 >= i8 + INT8(1) AS i16_i8_plus_1, i16 >= i16 AS i16_i16, i16 >= i16 + INT16(1) AS i16_i16_plus_1, i16 >= i32 AS i16_i32, i16 >= i32 + INT32(1) AS i16_i32_plus_1, i16 >= i64 AS i16_i64, i16 >= i64 + INT64(1) AS i16_i64_plus_1, i16 >= u8 AS i16_u8, i16 >= u8 + UINT8(1) AS i16_u8_plus_1, u16 >= i16 AS i16_u16, u16 >= i16 + INT16(1) AS i16_u16_plus_1, i16 >= u32 AS i16_u32, i16 >= u32 + UINT32(1) AS i16_u32_plus_1, i16 >= u64 AS i16_u64, i16 >= u64 + UINT64(1) AS i16_u64_plus_1, i16 >= f32 AS i16_f32, i16 >= f32 + FLOAT32(1) AS i16_f32_plus_1, i16 >= f64 AS i16_f64, i16 >= f64 + FLOAT64(1) AS i16_f64_plus_1 FROM FunctionGreaterEquals_stream INTO CHECKSUM"
    "test_name": "function/comparison/FunctionGreaterEquals.test"
  - "query": "SELECT i32 >= i8 AS i32_i8, i32 >= i8 + INT8(1) AS i32_i8_plus_1, i32 >= i16 AS i32_i16, i32 >= i16 + INT16(1) AS i32_i16_plus_1, i32 >= i32 AS i32_i32, i32 >= i32 + INT32(1) AS i32_i32_plus_1, i32 >= i64 AS i32_i64, i32 >= i64 + INT64(1) AS i32_i64_plus_1, i32 >= u8 AS i32_u8, i32 >= u8 + UINT8(1) AS i32_u8_plus_1, i32 >= u16 AS i32_u16, i32 >= u16 + UINT16(1) AS i32_u16_plus_1, i32 >= u32 AS i32_u32, i32 >= u32 + UINT32(1) AS i32_u32_plus_1, i32 >= u64 AS i32_u64, i32 >= u64 + UINT64(1) AS i32_u64_plus_1, i32 >= f32 AS i32_f32, i32 >= f32 + FLOAT32(1) AS i32_f32_plus_1, i32 >= f64 AS i32_f64, i32 >= f64 + FLOAT64(1) AS i32_f64_plus_1 FROM FunctionGreaterEquals_stream INTO CHECKSUM"
    "test_name": "function/comparison/FunctionGreaterEquals.test"
  - "query": "SELECT i64 >= i8 AS i64_i8, i64 >= i8 + INT8(1) AS i64_i8_plus_1, i64 >= i16 AS i64_i16, i64 >= i16 + INT16(1) AS i64_i16_plus_1, i64 >= i32 AS i64_i32, i64 >= i32 + INT32(1) AS i64_i32_plus_1, i64 >= i64 AS i64_i64, i64 >= i64 + INT64(1) AS i64_i64_plus_1, i64 >= u8 AS i64_u8, i64 >= u8 + UINT8(1) AS i64_u8_plus_1, i64 >= u16 AS i64_u16, i64 >= u16 + UINT16(1) AS i64_u16_plus_1, i64 >= u32 AS i64_u32, i64 >= u32 + UINT32(1) AS i64_u32_plus_1, i64 >= u64 AS i64_u64, i64 >= u64 + UINT64(1) AS i64_u64_plus_1, i64 >= f32 AS i64_f32, i64 >= f32 + FLOAT32(1) AS i64_f32_plus_1, i64 >= f64 AS i64_f64, i64 >= f64 + FLOAT64(1) AS i64_f64_plus_1 FROM FunctionGreaterEquals_stream INTO CHECKSUM"
    "test_name": "function/comparison/FunctionGreaterEquals.test"
  - "query": "SELECT u8 >= i8 AS u8_i8, u8 >= i8 + INT8(1) AS u8_i8_plus_1, u8 >= i16 AS u8_i16, u8 >= i16 + INT16(1) AS u8_i16_plus_1, u8 >= i32 AS u8_i32, u8 >= i32 + INT32(1) AS u8_i32_plus_1, u8 >= i64 AS u8_i64, u8 >= i64 + INT64(1) AS u8_i64_plus_1, u8 >= u8  AS u8_u8, u8 >= u8 + UINT8(1) AS u8_u8_plus_1, u8 >= u16 AS u8_u16, u8 >= u16 + UINT16(1) AS u8_u16_plus_1, u8 >= u32 AS u8_u32, u8 >= u32 + UINT32(1) AS u8_u32_plus_1, u8 >= u64 AS u8_u64, u8 >= u64 + UINT64(1) AS u8_u64_plus_1, u8 >= f32 AS u8_f32, u8 >= f32 + FLOAT32(1) AS u8_f32_plus_1, u8 >= f64 AS u8_f64, u8 >= f64 + FLOAT64(1) AS u8_f64_plus_1 FROM FunctionGreaterEquals_stream INTO CHECKSUM"
    "test_name": "function/comparison/FunctionGreaterEquals.test"
  - "query": "SELECT u16 >= i8 AS u16_i8, u16 >= i8 + INT8(1) AS u16_i8_plus_1, u16 >= i16 AS u16_i16, u16 >= i16 + INT16(1) AS u16_i16_plus_1, u16 >= i32 AS u16_i32, u16 >= i32 + INT32(1) AS u16_i32_plus_1, u16 >= i64 AS u16_i64, u16 >= i64 + INT64(1) AS u16_i64_plus_1, u16 >= u8 AS u16_u8, u16 >= u8 + UINT8(1) AS u16_u8_plus_1, u16 >= i16 AS u16_u16, u16 >= i16 + INT16(1) AS u16_u16_plus_1, u16 >= u32 AS u16_u32, u16 >= u32 + UINT32(1) AS u16_u32_plus_1, u16 >= u64 AS u16_u64, u16 >= u64 + UINT64(1) AS u16_u64_plus_1, u16 >= f32 AS u16_f32, u16 >= f32 + FLOAT32(1) AS u16_f32_plus_1, u16 >= f64 AS u16_f64, u16 >= f64 + FLOAT64(1) AS u16_f64_plus_1 FROM FunctionGreaterEquals_stream INTO CHECKSUM"
    "test_name": "function/comparison/FunctionGreaterEquals.test"
  - "query": "SELECT u32 >= i8 AS u32_i8, u32 >= i8 + INT8(1) AS u32_i8_plus_1, u32 >= i16 AS u32_i16, u32 >= i16 + INT16(1) AS u32_i16_plus_1, u32 >= i32 AS u32_i32, u32 >= i32 + INT32(1) AS u32_i32_plus_1, u32 >= i64 AS u32_i64, u32 >= i64 + INT64(1) AS u32_i64_plus_1, u32 >= u8 AS u32_u8, u32 >= u8 + UINT8(1) AS u32_u8_plus_1, u32 >= u16 AS u32_u16, u32 >= u16 + UINT16(1) AS u32_u16_plus_1, u32 >= u32 AS u32_u32, u32 >= u32 + UINT32(1) AS u32_u32_plus_1, u32 >= u64 AS u32_u64, u32 >= u64 + UINT64(1) AS u32_u64_plus_1, u32 >= f32 AS u32_f32, u32 >= f32 + FLOAT32(1) AS u32_f32_plus_1, u32 >= f64 AS u32_f64, u32 >= f64 + FLOAT64(1) AS u32_f64_plus_1 FROM FunctionGreaterEquals_stream INTO CHECKSUM"
    "test_name": "function/comparison/FunctionGreaterEquals.test"
  - "query": "SELECT u64 >= i8 AS u64_i8, u64 >= i8 + INT8(1) AS u64_i8_plus_1, u64 >= i16 AS u64_i16, u64 >= i16 + INT16(1) AS u64_i16_plus_1, u64 >= i32 AS u64_i32, u64 >= i32 + INT32(1) AS u64_i32_plus_1, u64 >= i64 AS u64_i64, u64 >= i64 + INT64(1) AS u64_i64_plus_1, u64 >= u8 AS u64_u8, u64 >= u8 + UINT8(1) AS u64_u8_plus_1, u64 >= u16 AS u64_u16, u64 >= u16 + UINT16(1) AS u64_u16_plus_1, u64 >= u32 AS u64_u32, u64 >= u32 + UINT32(1) AS u64_u32_plus_1, u64 >= u64 AS u64_u64, u64 >= u64 + UINT64(1) AS u64_u64_plus_1, u64 >= f32 AS u64_f32, u64 >= f32 + FLOAT32(1) AS u64_f32_plus_1, u64 >= f64 AS u64_f64, u64 >= f64 + FLOAT64(1) AS u64_f64_plus_1 FROM FunctionGreaterEquals_stream INTO CHECKSUM"
    "test_name": "function/comparison/FunctionGreaterEquals.test"
  "FunctionLess":
  - "query": "SELECT i8 < i8 AS i8_i8, i8 < i8 + INT8(1) AS i8_i8_plus_1, i8 < i16 AS i8_i16, i8 < i16 + INT16(1) AS i8_i16_plus_1, i8 < i32 AS i8_i32, i8 < i32 + INT32(1) AS i8_i32_plus_1, i8 < i64 AS i8_i64, i8 < i64 + INT64(1) AS i8_i64_plus_1, i8 < u8  AS i8_u8, i8 < u8 + UINT8(1) AS i8_u8_plus_1, i8 < u16 AS i8_u16, i8 < u16 + UINT16(1) AS i8_u16_plus_1, i8 < u32 AS i8_u32, i8 < u32 + UINT32(1) AS i8_u32_plus_1, i8 < u64 AS i8_u64, i8 < u64 + UINT64(1) AS i8_u64_plus_1, i8 < f32 AS i8_f32, i8 < f32 + FLOAT32(1) AS i8_f32_plus_1, i8 < f64 AS i8_f64, i8 < f64 + FLOAT64(1) AS i8_f64_plus_1 FROM FunctionLess_stream INTO CHECKSUM"
    "test_name": "function/comparison/FunctionLess.test"
  - "query": "SELECT i16 < i8 AS i16_i8, i16 < i8 + INT8(1) AS i16_i8_plus_1, i16 < i16 AS i16_i16, i16 < i16 + INT16(1) AS i16_i16_plus_1, i16 < i32 AS i16_i32, i16 < i32 + INT32(1) AS i16_i32_plus_1, i16 < i64 AS i16_i64, i16 < i64 + INT64(1) AS i16_i64_plus_1, i16 < u8 AS i16_u8, i16 < u8 + UINT8(1) AS i16_u8_plus_1, u16 < i16 AS i16_u16, u16 < i16 + INT16(1) AS i16_u16_plus_1, i16 < u32 AS i16_u32, i16 < u32 + UINT32(1) AS i16_u32_plus_1, i16 < u64 AS i16_u64, i16 < u64 + UINT64(1) AS i16_u64_plus_1, i16 < f32 AS i16_f32, i16 < f32 + FLOAT32(1) AS i16_f32_plus_1, i16 < f64 AS i16_f64, i16 < f64 + FLOAT64(1) AS i16_f64_plus_1 FROM FunctionLess_stream INTO CHECKSUM"
    "test_name": "function/comparison/FunctionLess.test"
  - "query": "SELECT i32 < i8 AS i32_i8, i32 < i8 + INT8(1) AS i32_i8_plus_1, i32 < i16 AS i32_i16, i32 < i16 + INT16(1) AS i32_i16_plus_1, i32 < i32 AS i32_i32, i32 < i32 + INT32(1) AS i32_i32_plus_1, i32 < i64 AS i32_i64, i32 < i64 + INT64(1) AS i32_i64_plus_1, i32 < u8 AS i32_u8, i32 < u8 + UINT8(1) AS i32_u8_plus_1, i32 < u16 AS i32_u16, i32 < u16 + UINT16(1) AS i32_u16_plus_1, i32 < u32 AS i32_u32, i32 < u32 + UINT32(1) AS i32_u32_plus_1, i32 < u64 AS i32_u64, i32 < u64 + UINT64(1) AS i32_u64_plus_1, i32 < f32 AS i32_f32, i32 < f32 + FLOAT32(1) AS i32_f32_plus_1, i32 < f64 AS i32_f64, i32 < f64 + FLOAT64(1) AS i32_f64_plus_1 FROM FunctionLess_stream INTO CHECKSUM"
    "test_name": "function/comparison/FunctionLess.test"
  - "query": "SELECT i64 < i8 AS i64_i8, i64 < i8 + INT8(1) AS i64_i8_plus_1, i64 < i16 AS i64_i16, i64 < i16 + INT16(1) AS i64_i16_plus_1, i64 < i32 AS i64_i32, i64 < i32 + INT32(1) AS i64_i32_plus_1, i64 < i64 AS i64_i64, i64 < i64 + INT64(1) AS i64_i64_plus_1, i64 < u8 AS i64_u8, i64 < u8 + UINT8(1) AS i64_u8_plus_1, i64 < u16 AS i64_u16, i64 < u16 + UINT16(1) AS i64_u16_plus_1, i64 < u32 AS i64_u32, i64 < u32 + UINT32(1) AS i64_u32_plus_1, i64 < u64 AS i64_u64, i64 < u64 + UINT64(1) AS i64_u64_plus_1, i64 < f32 AS i64_f32, i64 < f32 + FLOAT32(1) AS i64_f32_plus_1, i64 < f64 AS i64_f64, i64 < f64 + FLOAT64(1) AS i64_f64_plus_1 FROM FunctionLess_stream INTO CHECKSUM"
    "test_name": "function/comparison/FunctionLess.test"
  - "query": "SELECT u8 < i8 AS u8_i8, u8 < i8 + INT8(1) AS u8_i8_plus_1, u8 < i16 AS u8_i16, u8 < i16 + INT16(1) AS u8_i16_plus_1, u8 < i32 AS u8_i32, u8 < i32 + INT32(1) AS u8_i32_plus_1, u8 < i64 AS u8_i64, u8 < i64 + INT64(1) AS u8_i64_plus_1, u8 < u8  AS u8_u8, u8 < u8 + UINT8(1) AS u8_u8_plus_1, u8 < u16 AS u8_u16, u8 < u16 + UINT16(1) AS u8_u16_plus_1, u8 < u32 AS u8_u32, u8 < u32 + UINT32(1) AS u8_u32_plus_1, u8 < u64 AS u8_u64, u8 < u64 + UINT64(1) AS u8_u64_plus_1, u8 < f32 AS u8_f32, u8 < f32 + FLOAT32(1) AS u8_f32_plus_1, u8 < f64 AS u8_f64, u8 < f64 + FLOAT64(1) AS u8_f64_plus_1 FROM FunctionLess_stream INTO CHECKSUM"
    "test_name": "function/comparison/FunctionLess.test"
  - "query": "SELECT u16 < i8 AS u16_i8, u16 < i8 + INT8(1) AS u16_i8_plus_1, u16 < i16 AS u16_i16, u16 < i16 + INT16(1) AS u16_i16_plus_1, u16 < i32 AS u16_i32, u16 < i32 + INT32(1) AS u16_i32_plus_1, u16 < i64 AS u16_i64, u16 < i64 + INT64(1) AS u16_i64_plus_1, u16 < u8 AS u16_u8, u16 < u8 + UINT8(1) AS u16_u8_plus_1, u16 < i16 AS u16_u16, u16 < i16 + INT16(1) AS u16_u16_plus_1, u16 < u32 AS u16_u32, u16 < u32 + UINT32(1) AS u16_u32_plus_1, u16 < u64 AS u16_u64, u16 < u64 + UINT64(1) AS u16_u64_plus_1, u16 < f32 AS u16_f32, u16 < f32 + FLOAT32(1) AS u16_f32_plus_1, u16 < f64 AS u16_f64, u16 < f64 + FLOAT64(1) AS u16_f64_plus_1 FROM FunctionLess_stream INTO CHECKSUM"
    "test_name": "function/comparison/FunctionLess.test"
  - "query": "SELECT u32 < i8 AS u32_i8, u32 < i8 + INT8(1) AS u32_i8_plus_1, u32 < i16 AS u32_i16, u32 < i16 + INT16(1) AS u32_i16_plus_1, u32 < i32 AS u32_i32, u32 < i32 + INT32(1) AS u32_i32_plus_1, u32 < i64 AS u32_i64, u32 < i64 + INT64(1) AS u32_i64_plus_1, u32 < u8 AS u32_u8, u32 < u8 + UINT8(1) AS u32_u8_plus_1, u32 < u16 AS u32_u16, u32 < u16 + UINT16(1) AS u32_u16_plus_1, u32 < u32 AS u32_u32, u32 < u32 + UINT32(1) AS u32_u32_plus_1, u32 < u64 AS u32_u64, u32 < u64 + UINT64(1) AS u32_u64_plus_1, u32 < f32 AS u32_f32, u32 < f32 + FLOAT32(1) AS u32_f32_plus_1, u32 < f64 AS u32_f64, u32 < f64 + FLOAT64(1) AS u32_f64_plus_1 FROM FunctionLess_stream INTO CHECKSUM"
    "test_name": "function/comparison/FunctionLess.test"
  - "query": "SELECT u64 < i8 AS u64_i8, u64 < i8 + INT8(1) AS u64_i8_plus_1, u64 < i16 AS u64_i16, u64 < i16 + INT16(1) AS u64_i16_plus_1, u64 < i32 AS u64_i32, u64 < i32 + INT32(1) AS u64_i32_plus_1, u64 < i64 AS u64_i64, u64 < i64 + INT64(1) AS u64_i64_plus_1, u64 < u8 AS u64_u8, u64 < u8 + UINT8(1) AS u64_u8_plus_1, u64 < u16 AS u64_u16, u64 < u16 + UINT16(1) AS u64_u16_plus_1, u64 < u32 AS u64_u32, u64 < u32 + UINT32(1) AS u64_u32_plus_1, u64 < u64 AS u64_u64, u64 < u64 + UINT64(1) AS u64_u64_plus_1, u64 < f32 AS u64_f32, u64 < f32 + FLOAT32(1) AS u64_f32_plus_1, u64 < f64 AS u64_f64, u64 < f64 + FLOAT64(1) AS u64_f64_plus_1 FROM FunctionLess_stream INTO CHECKSUM"
    "test_name": "function/comparison/FunctionLess.test"
  - "query": "SELECT i8 < i8 AS i8_i8, i8 < i8 + INT8(1) AS i8_i8_plus_1, i8 < i16 AS i8_i16, i8 < i16 + INT16(1) AS i8_i16_plus_1, i8 < i32 AS i8_i32, i8 < i32 + INT32(1) AS i8_i32_plus_1, i8 < i64 AS i8_i64, i8 < i64 + INT64(1) AS i8_i64_plus_1, i8 < u8  AS i8_u8, i8 < u8 + UINT8(1) AS i8_u8_plus_1, i8 < u16 AS i8_u16, i8 < u16 + UINT16(1) AS i8_u16_plus_1, i8 < u32 AS i8_u32, i8 < u32 + UINT32(1) AS i8_u32_plus_1, i8 < u64 AS i8_u64, i8 < u64 + UINT64(1) AS i8_u64_plus_1, i8 < f32 AS i8_f32, i8 < f32 + FLOAT32(1) AS i8_f32_plus_1, i8 < f64 AS i8_f64, i8 < f64 + FLOAT64(1) AS i8_f64_plus_1 FROM FunctionLess_stream INTO CHECKSUM"
    "test_name": "function/comparison/FunctionLess.test"
  - "query": "SELECT i16 < i8 AS i16_i8, i16 < i8 + INT8(1) AS i16_i8_plus_1, i16 < i16 AS i16_i16, i16 < i16 + INT16(1) AS i16_i16_plus_1, i16 < i32 AS i16_i32, i16 < i32 + INT32(1) AS i16_i32_plus_1, i16 < i64 AS i16_i64, i16 < i64 + INT64(1) AS i16_i64_plus_1, i16 < u8 AS i16_u8, i16 < u8 + UINT8(1) AS i16_u8_plus_1, u16 < i16 AS i16_u16, u16 < i16 + INT16(1) AS i16_u16_plus_1, i16 < u32 AS i16_u32, i16 < u32 + UINT32(1) AS i16_u32_plus_1, i16 < u64 AS i16_u64, i16 < u64 + UINT64(1) AS i16_u64_plus_1, i16 < f32 AS i16_f32, i16 < f32 + FLOAT32(1) AS i16_f32_plus_1, i16 < f64 AS i16_f64, i16 < f64 + FLOAT64(1) AS i16_f64_plus_1 FROM FunctionLess_stream INTO CHECKSUM"
    "test_name": "function/comparison/FunctionLess.test"
  - "query": "SELECT i32 < i8 AS i32_i8, i32 < i8 + INT8(1) AS i32_i8_plus_1, i32 < i16 AS i32_i16, i32 < i16 + INT16(1) AS i32_i16_plus_1, i32 < i32 AS i32_i32, i32 < i32 + INT32(1) AS i32_i32_plus_1, i32 < i64 AS i32_i64, i32 < i64 + INT64(1) AS i32_i64_plus_1, i32 < u8 AS i32_u8, i32 < u8 + UINT8(1) AS i32_u8_plus_1, i32 < u16 AS i32_u16, i32 < u16 + UINT16(1) AS i32_u16_plus_1, i32 < u32 AS i32_u32, i32 < u32 + UINT32(1) AS i32_u32_plus_1, i32 < u64 AS i32_u64, i32 < u64 + UINT64(1) AS i32_u64_plus_1, i32 < f32 AS i32_f32, i32 < f32 + FLOAT32(1) AS i32_f32_plus_1, i32 < f64 AS i32_f64, i32 < f64 + FLOAT64(1) AS i32_f64_plus_1 FROM FunctionLess_stream INTO CHECKSUM"
    "test_name": "function/comparison/FunctionLess.test"
  - "query": "SELECT i64 < i8 AS i64_i8, i64 < i8 + INT8(1) AS i64_i8_plus_1, i64 < i16 AS i64_i16, i64 < i16 + INT16(1) AS i64_i16_plus_1, i64 < i32 AS i64_i32, i64 < i32 + INT32(1) AS i64_i32_plus_1, i64 < i64 AS i64_i64, i64 < i64 + INT64(1) AS i64_i64_plus_1, i64 < u8 AS i64_u8, i64 < u8 + UINT8(1) AS i64_u8_plus_1, i64 < u16 AS i64_u16, i64 < u16 + UINT16(1) AS i64_u16_plus_1, i64 < u32 AS i64_u32, i64 < u32 + UINT32(1) AS i64_u32_plus_1, i64 < u64 AS i64_u64, i64 < u64 + UINT64(1) AS i64_u64_plus_1, i64 < f32 AS i64_f32, i64 < f32 + FLOAT32(1) AS i64_f32_plus_1, i64 < f64 AS i64_f64, i64 < f64 + FLOAT64(1) AS i64_f64_plus_1 FROM FunctionLess_stream INTO CHECKSUM"
    "test_name": "function/comparison/FunctionLess.test"
  - "query": "SELECT u8 < i8 AS u8_i8, u8 < i8 + INT8(1) AS u8_i8_plus_1, u8 < i16 AS u8_i16, u8 < i16 + INT16(1) AS u8_i16_plus_1, u8 < i32 AS u8_i32, u8 < i32 + INT32(1) AS u8_i32_plus_1, u8 < i64 AS u8_i64, u8 < i64 + INT64(1) AS u8_i64_plus_1, u8 < u8  AS u8_u8, u8 < u8 + UINT8(1) AS u8_u8_plus_1, u8 < u16 AS u8_u16, u8 < u16 + UINT16(1) AS u8_u16_plus_1, u8 < u32 AS u8_u32, u8 < u32 + UINT32(1) AS u8_u32_plus_1, u8 < u64 AS u8_u64, u8 < u64 + UINT64(1) AS u8_u64_plus_1, u8 < f32 AS u8_f32, u8 < f32 + FLOAT32(1) AS u8_f32_plus_1, u8 < f64 AS u8_f64, u8 < f64 + FLOAT64(1) AS u8_f64_plus_1 FROM FunctionLess_stream INTO CHECKSUM"
    "test_name": "function/comparison/FunctionLess.test"
  - "query": "SELECT u16 < i8 AS u16_i8, u16 < i8 + INT8(1) AS u16_i8_plus_1, u16 < i16 AS u16_i16, u16 < i16 + INT16(1) AS u16_i16_plus_1, u16 < i32 AS u16_i32, u16 < i32 + INT32(1) AS u16_i32_plus_1, u16 < i64 AS u16_i64, u16 < i64 + INT64(1) AS u16_i64_plus_1, u16 < u8 AS u16_u8, u16 < u8 + UINT8(1) AS u16_u8_plus_1, u16 < i16 AS u16_u16, u16 < i16 + INT16(1) AS u16_u16_plus_1, u16 < u32 AS u16_u32, u16 < u32 + UINT32(1) AS u16_u32_plus_1, u16 < u64 AS u16_u64, u16 < u64 + UINT64(1) AS u16_u64_plus_1, u16 < f32 AS u16_f32, u16 < f32 + FLOAT32(1) AS u16_f32_plus_1, u16 < f64 AS u16_f64, u16 < f64 + FLOAT64(1) AS u16_f64_plus_1 FROM FunctionLess_stream INTO CHECKSUM"
    "test_name": "function/comparison/FunctionLess.test"
  - "query": "SELECT u32 < i8 AS u32_i8, u32 < i8 + INT8(1) AS u32_i8_plus_1, u32 < i16 AS u32_i16, u32 < i16 + INT16(1) AS u32_i16_plus_1, u32 < i32 AS u32_i32, u32 < i32 + INT32(1) AS u32_i32_plus_1, u32 < i64 AS u32_i64, u32 < i64 + INT64(1) AS u32_i64_plus_1, u32 < u8 AS u32_u8, u32 < u8 + UINT8(1) AS u32_u8_plus_1, u32 < u16 AS u32_u16, u32 < u16 + UINT16(1) AS u32_u16_plus_1, u32 < u32 AS u32_u32, u32 < u32 + UINT32(1) AS u32_u32_plus_1, u32 < u64 AS u32_u64, u32 < u64 + UINT64(1) AS u32_u64_plus_1, u32 < f32 AS u32_f32, u32 < f32 + FLOAT32(1) AS u32_f32_plus_1, u32 < f64 AS u32_f64, u32 < f64 + FLOAT64(1) AS u32_f64_plus_1 FROM FunctionLess_stream INTO CHECKSUM"
    "test_name": "function/comparison/FunctionLess.test"
  - "query": "SELECT u64 < i8 AS u64_i8, u64 < i8 + INT8(1) AS u64_i8_plus_1, u64 < i16 AS u64_i16, u64 < i16 + INT16(1) AS u64_i16_plus_1, u64 < i32 AS u64_i32, u64 < i32 + INT32(1) AS u64_i32_plus_1, u64 < i64 AS u64_i64, u64 < i64 + INT64(1) AS u64_i64_plus_1, u64 < u8 AS u64_u8, u64 < u8 + UINT8(1) AS u64_u8_plus_1, u64 < u16 AS u64_u16, u64 < u16 + UINT16(1) AS u64_u16_plus_1, u64 < u32 AS u64_u32, u64 < u32 + UINT32(1) AS u64_u32_plus_1, u64 < u64 AS u64_u64, u64 < u64 + UINT64(1) AS u64_u64_plus_1, u64 < f32 AS u64_f32, u64 < f32 + FLOAT32(1) AS u64_f32_plus_1, u64 < f64 AS u64_f64, u64 < f64 + FLOAT64(1) AS u64_f64_plus_1 FROM FunctionLess_stream INTO CHECKSUM"
    "test_name": "function/comparison/FunctionLess.test"
  "FunctionLessEquals":
  - "query": "SELECT i8 <= i8 AS i8_i8, i8 <= i8 + INT8(1) AS i8_i8_plus_1, i8 <= i16 AS i8_i16, i8 <= i16 + INT16(1) AS i8_i16_plus_1, i8 <= i32 AS i8_i32, i8 <= i32 + INT32(1) AS i8_i32_plus_1, i8 <= i64 AS i8_i64, i8 <= i64 + INT64(1) AS i8_i64_plus_1, i8 <= u8  AS i8_u8, i8 <= u8 + UINT8(1) AS i8_u8_plus_1, i8 <= u16 AS i8_u16, i8 <= u16 + UINT16(1) AS i8_u16_plus_1, i8 <= u32 AS i8_u32, i8 <= u32 + UINT32(1) AS i8_u32_plus_1, i8 <= u64 AS i8_u64, i8 <= u64 + UINT64(1) AS i8_u64_plus_1, i8 <= f32 AS i8_f32, i8 <= f32 + FLOAT32(1) AS i8_f32_plus_1, i8 <= f64 AS i8_f64, i8 <= f64 + FLOAT64(1) AS i8_f64_plus_1 FROM FunctionLessEquals_stream INTO CHECKSUM"
    "test_name": "function/comparison/FunctionLessEquals.test"
  - "query": "SELECT i16 <= i8 AS i16_i8, i16 <= i8 + INT8(1) AS i16_i8_plus_1, i16 <= i16 AS i16_i16, i16 <= i16 + INT16(1) AS i16_i16_plus_1, i16 <= i32 AS i16_i32, i16 <= i32 + INT32(1) AS i16_i32_plus_1, i16 <= i64 AS i16_i64, i16 <= i64 + INT64(1) AS i16_i64_plus_1, i16 <= u8 AS i16_u8, i16 <= u8 + UINT8(1) AS i16_u8_plus_1, u16 <= i16 AS i16_u16, u16 <= i16 + INT16(1) AS i16_u16_plus_1, i16 <= u32 AS i16_u32, i16 <= u32 + UINT32(1) AS i16_u32_plus_1, i16 <= u64 AS i16_u64, i16 <= u64 + UINT64(1) AS i16_u64_plus_1, i16 <= f32 AS i16_f32, i16 <= f32 + FLOAT32(1) AS i16_f32_plus_1, i16 <= f64 AS i16_f64, i16 <= f64 + FLOAT64(1) AS i16_f64_plus_1 FROM FunctionLessEquals_stream INTO CHECKSUM"
    "test_name": "function/comparison/FunctionLessEquals.test"
  - "query": "SELECT i32 <= i8 AS i32_i8, i32 <= i8 + INT8(1) AS i32_i8_plus_1, i32 <= i16 AS i32_i16, i32 <= i16 + INT16(1) AS i32_i16_plus_1, i32 <= i32 AS i32_i32, i32 <= i32 + INT32(1) AS i32_i32_plus_1, i32 <= i64 AS i32_i64, i32 <= i64 + INT64(1) AS i32_i64_plus_1, i32 <= u8 AS i32_u8, i32 <= u8 + UINT8(1) AS i32_u8_plus_1, i32 <= u16 AS i32_u16, i32 <= u16 + UINT16(1) AS i32_u16_plus_1, i32 <= u32 AS i32_u32, i32 <= u32 + UINT32(1) AS i32_u32_plus_1, i32 <= u64 AS i32_u64, i32 <= u64 + UINT64(1) AS i32_u64_plus_1, i32 <= f32 AS i32_f32, i32 <= f32 + FLOAT32(1) AS i32_f32_plus_1, i32 <= f64 AS i32_f64, i32 <= f64 + FLOAT64(1) AS i32_f64_plus_1 FROM FunctionLessEquals_stream INTO CHECKSUM"
    "test_name": "function/comparison/FunctionLessEquals.test"
  - "query": "SELECT i64 <= i8 AS i64_i8, i64 <= i8 + INT8(1) AS i64_i8_plus_1, i64 <= i16 AS i64_i16, i64 <= i16 + INT16(1) AS i64_i16_plus_1, i64 <= i32 AS i64_i32, i64 <= i32 + INT32(1) AS i64_i32_plus_1, i64 <= i64 AS i64_i64, i64 <= i64 + INT64(1) AS i64_i64_plus_1, i64 <= u8 AS i64_u8, i64 <= u8 + UINT8(1) AS i64_u8_plus_1, i64 <= u16 AS i64_u16, i64 <= u16 + UINT16(1) AS i64_u16_plus_1, i64 <= u32 AS i64_u32, i64 <= u32 + UINT32(1) AS i64_u32_plus_1, i64 <= u64 AS i64_u64, i64 <= u64 + UINT64(1) AS i64_u64_plus_1, i64 <= f32 AS i64_f32, i64 <= f32 + FLOAT32(1) AS i64_f32_plus_1, i64 <= f64 AS i64_f64, i64 <= f64 + FLOAT64(1) AS i64_f64_plus_1 FROM FunctionLessEquals_stream INTO CHECKSUM"
    "test_name": "function/comparison/FunctionLessEquals.test"
  - "query": "SELECT u8 <= i8 AS u8_i8, u8 <= i8 + INT8(1) AS u8_i8_plus_1, u8 <= i16 AS u8_i16, u8 <= i16 + INT16(1) AS u8_i16_plus_1, u8 <= i32 AS u8_i32, u8 <= i32 + INT32(1) AS u8_i32_plus_1, u8 <= i64 AS u8_i64, u8 <= i64 + INT64(1) AS u8_i64_plus_1, u8 <= u8  AS u8_u8, u8 <= u8 + UINT8(1) AS u8_u8_plus_1, u8 <= u16 AS u8_u16, u8 <= u16 + UINT16(1) AS u8_u16_plus_1, u8 <= u32 AS u8_u32, u8 <= u32 + UINT32(1) AS u8_u32_plus_1, u8 <= u64 AS u8_u64, u8 <= u64 + UINT64(1) AS u8_u64_plus_1, u8 <= f32 AS u8_f32, u8 <= f32 + FLOAT32(1) AS u8_f32_plus_1, u8 <= f64 AS u8_f64, u8 <= f64 + FLOAT64(1) AS u8_f64_plus_1 FROM FunctionLessEquals_stream INTO CHECKSUM"
    "test_name": "function/comparison/FunctionLessEquals.test"
  - "query": "SELECT u16 <= i8 AS u16_i8, u16 <= i8 + INT8(1) AS u16_i8_plus_1, u16 <= i16 AS u16_i16, u16 <= i16 + INT16(1) AS u16_i16_plus_1, u16 <= i32 AS u16_i32, u16 <= i32 + INT32(1) AS u16_i32_plus_1, u16 <= i64 AS u16_i64, u16 <= i64 + INT64(1) AS u16_i64_plus_1, u16 <= u8 AS u16_u8, u16 <= u8 + UINT8(1) AS u16_u8_plus_1, u16 <= i16 AS u16_u16, u16 <= i16 + INT16(1) AS u16_u16_plus_1, u16 <= u32 AS u16_u32, u16 <= u32 + UINT32(1) AS u16_u32_plus_1, u16 <= u64 AS u16_u64, u16 <= u64 + UINT64(1) AS u16_u64_plus_1, u16 <= f32 AS u16_f32, u16 <= f32 + FLOAT32(1) AS u16_f32_plus_1, u16 <= f64 AS u16_f64, u16 <= f64 + FLOAT64(1) AS u16_f64_plus_1 FROM FunctionLessEquals_stream INTO CHECKSUM"
    "test_name": "function/comparison/FunctionLessEquals.test"
  - "query": "SELECT u32 <= i8 AS u32_i8, u32 <= i8 + INT8(1) AS u32_i8_plus_1, u32 <= i16 AS u32_i16, u32 <= i16 + INT16(1) AS u32_i16_plus_1, u32 <= i32 AS u32_i32, u32 <= i32 + INT32(1) AS u32_i32_plus_1, u32 <= i64 AS u32_i64, u32 <= i64 + INT64(1) AS u32_i64_plus_1, u32 <= u8 AS u32_u8, u32 <= u8 + UINT8(1) AS u32_u8_plus_1, u32 <= u16 AS u32_u16, u32 <= u16 + UINT16(1) AS u32_u16_plus_1, u32 <= u32 AS u32_u32, u32 <= u32 + UINT32(1) AS u32_u32_plus_1, u32 <= u64 AS u32_u64, u32 <= u64 + UINT64(1) AS u32_u64_plus_1, u32 <= f32 AS u32_f32, u32 <= f32 + FLOAT32(1) AS u32_f32_plus_1, u32 <= f64 AS u32_f64, u32 <= f64 + FLOAT64(1) AS u32_f64_plus_1 FROM FunctionLessEquals_stream INTO CHECKSUM"
    "test_name": "function/comparison/FunctionLessEquals.test"
  - "query": "SELECT u64 <= i8 AS u64_i8, u64 <= i8 + INT8(1) AS u64_i8_plus_1, u64 <= i16 AS u64_i16, u64 <= i16 + INT16(1) AS u64_i16_plus_1, u64 <= i32 AS u64_i32, u64 <= i32 + INT32(1) AS u64_i32_plus_1, u64 <= i64 AS u64_i64, u64 <= i64 + INT64(1) AS u64_i64_plus_1, u64 <= u8 AS u64_u8, u64 <= u8 + UINT8(1) AS u64_u8_plus_1, u64 <= u16 AS u64_u16, u64 <= u16 + UINT16(1) AS u64_u16_plus_1, u64 <= u32 AS u64_u32, u64 <= u32 + UINT32(1) AS u64_u32_plus_1, u64 <= u64 AS u64_u64, u64 <= u64 + UINT64(1) AS u64_u64_plus_1, u64 <= f32 AS u64_f32, u64 <= f32 + FLOAT32(1) AS u64_f32_plus_1, u64 <= f64 AS u64_f64, u64 <= f64 + FLOAT64(1) AS u64_f64_plus_1 FROM FunctionLessEquals_stream INTO CHECKSUM"
    "test_name": "function/comparison/FunctionLessEquals.test"
  - "query": "SELECT i8 <= i8 AS i8_i8, i8 <= i8 + INT8(1) AS i8_i8_plus_1, i8 <= i16 AS i8_i16, i8 <= i16 + INT16(1) AS i8_i16_plus_1, i8 <= i32 AS i8_i32, i8 <= i32 + INT32(1) AS i8_i32_plus_1, i8 <= i64 AS i8_i64, i8 <= i64 + INT64(1) AS i8_i64_plus_1, i8 <= u8  AS i8_u8, i8 <= u8 + UINT8(1) AS i8_u8_plus_1, i8 <= u16 AS i8_u16, i8 <= u16 + UINT16(1) AS i8_u16_plus_1, i8 <= u32 AS i8_u32, i8 <= u32 + UINT32(1) AS i8_u32_plus_1, i8 <= u64 AS i8_u64, i8 <= u64 + UINT64(1) AS i8_u64_plus_1, i8 <= f32 AS i8_f32, i8 <= f32 + FLOAT32(1) AS i8_f32_plus_1, i8 <= f64 AS i8_f64, i8 <= f64 + FLOAT64(1) AS i8_f64_plus_1 FROM FunctionLessEquals_stream INTO CHECKSUM"
    "test_name": "function/comparison/FunctionLessEquals.test"
  - "query": "SELECT i16 <= i8 AS i16_i8, i16 <= i8 + INT8(1) AS i16_i8_plus_1, i16 <= i16 AS i16_i16, i16 <= i16 + INT16(1) AS i16_i16_plus_1, i16 <= i32 AS i16_i32, i16 <= i32 + INT32(1) AS i16_i32_plus_1, i16 <= i64 AS i16_i64, i16 <= i64 + INT64(1) AS i16_i64_plus_1, i16 <= u8 AS i16_u8, i16 <= u8 + UINT8(1) AS i16_u8_plus_1, u16 <= i16 AS i16_u16, u16 <= i16 + INT16(1) AS i16_u16_plus_1, i16 <= u32 AS i16_u32, i16 <= u32 + UINT32(1) AS i16_u32_plus_1, i16 <= u64 AS i16_u64, i16 <= u64 + UINT64(1) AS i16_u64_plus_1, i16 <= f32 AS i16_f32, i16 <= f32 + FLOAT32(1) AS i16_f32_plus_1, i16 <= f64 AS i16_f64, i16 <= f64 + FLOAT64(1) AS i16_f64_plus_1 FROM FunctionLessEquals_stream INTO CHECKSUM"
    "test_name": "function/comparison/FunctionLessEquals.test"
  - "query": "SELECT i32 <= i8 AS i32_i8, i32 <= i8 + INT8(1) AS i32_i8_plus_1, i32 <= i16 AS i32_i16, i32 <= i16 + INT16(1) AS i32_i16_plus_1, i32 <= i32 AS i32_i32, i32 <= i32 + INT32(1) AS i32_i32_plus_1, i32 <= i64 AS i32_i64, i32 <= i64 + INT64(1) AS i32_i64_plus_1, i32 <= u8 AS i32_u8, i32 <= u8 + UINT8(1) AS i32_u8_plus_1, i32 <= u16 AS i32_u16, i32 <= u16 + UINT16(1) AS i32_u16_plus_1, i32 <= u32 AS i32_u32, i32 <= u32 + UINT32(1) AS i32_u32_plus_1, i32 <= u64 AS i32_u64, i32 <= u64 + UINT64(1) AS i32_u64_plus_1, i32 <= f32 AS i32_f32, i32 <= f32 + FLOAT32(1) AS i32_f32_plus_1, i32 <= f64 AS i32_f64, i32 <= f64 + FLOAT64(1) AS i32_f64_plus_1 FROM FunctionLessEquals_stream INTO CHECKSUM"
    "test_name": "function/comparison/FunctionLessEquals.test"
  - "query": "SELECT i64 <= i8 AS i64_i8, i64 <= i8 + INT8(1) AS i64_i8_plus_1, i64 <= i16 AS i64_i16, i64 <= i16 + INT16(1) AS i64_i16_plus_1, i64 <= i32 AS i64_i32, i64 <= i32 + INT32(1) AS i64_i32_plus_1, i64 <= i64 AS i64_i64, i64 <= i64 + INT64(1) AS i64_i64_plus_1, i64 <= u8 AS i64_u8, i64 <= u8 + UINT8(1) AS i64_u8_plus_1, i64 <= u16 AS i64_u16, i64 <= u16 + UINT16(1) AS i64_u16_plus_1, i64 <= u32 AS i64_u32, i64 <= u32 + UINT32(1) AS i64_u32_plus_1, i64 <= u64 AS i64_u64, i64 <= u64 + UINT64(1) AS i64_u64_plus_1, i64 <= f32 AS i64_f32, i64 <= f32 + FLOAT32(1) AS i64_f32_plus_1, i64 <= f64 AS i64_f64, i64 <= f64 + FLOAT64(1) AS i64_f64_plus_1 FROM FunctionLessEquals_stream INTO CHECKSUM"
    "test_name": "function/comparison/FunctionLessEquals.test"
  - "query": "SELECT u8 <= i8 AS u8_i8, u8 <= i8 + INT8(1) AS u8_i8_plus_1, u8 <= i16 AS u8_i16, u8 <= i16 + INT16(1) AS u8_i16_plus_1, u8 <= i32 AS u8_i32, u8 <= i32 + INT32(1) AS u8_i32_plus_1, u8 <= i64 AS u8_i64, u8 <= i64 + INT64(1) AS u8_i64_plus_1, u8 <= u8  AS u8_u8, u8 <= u8 + UINT8(1) AS u8_u8_plus_1, u8 <= u16 AS u8_u16, u8 <= u16 + UINT16(1) AS u8_u16_plus_1, u8 <= u32 AS u8_u32, u8 <= u32 + UINT32(1) AS u8_u32_plus_1, u8 <= u64 AS u8_u64, u8 <= u64 + UINT64(1) AS u8_u64_plus_1, u8 <= f32 AS u8_f32, u8 <= f32 + FLOAT32(1) AS u8_f32_plus_1, u8 <= f64 AS u8_f64, u8 <= f64 + FLOAT64(1) AS u8_f64_plus_1 FROM FunctionLessEquals_stream INTO CHECKSUM"
    "test_name": "function/comparison/FunctionLessEquals.test"
  - "query": "SELECT u16 <= i8 AS u16_i8, u16 <= i8 + INT8(1) AS u16_i8_plus_1, u16 <= i16 AS u16_i16, u16 <= i16 + INT16(1) AS u16_i16_plus_1, u16 <= i32 AS u16_i32, u16 <= i32 + INT32(1) AS u16_i32_plus_1, u16 <= i64 AS u16_i64, u16 <= i64 + INT64(1) AS u16_i64_plus_1, u16 <= u8 AS u16_u8, u16 <= u8 + UINT8(1) AS u16_u8_plus_1, u16 <= i16 AS u16_u16, u16 <= i16 + INT16(1) AS u16_u16_plus_1, u16 <= u32 AS u16_u32, u16 <= u32 + UINT32(1) AS u16_u32_plus_1, u16 <= u64 AS u16_u64, u16 <= u64 + UINT64(1) AS u16_u64_plus_1, u16 <= f32 AS u16_f32, u16 <= f32 + FLOAT32(1) AS u16_f32_plus_1, u16 <= f64 AS u16_f64, u16 <= f64 + FLOAT64(1) AS u16_f64_plus_1 FROM FunctionLessEquals_stream INTO CHECKSUM"
    "test_name": "function/comparison/FunctionLessEquals.test"
  - "query": "SELECT u32 <= i8 AS u32_i8, u32 <= i8 + INT8(1) AS u32_i8_plus_1, u32 <= i16 AS u32_i16, u32 <= i16 + INT16(1) AS u32_i16_plus_1, u32 <= i32 AS u32_i32, u32 <= i32 + INT32(1) AS u32_i32_plus_1, u32 <= i64 AS u32_i64, u32 <= i64 + INT64(1) AS u32_i64_plus_1, u32 <= u8 AS u32_u8, u32 <= u8 + UINT8(1) AS u32_u8_plus_1, u32 <= u16 AS u32_u16, u32 <= u16 + UINT16(1) AS u32_u16_plus_1, u32 <= u32 AS u32_u32, u32 <= u32 + UINT32(1) AS u32_u32_plus_1, u32 <= u64 AS u32_u64, u32 <= u64 + UINT64(1) AS u32_u64_plus_1, u32 <= f32 AS u32_f32, u32 <= f32 + FLOAT32(1) AS u32_f32_plus_1, u32 <= f64 AS u32_f64, u32 <= f64 + FLOAT64(1) AS u32_f64_plus_1 FROM FunctionLessEquals_stream INTO CHECKSUM"
    "test_name": "function/comparison/FunctionLessEquals.test"
  - "query": "SELECT u64 <= i8 AS u64_i8, u64 <= i8 + INT8(1) AS u64_i8_plus_1, u64 <= i16 AS u64_i16, u64 <= i16 + INT16(1) AS u64_i16_plus_1, u64 <= i32 AS u64_i32, u64 <= i32 + INT32(1) AS u64_i32_plus_1, u64 <= i64 AS u64_i64, u64 <= i64 + INT64(1) AS u64_i64_plus_1, u64 <= u8 AS u64_u8, u64 <= u8 + UINT8(1) AS u64_u8_plus_1, u64 <= u16 AS u64_u16, u64 <= u16 + UINT16(1) AS u64_u16_plus_1, u64 <= u32 AS u64_u32, u64 <= u32 + UINT32(1) AS u64_u32_plus_1, u64 <= u64 AS u64_u64, u64 <= u64 + UINT64(1) AS u64_u64_plus_1, u64 <= f32 AS u64_f32, u64 <= f32 + FLOAT32(1) AS u64_f32_plus_1, u64 <= f64 AS u64_f64, u64 <= f64 + FLOAT64(1) AS u64_f64_plus_1 FROM FunctionLessEquals_stream INTO CHECKSUM"
    "test_name": "function/comparison/FunctionLessEquals.test"
  "FunctionModulo":
  - "query": "SELECT i8 % i8 AS i8_i8, i8 % (i8 + INT8(1)) AS i8_i8_plus_1, i8 % i16 AS i8_i16, i8 % (i16 + INT16(1)) AS i8_i16_plus_1, i8 % i32 AS i8_i32, i8 % (i32 + INT32(1)) AS i8_i32_plus_1, i8 % i64 AS i8_i64, i8 % (i64 + INT64(1)) AS i8_i64_plus_1, i8 % u8 AS i8_u8, i8 % (u8 + UINT8(1)) AS i8_u8_plus_1, i8 % u16 AS i8_u16, i8 % (u16 + UINT16(1)) AS i8_u16_plus_1, i8 % u32 AS i8_u32, i8 % (u32 + UINT32(1)) AS i8_u32_plus_1, i8 % u64 AS i8_u64, i8 % (u64 + UINT64(1)) AS i8_u64_plus_1 FROM FunctionModulo_stream INTO CHECKSUM"
    "test_name": "function/arithmetical/FunctionModulo.test"
  - "query": "SELECT i16 % i8 AS i16_i8, i16 % (i8 + INT8(1)) AS i16_i8_plus_1, i16 % i16 AS i16_i16, i16 % (i16 + INT16(1)) AS i16_i16_plus_1, i16 % i32 AS i16_i32, i16 % (i32 + INT32(1)) AS i16_i32_plus_1, i16 % i64 AS i16_i64, i16 % (i64 + INT64(1)) AS i16_i64_plus_1, i16 % u8 AS i16_u8, i16 % (u8 + UINT8(1)) AS i16_u8_plus_1, i16 % u16 AS i16_u16, i16 % (u16 + UINT16(1)) AS i16_u16_plus_1, i16 % u32 AS i16_u32, i16 % (u32 + UINT32(1)) AS i16_u32_plus_1, i16 % u64 AS i16_u64, i16 % (u64 + UINT64(1)) AS i16_u64_plus_1 FROM FunctionModulo_stream INTO CHECKSUM"
    "test_name": "function/arithmetical/FunctionModulo.test"
  - "query": "SELECT i32 % i8 AS i32_i8, i32 % (i8 + INT8(1)) AS i32_i8_plus_1, i32 % i16 AS i32_i16, i32 % (i16 + INT16(1)) AS i32_i16_plus_1, i32 % i32 AS i32_i32, i32 % (i32 + INT32(1)) AS i32_i32_plus_1, i32 % i64 AS i32_i64, i32 % (i64 + INT64(1)) AS i32_i64_plus_1, i32 % u8 AS i32_u8, i32 % (u8 + UINT8(1)) AS i32_u8_plus_1, i32 % u16 AS i32_u16, i32 % (u16 + UINT16(1)) AS i32_u16_plus_1, i32 % u32 AS i32_u32, i32 % (u32 + UINT32(1)) AS i32_u32_plus_1, i32 % u64 AS i32_u64, i32 % (u64 + UINT64(1)) AS i32_u64_plus_1 FROM FunctionModulo_stream INTO CHECKSUM"
    "test_name": "function/arithmetical/FunctionModulo.test"
  - "query": "SELECT i64 % i8 AS i64_i8, i64 % (i8 + INT8(1)) AS i64_i8_plus_1, i64 % i16 AS i64_i16, i64 % (i16 + INT16(1)) AS i64_i16_plus_1, i64 % i32 AS i64_i32, i64 % (i32 + INT32(1)) AS i64_i32_plus_1, i64 % i64 AS i64_i64, i64 % (i64 + INT64(1)) AS i64_i64_plus_1, i64 % u8 AS i64_u8, i64 % (u8 + UINT8(1)) AS i64_u8_plus_1, i64 % u16 AS i64_u16, i64 % (u16 + UINT16(1)) AS i64_u16_plus_1, i64 % u32 AS i64_u32, i64 % (u32 + UINT32(1)) AS i64_u32_plus_1, i64 % u64 AS i64_u64, i64 % (u64 + UINT64(1)) AS i64_u64_plus_1 FROM FunctionModulo_stream INTO CHECKSUM"
    "test_name": "function/arithmetical/FunctionModulo.test"
  - "query": "SELECT u8 % i8 AS u8_i8, u8 % (i8 + INT8(1)) AS u8_i8_plus_1, u8 % i16 AS u8_i16, u8 % (i16 + INT16(1)) AS u8_i16_plus_1, u8 % i32 AS u8_i32, u8 % (i32 + INT32(1)) AS u8_i32_plus_1, u8 % i64 AS u8_i64, u8 % (i64 + INT64(1)) AS u8_i64_plus_1, u8 % u8 AS u8_u8, u8 % (u8 + UINT8(1)) AS u8_u8_plus_1, u8 % u16 AS u8_u16, u8 % (u16 + UINT16(1)) AS u8_u16_plus_1, u8 % u32 AS u8_u32, u8 % (u32 + UINT32(1)) AS u8_u32_plus_1, u8 % u64 AS u8_u64, u8 % (u64 + UINT64(1)) AS u8_u64_plus_1 FROM FunctionModulo_stream INTO CHECKSUM"
    "test_name": "function/arithmetical/FunctionModulo.test"
  - "query": "SELECT u16 % i8 AS u16_i8, u16 % (i8 + INT8(1)) AS u16_i8_plus_1, u16 % i16 AS u16_i16, u16 % (i16 + INT16(1)) AS u16_i16_plus_1, u16 % i32 AS u16_i32, u16 % (i32 + INT32(1)) AS u16_i32_plus_1, u16 % i64 AS u16_i64, u16 % (i64 + INT64(1)) AS u16_i64_plus_1, u16 % u8 AS u16_u8, u16 % (u8 + UINT8(1)) AS u16_u8_plus_1, u16 % u16 AS u16_u16, u16 % (u16 + UINT16(1)) AS u16_u16_plus_1, u16 % u32 AS u16_u32, u16 % (u32 + UINT32(1)) AS u16_u32_plus_1, u16 % u64 AS u16_u64, u16 % (u64 + UINT64(1)) AS u16_u64_plus_1 FROM FunctionModulo_stream INTO CHECKSUM"
    "test_name": "function/arithmetical/FunctionModulo.test"
  - "query": "SELECT u32 % i8 AS u32_i8, u32 % (i8 + INT8(1)) AS u32_i8_plus_1, u32 % i16 AS u32_i16, u32 % (i16 + INT16(1)) AS u32_i16_plus_1, u32 % i32 AS u32_i32, u32 % (i32 + INT32(1)) AS u32_i32_plus_1, u32 % i64 AS u32_i64, u32 % (i64 + INT64(1)) AS u32_i64_plus_1, u32 % u8 AS u32_u8, u32 % (u8 + UINT8(1)) AS u32_u8_plus_1, u32 % u16 AS u32_u16, u32 % (u16 + UINT16(1)) AS u32_u16_plus_1, u32 % u32 AS u32_u32, u32 % (u32 + UINT32(1)) AS u32_u32_plus_1, u32 % u64 AS u32_u64, u32 % (u64 + UINT64(1)) AS u32_u64_plus_1 FROM FunctionModulo_stream INTO CHECKSUM"
    "test_name": "function/arithmetical/FunctionModulo.test"
  - "query": "SELECT u64 % i8 AS u64_i8, u64 % (i8 + INT8(1)) AS u64_i8_plus_1, u64 % i16 AS u64_i16, u64 % (i16 + INT16(1)) AS u64_i16_plus_1, u64 % i32 AS u64_i32, u64 % (i32 + INT32(1)) AS u64_i32_plus_1, u64 % i64 AS u64_i64, u64 % (i64 + INT64(1)) AS u64_i64_plus_1, u64 % u8 AS u64_u8, u64 % (u8 + UINT8(1)) AS u64_u8_plus_1, u64 % u16 AS u64_u16, u64 % (u16 + UINT16(1)) AS u64_u16_plus_1, u64 % u32 AS u64_u32, u64 % (u32 + UINT32(1)) AS u64_u32_plus_1, u64 % u64 AS u64_u64, u64 % (u64 + UINT64(1)) AS u64_u64_plus_1 FROM FunctionModulo_stream INTO CHECKSUM"
    "test_name": "function/arithmetical/FunctionModulo.test"
  - "query": "SELECT i8 % i8 AS i8_i8, i8 % (i8 + INT8(1)) AS i8_i8_plus_1, i8 % i16 AS i8_i16, i8 % (i16 + INT16(1)) AS i8_i16_plus_1, i8 % i32 AS i8_i32, i8 % (i32 + INT32(1)) AS i8_i32_plus_1, i8 % i64 AS i8_i64, i8 % (i64 + INT64(1)) AS i8_i64_plus_1, i8 % u8 AS i8_u8, i8 % (u8 + UINT8(1)) AS i8_u8_plus_1, i8 % u16 AS i8_u16, i8 % (u16 + UINT16(1)) AS i8_u16_plus_1, i8 % u32 AS i8_u32, i8 % (u32 + UINT32(1)) AS i8_u32_plus_1, i8 % u64 AS i8_u64, i8 % (u64 + UINT64(1)) AS i8_u64_plus_1 FROM FunctionModulo_stream INTO CHECKSUM"
    "test_name": "function/arithmetical/FunctionModulo.test"
  - "query": "SELECT i16 % i8 AS i16_i8, i16 % (i8 + INT8(1)) AS i16_i8_plus_1, i16 % i16 AS i16_i16, i16 % (i16 + INT16(1)) AS i16_i16_plus_1, i16 % i32 AS i16_i32, i16 % (i32 + INT32(1)) AS i16_i32_plus_1, i16 % i64 AS i16_i64, i16 % (i64 + INT64(1)) AS i16_i64_plus_1, i16 % u8 AS i16_u8, i16 % (u8 + UINT8(1)) AS i16_u8_plus_1, i16 % u16 AS i16_u16, i16 % (u16 + UINT16(1)) AS i16_u16_plus_1, i16 % u32 AS i16_u32, i16 % (u32 + UINT32(1)) AS i16_u32_plus_1, i16 % u64 AS i16_u64, i16 % (u64 + UINT64(1)) AS i16_u64_plus_1 FROM FunctionModulo_stream INTO CHECKSUM"
    "test_name": "function/arithmetical/FunctionModulo.test"
  - "query": "SELECT i32 % i8 AS i32_i8, i32 % (i8 + INT8(1)) AS i32_i8_plus_1, i32 % i16 AS i32_i16, i32 % (i16 + INT16(1)) AS i32_i16_plus_1, i32 % i32 AS i32_i32, i32 % (i32 + INT32(1)) AS i32_i32_plus_1, i32 % i64 AS i32_i64, i32 % (i64 + INT64(1)) AS i32_i64_plus_1, i32 % u8 AS i32_u8, i32 % (u8 + UINT8(1)) AS i32_u8_plus_1, i32 % u16 AS i32_u16, i32 % (u16 + UINT16(1)) AS i32_u16_plus_1, i32 % u32 AS i32_u32, i32 % (u32 + UINT32(1)) AS i32_u32_plus_1, i32 % u64 AS i32_u64, i32 % (u64 + UINT64(1)) AS i32_u64_plus_1 FROM FunctionModulo_stream INTO CHECKSUM"
    "test_name": "function/arithmetical/FunctionModulo.test"
  - "query": "SELECT i64 % i8 AS i64_i8, i64 % (i8 + INT8(1)) AS i64_i8_plus_1, i64 % i16 AS i64_i16, i64 % (i16 + INT16(1)) AS i64_i16_plus_1, i64 % i32 AS i64_i32, i64 % (i32 + INT32(1)) AS i64_i32_plus_1, i64 % i64 AS i64_i64, i64 % (i64 + INT64(1)) AS i64_i64_plus_1, i64 % u8 AS i64_u8, i64 % (u8 + UINT8(1)) AS i64_u8_plus_1, i64 % u16 AS i64_u16, i64 % (u16 + UINT16(1)) AS i64_u16_plus_1, i64 % u32 AS i64_u32, i64 % (u32 + UINT32(1)) AS i64_u32_plus_1, i64 % u64 AS i64_u64, i64 % (u64 + UINT64(1)) AS i64_u64_plus_1 FROM FunctionModulo_stream INTO CHECKSUM"
    "test_name": "function/arithmetical/FunctionModulo.test"
  - "query": "SELECT u8 % i8 AS u8_i8, u8 % (i8 + INT8(1)) AS u8_i8_plus_1, u8 % i16 AS u8_i16, u8 % (i16 + INT16(1)) AS u8_i16_plus_1, u8 % i32 AS u8_i32, u8 % (i32 + INT32(1)) AS u8_i32_plus_1, u8 % i64 AS u8_i64, u8 % (i64 + INT64(1)) AS u8_i64_plus_1, u8 % u8 AS u8_u8, u8 % (u8 + UINT8(1)) AS u8_u8_plus_1, u8 % u16 AS u8_u16, u8 % (u16 + UINT16(1)) AS u8_u16_plus_1, u8 % u32 AS u8_u32, u8 % (u32 + UINT32(1)) AS u8_u32_plus_1, u8 % u64 AS u8_u64, u8 % (u64 + UINT64(1)) AS u8_u64_plus_1 FROM FunctionModulo_stream INTO CHECKSUM"
    "test_name": "function/arithmetical/FunctionModulo.test"
  - "query": "SELECT u16 % i8 AS u16_i8, u16 % (i8 + INT8(1)) AS u16_i8_plus_1, u16 % i16 AS u16_i16, u16 % (i16 + INT16(1)) AS u16_i16_plus_1, u16 % i32 AS u16_i32, u16 % (i32 + INT32(1)) AS u16_i32_plus_1, u16 % i64 AS u16_i64, u16 % (i64 + INT64(1)) AS u16_i64_plus_1, u16 % u8 AS u16_u8, u16 % (u8 + UINT8(1)) AS u16_u8_plus_1, u16 % u16 AS u16_u16, u16 % (u16 + UINT16(1)) AS u16_u16_plus_1, u16 % u32 AS u16_u32, u16 % (u32 + UINT32(1)) AS u16_u32_plus_1, u16 % u64 AS u16_u64, u16 % (u64 + UINT64(1)) AS u16_u64_plus_1 FROM FunctionModulo_stream INTO CHECKSUM"
    "test_name": "function/arithmetical/FunctionModulo.test"
  - "query": "SELECT u32 % i8 AS u32_i8, u32 % (i8 + INT8(1)) AS u32_i8_plus_1, u32 % i16 AS u32_i16, u32 % (i16 + INT16(1)) AS u32_i16_plus_1, u32 % i32 AS u32_i32, u32 % (i32 + INT32(1)) AS u32_i32_plus_1, u32 % i64 AS u32_i64, u32 % (i64 + INT64(1)) AS u32_i64_plus_1, u32 % u8 AS u32_u8, u32 % (u8 + UINT8(1)) AS u32_u8_plus_1, u32 % u16 AS u32_u16, u32 % (u16 + UINT16(1)) AS u32_u16_plus_1, u32 % u32 AS u32_u32, u32 % (u32 + UINT32(1)) AS u32_u32_plus_1, u32 % u64 AS u32_u64, u32 % (u64 + UINT64(1)) AS u32_u64_plus_1 FROM FunctionModulo_stream INTO CHECKSUM"
    "test_name": "function/arithmetical/FunctionModulo.test"
  - "query": "SELECT u64 % i8 AS u64_i8, u64 % (i8 + INT8(1)) AS u64_i8_plus_1, u64 % i16 AS u64_i16, u64 % (i16 + INT16(1)) AS u64_i16_plus_1, u64 % i32 AS u64_i32, u64 % (i32 + INT32(1)) AS u64_i32_plus_1, u64 % i64 AS u64_i64, u64 % (i64 + INT64(1)) AS u64_i64_plus_1, u64 % u8 AS u64_u8, u64 % (u8 + UINT8(1)) AS u64_u8_plus_1, u64 % u16 AS u64_u16, u64 % (u16 + UINT16(1)) AS u64_u16_plus_1, u64 % u32 AS u64_u32, u64 % (u32 + UINT32(1)) AS u64_u32_plus_1, u64 % u64 AS u64_u64, u64 % (u64 + UINT64(1)) AS u64_u64_plus_1 FROM FunctionModulo_stream INTO CHECKSUM"
    "test_name": "function/arithmetical/FunctionModulo.test"
  "FunctionMul":
  - "query": "SELECT i8 * i8 AS i8_i8, i8 * (i8 + INT32(1)) AS i8_i8_plus_1, i8 * i16 AS i8_i16, i8 * (i16 + INT32(1)) AS i8_i16_plus_1, i8 * i32 AS i8_i32, i8 * (i32 + INT32(1)) AS i8_i32_plus_1, i8 * i64 AS i8_i64, i8 * (i64 + INT32(1)) AS i8_i64_plus_1, i8 * u8 AS i8_u8, i8 * (u8 + UINT8(1)) AS i8_u8_plus_1, i8 * u16 AS i8_u16, i8 * (u16 + UINT16(1)) AS i8_u16_plus_1, i8 * u32 AS i8_u32, i8 * (u32 + UINT32(1)) AS i8_u32_plus_1, i8 * u64 AS i8_u64, i8 * (u64 + UINT64(1)) AS i8_u64_plus_1, i8 * f32 AS i8_f32, i8 * (f32 + FLOAT32(1)) AS i8_f32_plus_1, i8 * f64 AS i8_f64, i8 * (f64 + FLOAT64(1)) AS i8_f64_plus_1 FROM FunctionMul_stream INTO CHECKSUM"
    "test_name": "function/arithmetical/FunctionMul.test"
  - "query": "SELECT i16 * i8 AS i16_i8, i16 * (i8 + INT8(1)) AS i16_i8_plus_1, i16 * i16 AS i16_i16, i16 * (i16 + INT16(1)) AS i16_i16_plus_1, i16 * i32 AS i16_i32, i16 * (i32 + INT32(1)) AS i16_i32_plus_1, i16 * i64 AS i16_i64, i16 * (i64 + INT64(1)) AS i16_i64_plus_1, i16 * u8 AS i16_u8, i16 * (u8 + UINT8(1)) AS i16_u8_plus_1, i16 * u16 AS i16_u16, i16 * (u16 + UINT16(1)) AS i16_u16_plus_1, i16 * u32 AS i16_u32, i16 * (u32 + UINT32(1)) AS i16_u32_plus_1, i16 * u64 AS i16_u64, i16 * (u64 + UINT64(1)) AS i16_u64_plus_1, i16 * f32 AS i16_f32, i16 * (f32 + FLOAT32(1)) AS i16_f32_plus_1, i16 * f64 AS i16_f64, i16 * (f64 + FLOAT64(1)) AS i16_f64_plus_1 FROM FunctionMul_stream INTO CHECKSUM"
    "test_name": "function/arithmetical/FunctionMul.test"
  - "query": "SELECT i32 * i8 AS i32_i8, i32 * (i8 + INT8(1)) AS i32_i8_plus_1, i32 * i16 AS i32_i16, i32 * (i16 + INT16(1)) AS i32_i16_plus_1, i32 * i32 AS i32_i32, i32 * (i32 + INT32(1)) AS i32_i32_plus_1, i32 * i64 AS i32_i64, i32 * (i64 + INT64(1)) AS i32_i64_plus_1, i32 * u8 AS i32_u8, i32 * (u8 + UINT8(1)) AS i32_u8_plus_1, i32 * u16 AS i32_u16, i32 * (u16 + UINT16(1)) AS i32_u16_plus_1, i32 * u32 AS i32_u32, i32 * (u32 + UINT32(1)) AS i32_u32_plus_1, i32 * u64 AS i32_u64, i32 * (u64 + UINT64(1)) AS i32_u64_plus_1, i32 * f32 AS i32_f32, i32 * (f32 + FLOAT32(1)) AS i32_f32_plus_1, i32 * f64 AS i32_f64, i32 * (f64 + FLOAT64(1)) AS i32_f64_plus_1 FROM FunctionMul_stream INTO CHECKSUM"
    "test_name": "function/arithmetical/FunctionMul.test"
  - "query": "SELECT i64 * i8 AS i64_i8, i64 * (i8 + INT8(1)) AS i64_i8_plus_1, i64 * i16 AS i64_i16, i64 * (i16 + INT16(1)) AS i64_i16_plus_1, i64 * i32 AS i64_i32, i64 * (i32 + INT32(1)) AS i64_i32_plus_1, i64 * i64 AS i64_i64, i64 * (i64 + INT64(1)) AS i64_i64_plus_1, i64 * u8 AS i64_u8, i64 * (u8 + UINT8(1)) AS i64_u8_plus_1, i64 * u16 AS i64_u16, i64 * (u16 + UINT16(1)) AS i64_u16_plus_1, i64 * u32 AS i64_u32, i64 * (u32 + UINT32(1)) AS i64_u32_plus_1, i64 * u64 AS i64_u64, i64 * (u64 + UINT64(1)) AS i64_u64_plus_1, i64 * f32 AS i64_f32, i64 * (f32 + FLOAT32(1)) AS i64_f32_plus_1, i64 * f64 AS i64_f64, i64 * (f64 + FLOAT64(1)) AS i64_f64_plus_1 FROM FunctionMul_stream INTO CHECKSUM"
    "test_name": "function/arithmetical/FunctionMul.test"
  - "query": "SELECT i8 * i8 AS i8_i8, i8 * (i8 + INT32(1)) AS i8_i8_plus_1, i8 * i16 AS i8_i16, i8 * (i16 + INT32(1)) AS i8_i16_plus_1, i8 * i32 AS i8_i32, i8 * (i32 + INT32(1)) AS i8_i32_plus_1, i8 * i64 AS i8_i64, i8 * (i64 + INT32(1)) AS i8_i64_plus_1, i8 * u8 AS i8_u8, i8 * (u8 + UINT8(1)) AS i8_u8_plus_1, i8 * u16 AS i8_u16, i8 * (u16 + UINT16(1)) AS i8_u16_plus_1, i8 * u32 AS i8_u32, i8 * (u32 + UINT32(1)) AS i8_u32_plus_1, i8 * u64 AS i8_u64, i8 * (u64 + UINT64(1)) AS i8_u64_plus_1, i8 * f32 AS i8_f32, i8 * (f32 + FLOAT32(1)) AS i8_f32_plus_1, i8 * f64 AS i8_f64, i8 * (f64 + FLOAT64(1)) AS i8_f64_plus_1 FROM FunctionMul_stream INTO CHECKSUM"
    "test_name": "function/arithmetical/FunctionMul.test"
  - "query": "SELECT i16 * i8 AS i16_i8, i16 * (i8 + INT8(1)) AS i16_i8_plus_1, i16 * i16 AS i16_i16, i16 * (i16 + INT16(1)) AS i16_i16_plus_1, i16 * i32 AS i16_i32, i16 * (i32 + INT32(1)) AS i16_i32_plus_1, i16 * i64 AS i16_i64, i16 * (i64 + INT64(1)) AS i16_i64_plus_1, i16 * u8 AS i16_u8, i16 * (u8 + UINT8(1)) AS i16_u8_plus_1, i16 * u16 AS i16_u16, i16 * (u16 + UINT16(1)) AS i16_u16_plus_1, i16 * u32 AS i16_u32, i16 * (u32 + UINT32(1)) AS i16_u32_plus_1, i16 * u64 AS i16_u64, i16 * (u64 + UINT64(1)) AS i16_u64_plus_1, i16 * f32 AS i16_f32, i16 * (f32 + FLOAT32(1)) AS i16_f32_plus_1, i16 * f64 AS i16_f64, i16 * (f64 + FLOAT64(1)) AS i16_f64_plus_1 FROM FunctionMul_stream INTO CHECKSUM"
    "test_name": "function/arithmetical/FunctionMul.test"
  - "query": "SELECT i32 * i8 AS i32_i8, i32 * (i8 + INT8(1)) AS i32_i8_plus_1, i32 * i16 AS i32_i16, i32 * (i16 + INT16(1)) AS i32_i16_plus_1, i32 * i32 AS i32_i32, i32 * (i32 + INT32(1)) AS i32_i32_plus_1, i32 * i64 AS i32_i64, i32 * (i64 + INT64(1)) AS i32_i64_plus_1, i32 * u8 AS i32_u8, i32 * (u8 + UINT8(1)) AS i32_u8_plus_1, i32 * u16 AS i32_u16, i32 * (u16 + UINT16(1)) AS i32_u16_plus_1, i32 * u32 AS i32_u32, i32 * (u32 + UINT32(1)) AS i32_u32_plus_1, i32 * u64 AS i32_u64, i32 * (u64 + UINT64(1)) AS i32_u64_plus_1, i32 * f32 AS i32_f32, i32 * (f32 + FLOAT32(1)) AS i32_f32_plus_1, i32 * f64 AS i32_f64, i32 * (f64 + FLOAT64(1)) AS i32_f64_plus_1 FROM FunctionMul_stream INTO CHECKSUM"
    "test_name": "function/arithmetical/FunctionMul.test"
  - "query": "SELECT i64 * i8 AS i64_i8, i64 * (i8 + INT8(1)) AS i64_i8_plus_1, i64 * i16 AS i64_i16, i64 * (i16 + INT16(1)) AS i64_i16_plus_1, i64 * i32 AS i64_i32, i64 * (i32 + INT32(1)) AS i64_i32_plus_1, i64 * i64 AS i64_i64, i64 * (i64 + INT64(1)) AS i64_i64_plus_1, i64 * u8 AS i64_u8, i64 * (u8 + UINT8(1)) AS i64_u8_plus_1, i64 * u16 AS i64_u16, i64 * (u16 + UINT16(1)) AS i64_u16_plus_1, i64 * u32 AS i64_u32, i64 * (u32 + UINT32(1)) AS i64_u32_plus_1, i64 * u64 AS i64_u64, i64 * (u64 + UINT64(1)) AS i64_u64_plus_1, i64 * f32 AS i64_f32, i64 * (f32 + FLOAT32(1)) AS i64_f32_plus_1, i64 * f64 AS i64_f64, i64 * (f64 + FLOAT64(1)) AS i64_f64_plus_1 FROM FunctionMul_stream INTO CHECKSUM"
    "test_name": "function/arithmetical/FunctionMul.test"
  "FunctionNotEqual":
  - "query": "SELECT i8 != i8 AS bool1, i8 != i8 + INT8(1) AS bool2, i8 != i16 AS bool3, i8 != i16 + INT16(1) AS bool4, i8 != i32 AS bool5, i8 != i32 + INT32(1) AS bool6, i8 != i64 AS bool7, i8 != i64 + INT64(1) AS bool8, i8 != u8 AS bool9, i8 != u8 + UINT8(1) AS bool10, i8 != u16 AS bool11, i8 != u16 + UINT16(1) AS bool12, i8 != u32 AS bool13, i8 != u32 + UINT32(1) AS bool14, i8 != u64 AS bool15, i8 != u64 + UINT64(1) AS bool16, i8 != f32 AS bool17, i8 != f32 + FLOAT32(1) AS bool18, i8 != f64 AS bool19, i8 != f64 + FLOAT64(1) AS bool20 FROM FunctionNotEqual_stream INTO CHECKSUM"
    "test_name": "function/logical/FunctionNotEqual.test"
  - "query": "SELECT i16 != i8 AS bool1, i16 != i8 + INT8(1) AS bool2, i16 != i16 AS bool3, i16 != i16 + INT16(1) AS bool4, i16 != i32 AS bool5, i16 != i32 + INT32(1) AS bool6, i16 != i64 AS bool7, i16 != i64 + INT64(1) AS bool8, i16 != u8 AS bool9, i16 != u8 + UINT8(1) AS bool10, i16 != u16 AS bool11, i16 != u16 + UINT16(1) AS bool12, i16 != u32 AS bool13, i16 != u32 + UINT32(1) AS bool14, i16 != u64 AS bool15, i16 != u64 + UINT64(1) AS bool16, i16 != f32 AS bool17, i16 != f32 + FLOAT32(1) AS bool18, i16 != f64 AS bool19, i16 != f64 + FLOAT64(1) AS bool20 FROM FunctionNotEqual_stream INTO CHECKSUM"
    "test_name": "function/logical/FunctionNotEqual.test"
  - "query": "SELECT i32 != i8 AS bool1, i32 != i8 + INT8(1) AS bool2, i32 != i16 AS bool3, i32 != i16 + INT16(1) AS bool4, i32 != i32 AS bool5, i32 != i32 + INT32(1) AS bool6, i32 != i64 AS bool7, i32 != i64 + INT64(1) AS bool8, i32 != u8 AS bool9, i32 != u8 + UINT8(1) AS bool10, i32 != u16 AS bool11, i32 != u16 + UINT16(1) AS bool12, i32 != u32 AS bool13, i32 != u32 + UINT32(1) AS bool14, i32 != u64 AS bool15, i32 != u64 + UINT64(1) AS bool16, i32 != f32 AS bool17, i32 != f32 + FLOAT32(1) AS bool18, i32 != f64 AS bool19, i32 != f64 + FLOAT64(1) AS bool20 FROM FunctionNotEqual_stream INTO CHECKSUM"
    "test_name": "function/logical/FunctionNotEqual.test"
  - "query": "SELECT i64 != i8 AS bool1, i64 != i8 + INT8(1) AS bool2, i64 != i16 AS bool3, i64 != i16 + INT16(1) AS bool4, i64 != i32 AS bool5, i64 != i32 + INT32(1) AS bool6, i64 != i64 AS bool7, i64 != i64 + INT64(1) AS bool8, i64 != u8 AS bool9, i64 != u8 + UINT8(1) AS bool10, i64 != u16 AS bool11, i64 != u16 + UINT16(1) AS bool12, i64 != u32 AS bool13, i64 != u32 + UINT32(1) AS bool14, i64 != u64 AS bool15, i64 != u64 + UINT64(1) AS bool16, i64 != f32 AS bool17, i64 != f32 + FLOAT32(1) AS bool18, i64 != f64 AS bool19, i64 != f64 + FLOAT64(1) AS bool20 FROM FunctionNotEqual_stream INTO CHECKSUM"
    "test_name": "function/logical/FunctionNotEqual.test"
  - "query": "SELECT i8 != i8 AS bool1, i8 != i8 + INT8(1) AS bool2, i8 != i16 AS bool3, i8 != i16 + INT16(1) AS bool4, i8 != i32 AS bool5, i8 != i32 + INT32(1) AS bool6, i8 != i64 AS bool7, i8 != i64 + INT64(1) AS bool8, i8 != u8 AS bool9, i8 != u8 + UINT8(1) AS bool10, i8 != u16 AS bool11, i8 != u16 + UINT16(1) AS bool12, i8 != u32 AS bool13, i8 != u32 + UINT32(1) AS bool14, i8 != u64 AS bool15, i8 != u64 + UINT64(1) AS bool16, i8 != f32 AS bool17, i8 != f32 + FLOAT32(1) AS bool18, i8 != f64 AS bool19, i8 != f64 + FLOAT64(1) AS bool20 FROM FunctionNotEqual_stream INTO CHECKSUM"
    "test_name": "function/logical/FunctionNotEqual.test"
  - "query": "SELECT i16 != i8 AS bool1, i16 != i8 + INT8(1) AS bool2, i16 != i16 AS bool3, i16 != i16 + INT16(1) AS bool4, i16 != i32 AS bool5, i16 != i32 + INT32(1) AS bool6, i16 != i64 AS bool7, i16 != i64 + INT64(1) AS bool8, i16 != u8 AS bool9, i16 != u8 + UINT8(1) AS bool10, i16 != u16 AS bool11, i16 != u16 + UINT16(1) AS bool12, i16 != u32 AS bool13, i16 != u32 + UINT32(1) AS bool14, i16 != u64 AS bool15, i16 != u64 + UINT64(1) AS bool16, i16 != f32 AS bool17, i16 != f32 + FLOAT32(1) AS bool18, i16 != f64 AS bool19, i16 != f64 + FLOAT64(1) AS bool20 FROM FunctionNotEqual_stream INTO CHECKSUM"
    "test_name": "function/logical/FunctionNotEqual.test"
  - "query": "SELECT i32 != i8 AS bool1, i32 != i8 + INT8(1) AS bool2, i32 != i16 AS bool3, i32 != i16 + INT16(1) AS bool4, i32 != i32 AS bool5, i32 != i32 + INT32(1) AS bool6, i32 != i64 AS bool7, i32 != i64 + INT64(1) AS bool8, i32 != u8 AS bool9, i32 != u8 + UINT8(1) AS bool10, i32 != u16 AS bool11, i32 != u16 + UINT16(1) AS bool12, i32 != u32 AS bool13, i32 != u32 + UINT32(1) AS bool14, i32 != u64 AS bool15, i32 != u64 + UINT64(1) AS bool16, i32 != f32 AS bool17, i32 != f32 + FLOAT32(1) AS bool18, i32 != f64 AS bool19, i32 != f64 + FLOAT64(1) AS bool20 FROM FunctionNotEqual_stream INTO CHECKSUM"
    "test_name": "function/logical/FunctionNotEqual.test"
  - "query": "SELECT i64 != i8 AS bool1, i64 != i8 + INT8(1) AS bool2, i64 != i16 AS bool3, i64 != i16 + INT16(1) AS bool4, i64 != i32 AS bool5, i64 != i32 + INT32(1) AS bool6, i64 != i64 AS bool7, i64 != i64 + INT64(1) AS bool8, i64 != u8 AS bool9, i64 != u8 + UINT8(1) AS bool10, i64 != u16 AS bool11, i64 != u16 + UINT16(1) AS bool12, i64 != u32 AS bool13, i64 != u32 + UINT32(1) AS bool14, i64 != u64 AS bool15, i64 != u64 + UINT64(1) AS bool16, i64 != f32 AS bool17, i64 != f32 + FLOAT32(1) AS bool18, i64 != f64 AS bool19, i64 != f64 + FLOAT64(1) AS bool20 FROM FunctionNotEqual_stream INTO CHECKSUM"
    "test_name": "function/logical/FunctionNotEqual.test"
  "FunctionOr":
  - "query": "SELECT (i8 == INT32(2)) or ((i16 == INT32(2)) or (u32 == INT32(1))) AS a, (i32 == INT32(2)) or ((i64 == INT32(2)) or (u8 == INT32(2))) AS b, (u8 == INT32(2)) or ((u16 == INT32(1)) or (u32 == INT32(1))) AS c, (u8 == INT32(2)) or ((u16 == INT32(1)) or (u32 == INT32(1))) AS d, (i8 == INT32(1)) or not ((i16 == INT32(2)) or (i32 == INT32(1))) AS e FROM FunctionOr_stream INTO CHECKSUM"
    "test_name": "function/logical/FunctionOr.test"
  - "query": "SELECT (i8 == INT32(2)) or (i16 < INT32(0)) AS a, (i32 == INT32(2)) or (i64 > INT32(0)) AS b, (u8 == INT32(2)) or (u16 <= INT32(2)) AS c, (u8 == INT32(2)) or (u16 >= INT32(2)) AS d, (i8 == INT32(1)) or not (i16 == INT32(2)) AS e FROM FunctionOr_stream INTO CHECKSUM"
    "test_name": "function/logical/FunctionOr.test"
  - "query": "SELECT (i8 == INT32(2)) or ((i16 < INT32(0)) or (i32 == INT32(2))) AS a, (i32 == INT32(2)) or ((i64 > INT32(0)) or (u8 == INT32(2))) AS b, (u8 == INT32(2)) or ((u16 <= INT32(2)) or (u32 == INT32(1))) AS c, (u8 == INT32(2)) or ((u16 >= INT32(2)) or (u32 == INT32(1))) AS d, (i8 == INT32(1)) or not ((i16 == INT32(2)) or (i32 == INT32(1))) AS e FROM FunctionOr_stream INTO CHECKSUM"
    "test_name": "function/logical/FunctionOr.test"
  - "query": "SELECT (i8 == INT32(2)) or ((i16 == INT32(2)) or (u32 == INT32(1))) AS a, (i32 == INT32(2)) or ((i64 == INT32(2)) or (u8 == INT32(2))) AS b, (u8 == INT32(2)) or ((u16 == INT32(1)) or (u32 == INT32(1))) AS c, (u8 == INT32(2)) or ((u16 == INT32(1)) or (u32 == INT32(1))) AS d, (i8 == INT32(1)) or not ((i16 == INT32(2)) or (i32 == INT32(1))) AS e FROM FunctionOr_stream INTO CHECKSUM"
    "test_name": "function/logical/FunctionOr.test"
  - "query": "SELECT (i8 == INT32(2)) or (i16 < INT32(0)) AS a, (i32 == INT32(2)) or (i64 > INT32(0)) AS b, (u8 == INT32(2)) or (u16 <= INT32(2)) AS c, (u8 == INT32(2)) or (u16 >= INT32(2)) AS d, (i8 == INT32(1)) or not (i16 == INT32(2)) AS e FROM FunctionOr_stream INTO CHECKSUM"
    "test_name": "function/logical/FunctionOr.test"
  - "query": "SELECT (i8 == INT32(2)) or ((i16 < INT32(0)) or (i32 == INT32(2))) AS a, (i32 == INT32(2)) or ((i64 > INT32(0)) or (u8 == INT32(2))) AS b, (u8 == INT32(2)) or ((u16 <= INT32(2)) or (u32 == INT32(1))) AS c, (u8 == INT32(2)) or ((u16 >= INT32(2)) or (u32 == INT32(1))) AS d, (i8 == INT32(1)) or not ((i16 == INT32(2)) or (i32 == INT32(1))) AS e FROM FunctionOr_stream INTO CHECKSUM"
    "test_name": "function/logical/FunctionOr.test"
  "FunctionSub":
  - "query": "SELECT i8 - i8 AS i8_i8, i8 - i8 + INT8(1) AS i8_i8_plus_1, i8 - i16 AS i8_i16, i8 - i16 + INT16(1) AS i8_i16_plus_1, i8 - i32 AS i8_i32, i8 - i32 + INT32(1) AS i8_i32_plus_1, i8 - i64 AS i8_i64, i8 - i64 + INT64(1) AS i8_i64_plus_1, i8 - u8  AS i8_u8, i8 - u8 + UINT8(1) AS i8_u8_plus_1, i8 - u16 AS i8_u16, i8 - u16 + UINT16(1) AS i8_u16_plus_1, i8 - u32 AS i8_u32, i8 - u32 + UINT32(1) AS i8_u32_plus_1, i8 - u64 AS i8_u64, i8 - u64 + UINT64(1) AS i8_u64_plus_1, i8 - f32 AS i8_f32, i8 - f32 + FLOAT32(1) AS i8_f32_plus_1, i8 - f64 AS i8_f64, i8 - f64 + FLOAT64(1) AS i8_f64_plus_1 FROM FunctionSub_stream INTO CHECKSUM"
    "test_name": "function/arithmetical/FunctionAdd.test"
  - "query": "SELECT i16 - i8 AS i16_i8, i16 - i8 + INT8(1) AS i16_i8_plus_1, i16 - i16 AS i16_i16, i16 - i16 + INT16(1) AS i16_i16_plus_1, i16 - i32 AS i16_i32, i16 - i32 + INT32(1) AS i16_i32_plus_1, i16 - i64 AS i16_i64, i16 - i64 + INT64(1) AS i16_i64_plus_1, i16 - u8 AS i16_u8, i16 - u8 + UINT8(1) AS i16_u8_plus_1, u16 - i16 AS i16_u16, u16 - i16 + UINT16(1) AS i16_u16_plus_1, i16 - u32 AS i16_u32, i16 - u32 + UINT32(1) AS i16_u32_plus_1, i16 - u64 AS i16_u64, i16 - u64 + UINT32(1) AS i16_u64_plus_1, i16 - f32 AS i16_f32, i16 - f32 + FLOAT32(1) AS i16_f32_plus_1, i16 - f64 AS i16_f64, i16 - f64 + FLOAT64(1) AS i16_f64_plus_1 FROM FunctionSub_stream INTO CHECKSUM"
    "test_name": "function/arithmetical/FunctionAdd.test"
  - "query": "SELECT i32 - i8 AS i32_i8, i32 - i8 + INT8(1) AS i32_i8_plus_1, i32 - i16 AS i32_i16, i32 - i16 + INT16(1) AS i32_i16_plus_1, i32 - i32 AS i32_i32, i32 - i32 + INT32(1) AS i32_i32_plus_1, i32 - i64 AS i32_i64, i32 - i64 + INT64(1) AS i32_i64_plus_1, i32 - u8 AS i32_u8, i32 - u8 + UINT8(1) AS i32_u8_plus_1, i32 - u16 AS i32_u16, i32 - u16 + UINT16(1) AS i32_u16_plus_1, i32 - u32 AS i32_u32, i32 - u32 + UINT32(1) AS i32_u32_plus_1, i32 - u64 AS i32_u64, i32 - u64 + UINT32(1) AS i32_u64_plus_1, i32 - f32 AS i32_f32, i32 - f32 + FLOAT32(1) AS i32_f32_plus_1, i32 - f64 AS i32_f64, i32 - f64 + FLOAT64(1) AS i32_f64_plus_1 FROM FunctionSub_stream INTO CHECKSUM"
    "test_name": "function/arithmetical/FunctionAdd.test"
  - "query": "SELECT i64 - i8 AS i64_i8, i64 - i8 + INT8(1) AS i64_i8_plus_1, i64 - i16 AS i64_i16, i64 - i16 + INT16(1) AS i64_i16_plus_1, i64 - i32 AS i64_i32, i64 - i32 + INT32(1) AS i64_i32_plus_1, i64 - i64 AS i64_i64, i64 - i64 + INT64(1) AS i64_i64_plus_1, i64 - u8 AS i64_u8, i64 - u8 + UINT32(1) AS i64_u8_plus_1, i64 - u16 AS i64_u16, i64 - u16 + UINT32(1) AS i64_u16_plus_1, i64 - u32 AS i64_u32, i64 - u32 + UINT32(1) AS i64_u32_plus_1, i64 - u64 AS i64_u64, i64 - u64 + UINT32(1) AS i64_u64_plus_1, i64 - f32 AS i64_f32, i64 - f32 + FLOAT32(1) AS i64_f32_plus_1, i64 - f64 AS i64_f64, i64 - f64 + FLOAT64(1) AS i64_f64_plus_1 FROM FunctionSub_stream INTO CHECKSUM"
    "test_name": "function/arithmetical/FunctionAdd.test"
  - "query": "SELECT u8 - i8 AS u8_i8, u8 - i8 + INT8(1) AS u8_i8_plus_1, u8 - i16 AS u8_i16, u8 - i16 + INT16(1) AS u8_i16_plus_1, u8 - i32 AS u8_i32, u8 - i32 + INT32(1) AS u8_i32_plus_1, u8 - i64 AS u8_i64, u8 - i64 + INT64(1) AS u8_i64_plus_1, u8 - u8  AS u8_u8, u8 - u8 + UINT8(1) AS u8_u8_plus_1, u8 - u16 AS u8_u16, u8 - u16 + UINT16(1) AS u8_u16_plus_1, u8 - u32 AS u8_u32, u8 - u32 + UINT32(1) AS u8_u32_plus_1, u8 - u64 AS u8_u64, u8 - u64 + UINT64(1) AS u8_u64_plus_1, u8 - f32 AS u8_f32, u8 - f32 + FLOAT32(1) AS u8_f32_plus_1, u8 - f64 AS u8_f64, u8 - f64 + FLOAT64(1) AS u8_f64_plus_1 FROM FunctionSub_stream INTO CHECKSUM"
    "test_name": "function/arithmetical/FunctionAdd.test"
  - "query": "SELECT u16 - i8 AS u16_i8, u16 - i8 + INT8(1) AS u16_i8_plus_1, u16 - i16 AS u16_i16, u16 - i16 + INT16(1) AS u16_i16_plus_1, u16 - i32 AS u16_i32, u16 - i32 + INT32(1) AS u16_i32_plus_1, u16 - i64 AS u16_i64, u16 - i64 + INT64(1) AS u16_i64_plus_1, u16 - u8 AS u16_u8, u16 - u8 + UINT8(1) AS u16_u8_plus_1, u16 - i16 AS u16_u16, u16 - i16 + INT16(1) AS u16_u16_plus_1, u16 - u32 AS u16_u32, u16 - u32 + UINT32(1) AS u16_u32_plus_1, u16 - u64 AS u16_u64, u16 - u64 + UINT32(1) AS u16_u64_plus_1, u16 - f32 AS u16_f32, u16 - f32 + FLOAT32(1) AS u16_f32_plus_1, u16 - f64 AS u16_f64, u16 - f64 + FLOAT64(1) AS u16_f64_plus_1 FROM FunctionSub_stream INTO CHECKSUM"
    "test_name": "function/arithmetical/FunctionAdd.test"
  - "query": "SELECT u32 - i8 AS u32_i8, u32 - i8 + INT8(1) AS u32_i8_plus_1, u32 - i16 AS u32_i16, u32 - i16 + INT16(1) AS u32_i16_plus_1, u32 - i32 AS u32_i32, u32 - i32 + INT32(1) AS u32_i32_plus_1, u32 - i64 AS u32_i64, u32 - i64 + INT64(1) AS u32_i64_plus_1, u32 - u8 AS u32_u8, u32 - u8 + UINT32(1) AS u32_u8_plus_1, u32 - u16 AS u32_u16, u32 - u16 + UINT32(1) AS u32_u16_plus_1, u32 - u32 AS u32_u32, u32 - u32 + UINT32(1) AS u32_u32_plus_1, u32 - u64 AS u32_u64, u32 - u64 + UINT32(1) AS u32_u64_plus_1, u32 - f32 AS u32_f32, u32 - f32 + FLOAT32(1) AS u32_f32_plus_1, u32 - f64 AS u32_f64, u32 - f64 + FLOAT64(1) AS u32_f64_plus_1 FROM FunctionSub_stream INTO CHECKSUM"
    "test_name": "function/arithmetical/FunctionAdd.test"
  - "query": "SELECT u64 - i8 AS u64_i8, u64 - i8 + INT8(1) AS u64_i8_plus_1, u64 - i16 AS u64_i16, u64 - i16 + INT16(1) AS u64_i16_plus_1, u64 - i32 AS u64_i32, u64 - i32 + INT32(1) AS u64_i32_plus_1, u64 - i64 AS u64_i64, u64 - i64 + INT64(1) AS u64_i64_plus_1, u64 - u8 AS u64_u8, u64 - u8 + UINT32(1) AS u64_u8_plus_1, u64 - u16 AS u64_u16, u64 - u16 + UINT32(1) AS u64_u16_plus_1, u64 - u32 AS u64_u32, u64 - u32 + UINT32(1) AS u64_u32_plus_1, u64 - u64 AS u64_u64, u64 - u64 + UINT32(1) AS u64_u64_plus_1, u64 - f32 AS u64_f32, u64 - f32 + FLOAT32(1) AS u64_f32_plus_1, u64 - f64 AS u64_f64, u64 - f64 + FLOAT64(1) AS u64_f64_plus_1 FROM FunctionSub_stream INTO CHECKSUM"
    "test_name": "function/arithmetical/FunctionAdd.test"
  - "query": "SELECT f32 - i8 AS f32_i8, f32 - i8 + INT8(1) AS f32_i8_plus_1, f32 - i16 AS f32_i16, f32 - i16 + INT16(1) AS f32_i16_plus_1, f32 - i32 AS f32_i32, f32 - i32 + INT32(1) AS f32_i32_plus_1, f32 - i64 AS f32_i64, f32 - i64 + INT64(1) AS f32_i64_plus_1, f32 - u8 AS f32_u8, f32 - u8 + UINT32(1) AS f32_u8_plus_1, f32 - u16 AS f32_u16, f32 - u16 + UINT32(1) AS f32_u16_plus_1, f32 - u32 AS f32_u32, f32 - u32 + UINT32(1) AS f32_u32_plus_1, f32 - u64 AS f32_u64, f32 - u64 + UINT32(1) AS f32_u64_plus_1, f32 - f32 AS f32_f32, f32 - f32 + FLOAT32(1) AS f32_f32_plus_1, f32 - f64 AS f32_f64, f32 - f64 + FLOAT64(1) AS f32_f64_plus_1 FROM FunctionSub_stream INTO CHECKSUM"
    "test_name": "function/arithmetical/FunctionAdd.test"
  - "query": "SELECT f64 - i8 AS f64_i8, f64 - i8 + INT8(1) AS f64_i8_plus_1, f64 - i16 AS f64_i16, f64 - i16 + INT16(1) AS f64_i16_plus_1, f64 - i32 AS f64_i32, f64 - i32 + INT32(1) AS f64_i32_plus_1, f64 - i64 AS f64_i64, f64 - i64 + INT64(1) AS f64_i64_plus_1, f64 - u8 AS f64_u8, f64 - u8 + UINT32(1) AS f64_u8_plus_1, f64 - u16 AS f64_u16, f64 - u16 + UINT32(1) AS f64_u16_plus_1, f64 - u32 AS f64_u32, f64 - u32 + UINT32(1) AS f64_u32_plus_1, f64 - u64 AS f64_u64, f64 - u64 + UINT32(1) AS f64_u64_plus_1, f64 - f32 AS f64_f32, f64 - f32 + FLOAT32(1) AS f64_f32_plus_1, f64 - f64 AS f64_f64, f64 - f64 + FLOAT64(1) AS f64_f64_plus_1 FROM FunctionSub_stream INTO CHECKSUM"
    "test_name": "function/arithmetical/FunctionAdd.test"
  - "query": "SELECT i8 - i8 AS i8_i8, i8 - i8 + INT8(1) AS i8_i8_plus_1, i8 - i16 AS i8_i16, i8 - i16 + INT16(1) AS i8_i16_plus_1, i8 - i32 AS i8_i32, i8 - i32 + INT32(1) AS i8_i32_plus_1, i8 - i64 AS i8_i64, i8 - i64 + INT64(1) AS i8_i64_plus_1, i8 - u8  AS i8_u8, i8 - u8 + UINT8(1) AS i8_u8_plus_1, i8 - u16 AS i8_u16, i8 - u16 + UINT16(1) AS i8_u16_plus_1, i8 - u32 AS i8_u32, i8 - u32 + UINT32(1) AS i8_u32_plus_1, i8 - u64 AS i8_u64, i8 - u64 + UINT64(1) AS i8_u64_plus_1, i8 - f32 AS i8_f32, i8 - f32 + FLOAT32(1) AS i8_f32_plus_1, i8 - f64 AS i8_f64, i8 - f64 + FLOAT64(1) AS i8_f64_plus_1 FROM FunctionSub_stream INTO CHECKSUM"
    "test_name": "function/arithmetical/FunctionAdd.test"
  - "query": "SELECT i16 - i8 AS i16_i8, i16 - i8 + INT8(1) AS i16_i8_plus_1, i16 - i16 AS i16_i16, i16 - i16 + INT16(1) AS i16_i16_plus_1, i16 - i32 AS i16_i32, i16 - i32 + INT32(1) AS i16_i32_plus_1, i16 - i64 AS i16_i64, i16 - i64 + INT64(1) AS i16_i64_plus_1, i16 - u8 AS i16_u8, i16 - u8 + UINT8(1) AS i16_u8_plus_1, u16 - i16 AS i16_u16, u16 - i16 + UINT16(1) AS i16_u16_plus_1, i16 - u32 AS i16_u32, i16 - u32 + UINT32(1) AS i16_u32_plus_1, i16 - u64 AS i16_u64, i16 - u64 + UINT32(1) AS i16_u64_plus_1, i16 - f32 AS i16_f32, i16 - f32 + FLOAT32(1) AS i16_f32_plus_1, i16 - f64 AS i16_f64, i16 - f64 + FLOAT64(1) AS i16_f64_plus_1 FROM FunctionSub_stream INTO CHECKSUM"
    "test_name": "function/arithmetical/FunctionAdd.test"
  - "query": "SELECT i32 - i8 AS i32_i8, i32 - i8 + INT8(1) AS i32_i8_plus_1, i32 - i16 AS i32_i16, i32 - i16 + INT16(1) AS i32_i16_plus_1, i32 - i32 AS i32_i32, i32 - i32 + INT32(1) AS i32_i32_plus_1, i32 - i64 AS i32_i64, i32 - i64 + INT64(1) AS i32_i64_plus_1, i32 - u8 AS i32_u8, i32 - u8 + UINT8(1) AS i32_u8_plus_1, i32 - u16 AS i32_u16, i32 - u16 + UINT16(1) AS i32_u16_plus_1, i32 - u32 AS i32_u32, i32 - u32 + UINT32(1) AS i32_u32_plus_1, i32 - u64 AS i32_u64, i32 - u64 + UINT32(1) AS i32_u64_plus_1, i32 - f32 AS i32_f32, i32 - f32 + FLOAT32(1) AS i32_f32_plus_1, i32 - f64 AS i32_f64, i32 - f64 + FLOAT64(1) AS i32_f64_plus_1 FROM FunctionSub_stream INTO CHECKSUM"
    "test_name": "function/arithmetical/FunctionAdd.test"
  - "query": "SELECT i64 - i8 AS i64_i8, i64 - i8 + INT8(1) AS i64_i8_plus_1, i64 - i16 AS i64_i16, i64 - i16 + INT16(1) AS i64_i16_plus_1, i64 - i32 AS i64_i32, i64 - i32 + INT32(1) AS i64_i32_plus_1, i64 - i64 AS i64_i64, i64 - i64 + INT64(1) AS i64_i64_plus_1, i64 - u8 AS i64_u8, i64 - u8 + UINT32(1) AS i64_u8_plus_1, i64 - u16 AS i64_u16, i64 - u16 + UINT32(1) AS i64_u16_plus_1, i64 - u32 AS i64_u32, i64 - u32 + UINT32(1) AS i64_u32_plus_1, i64 - u64 AS i64_u64, i64 - u64 + UINT32(1) AS i64_u64_plus_1, i64 - f32 AS i64_f32, i64 - f32 + FLOAT32(1) AS i64_f32_plus_1, i64 - f64 AS i64_f64, i64 - f64 + FLOAT64(1) AS i64_f64_plus_1 FROM FunctionSub_stream INTO CHECKSUM"
    "test_name": "function/arithmetical/FunctionAdd.test"
  - "query": "SELECT u8 - i8 AS u8_i8, u8 - i8 + INT8(1) AS u8_i8_plus_1, u8 - i16 AS u8_i16, u8 - i16 + INT16(1) AS u8_i16_plus_1, u8 - i32 AS u8_i32, u8 - i32 + INT32(1) AS u8_i32_plus_1, u8 - i64 AS u8_i64, u8 - i64 + INT64(1) AS u8_i64_plus_1, u8 - u8  AS u8_u8, u8 - u8 + UINT8(1) AS u8_u8_plus_1, u8 - u16 AS u8_u16, u8 - u16 + UINT16(1) AS u8_u16_plus_1, u8 - u32 AS u8_u32, u8 - u32 + UINT32(1) AS u8_u32_plus_1, u8 - u64 AS u8_u64, u8 - u64 + UINT64(1) AS u8_u64_plus_1, u8 - f32 AS u8_f32, u8 - f32 + FLOAT32(1) AS u8_f32_plus_1, u8 - f64 AS u8_f64, u8 - f64 + FLOAT64(1) AS u8_f64_plus_1 FROM FunctionSub_stream INTO CHECKSUM"
    "test_name": "function/arithmetical/FunctionAdd.test"
  - "query": "SELECT u16 - i8 AS u16_i8, u16 - i8 + INT8(1) AS u16_i8_plus_1, u16 - i16 AS u16_i16, u16 - i16 + INT16(1) AS u16_i16_plus_1, u16 - i32 AS u16_i32, u16 - i32 + INT32(1) AS u16_i32_plus_1, u16 - i64 AS u16_i64, u16 - i64 + INT64(1) AS u16_i64_plus_1, u16 - u8 AS u16_u8, u16 - u8 + UINT8(1) AS u16_u8_plus_1, u16 - i16 AS u16_u16, u16 - i16 + INT16(1) AS u16_u16_plus_1, u16 - u32 AS u16_u32, u16 - u32 + UINT32(1) AS u16_u32_plus_1, u16 - u64 AS u16_u64, u16 - u64 + UINT32(1) AS u16_u64_plus_1, u16 - f32 AS u16_f32, u16 - f32 + FLOAT32(1) AS u16_f32_plus_1, u16 - f64 AS u16_f64, u16 - f64 + FLOAT64(1) AS u16_f64_plus_1 FROM FunctionSub_stream INTO CHECKSUM"
    "test_name": "function/arithmetical/FunctionAdd.test"
  - "query": "SELECT u32 - i8 AS u32_i8, u32 - i8 + INT8(1) AS u32_i8_plus_1, u32 - i16 AS u32_i16, u32 - i16 + INT16(1) AS u32_i16_plus_1, u32 - i32 AS u32_i32, u32 - i32 + INT32(1) AS u32_i32_plus_1, u32 - i64 AS u32_i64, u32 - i64 + INT64(1) AS u32_i64_plus_1, u32 - u8 AS u32_u8, u32 - u8 + UINT32(1) AS u32_u8_plus_1, u32 - u16 AS u32_u16, u32 - u16 + UINT32(1) AS u32_u16_plus_1, u32 - u32 AS u32_u32, u32 - u32 + UINT32(1) AS u32_u32_plus_1, u32 - u64 AS u32_u64, u32 - u64 + UINT32(1) AS u32_u64_plus_1, u32 - f32 AS u32_f32, u32 - f32 + FLOAT32(1) AS u32_f32_plus_1, u32 - f64 AS u32_f64, u32 - f64 + FLOAT64(1) AS u32_f64_plus_1 FROM FunctionSub_stream INTO CHECKSUM"
    "test_name": "function/arithmetical/FunctionAdd.test"
  - "query": "SELECT u64 - i8 AS u64_i8, u64 - i8 + INT8(1) AS u64_i8_plus_1, u64 - i16 AS u64_i16, u64 - i16 + INT16(1) AS u64_i16_plus_1, u64 - i32 AS u64_i32, u64 - i32 + INT32(1) AS u64_i32_plus_1, u64 - i64 AS u64_i64, u64 - i64 + INT64(1) AS u64_i64_plus_1, u64 - u8 AS u64_u8, u64 - u8 + UINT32(1) AS u64_u8_plus_1, u64 - u16 AS u64_u16, u64 - u16 + UINT32(1) AS u64_u16_plus_1, u64 - u32 AS u64_u32, u64 - u32 + UINT32(1) AS u64_u32_plus_1, u64 - u64 AS u64_u64, u64 - u64 + UINT32(1) AS u64_u64_plus_1, u64 - f32 AS u64_f32, u64 - f32 + FLOAT32(1) AS u64_f32_plus_1, u64 - f64 AS u64_f64, u64 - f64 + FLOAT64(1) AS u64_f64_plus_1 FROM FunctionSub_stream INTO CHECKSUM"
    "test_name": "function/arithmetical/FunctionAdd.test"
  - "query": "SELECT f32 - i8 AS f32_i8, f32 - i8 + INT8(1) AS f32_i8_plus_1, f32 - i16 AS f32_i16, f32 - i16 + INT16(1) AS f32_i16_plus_1, f32 - i32 AS f32_i32, f32 - i32 + INT32(1) AS f32_i32_plus_1, f32 - i64 AS f32_i64, f32 - i64 + INT64(1) AS f32_i64_plus_1, f32 - u8 AS f32_u8, f32 - u8 + UINT32(1) AS f32_u8_plus_1, f32 - u16 AS f32_u16, f32 - u16 + UINT32(1) AS f32_u16_plus_1, f32 - u32 AS f32_u32, f32 - u32 + UINT32(1) AS f32_u32_plus_1, f32 - u64 AS f32_u64, f32 - u64 + UINT32(1) AS f32_u64_plus_1, f32 - f32 AS f32_f32, f32 - f32 + FLOAT32(1) AS f32_f32_plus_1, f32 - f64 AS f32_f64, f32 - f64 + FLOAT64(1) AS f32_f64_plus_1 FROM FunctionSub_stream INTO CHECKSUM"
    "test_name": "function/arithmetical/FunctionAdd.test"
  - "query": "SELECT f64 - i8 AS f64_i8, f64 - i8 + INT8(1) AS f64_i8_plus_1, f64 - i16 AS f64_i16, f64 - i16 + INT16(1) AS f64_i16_plus_1, f64 - i32 AS f64_i32, f64 - i32 + INT32(1) AS f64_i32_plus_1, f64 - i64 AS f64_i64, f64 - i64 + INT64(1) AS f64_i64_plus_1, f64 - u8 AS f64_u8, f64 - u8 + UINT32(1) AS f64_u8_plus_1, f64 - u16 AS f64_u16, f64 - u16 + UINT32(1) AS f64_u16_plus_1, f64 - u32 AS f64_u32, f64 - u32 + UINT32(1) AS f64_u32_plus_1, f64 - u64 AS f64_u64, f64 - u64 + UINT32(1) AS f64_u64_plus_1, f64 - f32 AS f64_f32, f64 - f32 + FLOAT32(1) AS f64_f32_plus_1, f64 - f64 AS f64_f64, f64 - f64 + FLOAT64(1) AS f64_f64_plus_1 FROM FunctionSub_stream INTO CHECKSUM"
    "test_name": "function/arithmetical/FunctionAdd.test"
  "Join":
  - "query": "SELECT * FROM (SELECT * FROM JoinMultipleStreams_stream) INNER JOIN (SELECT * FROM JoinMultipleStreams_stream2) ON id = id2 WINDOW TUMBLING (timestamp, size 1 sec) INNER JOIN (SELECT * FROM JoinMultipleStreams_stream4) ON id = id4 WINDOW TUMBLING (timestamp, size 1 sec) INTO CHECKSUM"
    "test_name": "join/JoinMultipleStreams.test"
  - "query": "SELECT * FROM (SELECT * FROM JoinMultipleStreams_stream) INNER JOIN (SELECT * FROM JoinMultipleStreams_stream2) ON id = id2 WINDOW TUMBLING (timestamp, size 1 sec) INNER JOIN (SELECT * FROM JoinMultipleStreams_stream4) ON id = id4 WINDOW TUMBLING (timestamp, size 1 sec) INNER JOIN (SELECT * FROM JoinMultipleStreams_stream4_1) ON id = id4_1 WINDOW TUMBLING (timestamp, size 1 sec) INTO CHECKSUM"
    "test_name": "join/JoinMultipleStreams.test"
  - "query": "SELECT * FROM (SELECT * FROM JoinMultipleStreams_stream7) INNER JOIN (SELECT * FROM JoinMultipleStreams_stream7_1) ON id7 = id7_1 WINDOW SLIDING (timestamp, size 1 sec, advance by 250 ms) INTO CHECKSUM"
    "test_name": "join/JoinMultipleStreams.test"
  - "query": "SELECT * FROM (SELECT * FROM JoinMultipleStreams_stream) INNER JOIN (SELECT * FROM JoinMultipleStreams_stream2) ON id = id2 WINDOW SLIDING (timestamp, size 1 sec, advance by 500 ms) INNER JOIN (SELECT * FROM JoinMultipleStreams_stream4) ON id = id4 WINDOW SLIDING (timestamp, size 1 sec, advance by 500 ms) INNER JOIN (SELECT * FROM JoinMultipleStreams_stream4_1) ON id = id4_1 WINDOW SLIDING (timestamp, size 1 sec, advance by 500 ms) INTO CHECKSUM"
    "test_name": "join/JoinMultipleStreams.test"
  - "query": "SELECT * FROM (SELECT * FROM JoinWithDifferentDataTypes_stream1) JOIN (SELECT * FROM JoinWithDifferentDataTypes_stream2) ON i16_s1 = i8_s2 and i16_s1 = i16_s2 and i16_s1 = i32_s2 and i16_s1 = i64_s2 and i16_s1 = u8_s2 and i16_s1 = u16_s2 and i16_s1 = u32_s2 and i16_s1 = u64_s2 and i16_s1 = f32_s2 and i16_s1 = f64_s2 WINDOW TUMBLING (ts, size 1 sec) INTO CHECKSUM"
    "test_name": "join/JoinWithDifferentDataTypes.test"
  - "query": "SELECT * FROM (SELECT * FROM JoinWithDifferentDataTypes_stream1) JOIN (SELECT * FROM JoinWithDifferentDataTypes_stream2) ON i32_s1 = i8_s2 and i32_s1 = i16_s2 and i32_s1 = i32_s2 and i32_s1 = i64_s2 and i32_s1 = u8_s2 and i32_s1 = u16_s2 and i32_s1 = u32_s2 and i32_s1 = u64_s2 and i32_s1 = f32_s2 and i32_s1 = f64_s2 WINDOW TUMBLING (ts, size 1 sec) INTO CHECKSUM"
    "test_name": "join/JoinWithDifferentDataTypes.test"
  - "query": "SELECT * FROM (SELECT * FROM JoinWithDifferentDataTypes_stream1) JOIN (SELECT * FROM JoinWithDifferentDataTypes_stream2) ON i64_s1 = i8_s2 and i64_s1 = i16_s2 and i64_s1 = i32_s2 and i64_s1 = i64_s2 and i64_s1 = u8_s2 and i64_s1 = u16_s2 and i64_s1 = u32_s2 and i64_s1 = u64_s2 and i64_s1 = f32_s2 and i64_s1 = f64_s2 WINDOW TUMBLING (ts, size 1 sec) INTO CHECKSUM"
    "test_name": "join/JoinWithDifferentDataTypes.test"
  - "query": "SELECT * FROM (SELECT * FROM JoinWithDifferentDataTypes_stream1) JOIN (SELECT * FROM JoinWithDifferentDataTypes_stream2) ON u8_s1 = i8_s2 and u8_s1 = i16_s2 and u8_s1 = i32_s2 and u8_s1 = i64_s2 and u8_s1 = u8_s2 and u8_s1 = u16_s2 and u8_s1 = u32_s2 and u8_s1 = u64_s2 and u8_s1 = f32_s2 and u8_s1 = f64_s2 WINDOW TUMBLING (ts, size 1 sec) INTO CHECKSUM"
    "test_name": "join/JoinWithDifferentDataTypes.test"
  - "query": "SELECT * FROM (SELECT * FROM JoinWithDifferentDataTypes_stream1) JOIN (SELECT * FROM JoinWithDifferentDataTypes_stream2) ON u16_s1 = i8_s2 and u16_s1 = i16_s2 and u16_s1 = i32_s2 and u16_s1 = i64_s2 and u16_s1 = u8_s2 and u16_s1 = u16_s2 and u16_s1 = u32_s2 and u16_s1 = u64_s2 and u16_s1 = f32_s2 and u16_s1 = f64_s2 WINDOW TUMBLING (ts, size 1 sec) INTO CHECKSUM"
    "test_name": "join/JoinWithDifferentDataTypes.test"
  - "query": "SELECT * FROM (SELECT * FROM JoinWithDifferentDataTypes_stream1) JOIN (SELECT * FROM JoinWithDifferentDataTypes_stream2) ON u32_s1 = i8_s2 and u32_s1 = i16_s2 and u32_s1 = i32_s2 and u32_s1 = i64_s2 and u32_s1 = u8_s2 and u32_s1 = u16_s2 and u32_s1 = u32_s2 and u32_s1 = u64_s2 and u32_s1 = f32_s2 and u32_s1 = f64_s2 WINDOW TUMBLING (ts, size 1 sec) INTO CHECKSUM"
    "test_name": "join/JoinWithDifferentDataTypes.test"
  - "query": "SELECT * FROM (SELECT * FROM JoinWithDifferentDataTypes_stream1) JOIN (SELECT * FROM JoinWithDifferentDataTypes_stream2) ON u64_s1 = i8_s2 and u64_s1 = i16_s2 and u64_s1 = i32_s2 and u64_s1 = i64_s2 and u64_s1 = u8_s2 and u64_s1 = u16_s2 and u64_s1 = u32_s2 and u64_s1 = u64_s2 and u64_s1 = f32_s2 and u64_s1 = f64_s2 WINDOW TUMBLING (ts, size 1 sec) INTO CHECKSUM"
    "test_name": "join/JoinWithDifferentDataTypes.test"
  - "query": "SELECT * FROM (SELECT * FROM JoinWithDifferentDataTypes_stream1) JOIN (SELECT * FROM JoinWithDifferentDataTypes_stream2) ON f32_s1 = i8_s2 and f32_s1 = i16_s2 and f32_s1 = i32_s2 and f32_s1 = i64_s2 and f32_s1 = u8_s2 and f32_s1 = u16_s2 and f32_s1 = u32_s2 and f32_s1 = u64_s2 and f32_s1 = f32_s2 and f32_s1 = f64_s2 WINDOW TUMBLING (ts, size 1 sec) INTO CHECKSUM"
    "test_name": "join/JoinWithDifferentDataTypes.test"
  - "query": "SELECT * FROM (SELECT * FROM JoinWithDifferentDataTypes_stream1) JOIN (SELECT * FROM JoinWithDifferentDataTypes_stream2) ON f64_s1 = i8_s2 and f64_s1 = i16_s2 and f64_s1 = i32_s2 and f64_s1 = i64_s2 and f64_s1 = u8_s2 and f64_s1 = u16_s2 and f64_s1 = u32_s2 and f64_s1 = u64_s2 and f64_s1 = f32_s2 and f64_s1 = f64_s2 WINDOW TUMBLING (ts, size 1 sec) INTO CHECKSUM"
    "test_name": "join/JoinWithDifferentDataTypes.test"
  - "query": "SELECT * FROM (SELECT * FROM JoinMultipleStreams_stream) INNER JOIN (SELECT * FROM JoinMultipleStreams_stream2) ON id = id2 WINDOW TUMBLING (timestamp, size 1 sec) INNER JOIN (SELECT * FROM JoinMultipleStreams_stream4) ON id = id4 WINDOW TUMBLING (timestamp, size 1 sec) INTO CHECKSUM"
    "test_name": "join/JoinMultipleStreams.test"
  - "query": "SELECT * FROM (SELECT * FROM JoinMultipleStreams_stream) INNER JOIN (SELECT * FROM JoinMultipleStreams_stream2) ON id = id2 WINDOW TUMBLING (timestamp, size 1 sec) INNER JOIN (SELECT * FROM JoinMultipleStreams_stream4) ON id = id4 WINDOW TUMBLING (timestamp, size 1 sec) INNER JOIN (SELECT * FROM JoinMultipleStreams_stream4_1) ON id = id4_1 WINDOW TUMBLING (timestamp, size 1 sec) INTO CHECKSUM"
    "test_name": "join/JoinMultipleStreams.test"
  - "query": "SELECT * FROM (SELECT * FROM JoinMultipleStreams_stream7) INNER JOIN (SELECT * FROM JoinMultipleStreams_stream7_1) ON id7 = id7_1 WINDOW SLIDING (timestamp, size 1 sec, advance by 250 ms) INTO CHECKSUM"
    "test_name": "join/JoinMultipleStreams.test"
  - "query": "SELECT * FROM (SELECT * FROM JoinMultipleStreams_stream) INNER JOIN (SELECT * FROM JoinMultipleStreams_stream2) ON id = id2 WINDOW SLIDING (timestamp, size 1 sec, advance by 500 ms) INNER JOIN (SELECT * FROM JoinMultipleStreams_stream4) ON id = id4 WINDOW SLIDING (timestamp, size 1 sec, advance by 500 ms) INNER JOIN (SELECT * FROM JoinMultipleStreams_stream4_1) ON id = id4_1 WINDOW SLIDING (timestamp, size 1 sec, advance by 500 ms) INTO CHECKSUM"
    "test_name": "join/JoinMultipleStreams.test"
  - "query": "SELECT * FROM (SELECT * FROM JoinWithDifferentDataTypes_stream1) JOIN (SELECT * FROM JoinWithDifferentDataTypes_stream2) ON i16_s1 = i8_s2 and i16_s1 = i16_s2 and i16_s1 = i32_s2 and i16_s1 = i64_s2 and i16_s1 = u8_s2 and i16_s1 = u16_s2 and i16_s1 = u32_s2 and i16_s1 = u64_s2 and i16_s1 = f32_s2 and i16_s1 = f64_s2 WINDOW TUMBLING (ts, size 1 sec) INTO CHECKSUM"
    "test_name": "join/JoinWithDifferentDataTypes.test"
  - "query": "SELECT * FROM (SELECT * FROM JoinWithDifferentDataTypes_stream1) JOIN (SELECT * FROM JoinWithDifferentDataTypes_stream2) ON i32_s1 = i8_s2 and i32_s1 = i16_s2 and i32_s1 = i32_s2 and i32_s1 = i64_s2 and i32_s1 = u8_s2 and i32_s1 = u16_s2 and i32_s1 = u32_s2 and i32_s1 = u64_s2 and i32_s1 = f32_s2 and i32_s1 = f64_s2 WINDOW TUMBLING (ts, size 1 sec) INTO CHECKSUM"
    "test_name": "join/JoinWithDifferentDataTypes.test"
  - "query": "SELECT * FROM (SELECT * FROM JoinWithDifferentDataTypes_stream1) JOIN (SELECT * FROM JoinWithDifferentDataTypes_stream2) ON i64_s1 = i8_s2 and i64_s1 = i16_s2 and i64_s1 = i32_s2 and i64_s1 = i64_s2 and i64_s1 = u8_s2 and i64_s1 = u16_s2 and i64_s1 = u32_s2 and i64_s1 = u64_s2 and i64_s1 = f32_s2 and i64_s1 = f64_s2 WINDOW TUMBLING (ts, size 1 sec) INTO CHECKSUM"
    "test_name": "join/JoinWithDifferentDataTypes.test"
  - "query": "SELECT * FROM (SELECT * FROM JoinWithDifferentDataTypes_stream1) JOIN (SELECT * FROM JoinWithDifferentDataTypes_stream2) ON u8_s1 = i8_s2 and u8_s1 = i16_s2 and u8_s1 = i32_s2 and u8_s1 = i64_s2 and u8_s1 = u8_s2 and u8_s1 = u16_s2 and u8_s1 = u32_s2 and u8_s1 = u64_s2 and u8_s1 = f32_s2 and u8_s1 = f64_s2 WINDOW TUMBLING (ts, size 1 sec) INTO CHECKSUM"
    "test_name": "join/JoinWithDifferentDataTypes.test"
  - "query": "SELECT * FROM (SELECT * FROM JoinWithDifferentDataTypes_stream1) JOIN (SELECT * FROM JoinWithDifferentDataTypes_stream2) ON u16_s1 = i8_s2 and u16_s1 = i16_s2 and u16_s1 = i32_s2 and u16_s1 = i64_s2 and u16_s1 = u8_s2 and u16_s1 = u16_s2 and u16_s1 = u32_s2 and u16_s1 = u64_s2 and u16_s1 = f32_s2 and u16_s1 = f64_s2 WINDOW TUMBLING (ts, size 1 sec) INTO CHECKSUM"
    "test_name": "join/JoinWithDifferentDataTypes.test"
  - "query": "SELECT * FROM (SELECT * FROM JoinWithDifferentDataTypes_stream1) JOIN (SELECT * FROM JoinWithDifferentDataTypes_stream2) ON u32_s1 = i8_s2 and u32_s1 = i16_s2 and u32_s1 = i32_s2 and u32_s1 = i64_s2 and u32_s1 = u8_s2 and u32_s1 = u16_s2 and u32_s1 = u32_s2 and u32_s1 = u64_s2 and u32_s1 = f32_s2 and u32_s1 = f64_s2 WINDOW TUMBLING (ts, size 1 sec) INTO CHECKSUM"
    "test_name": "join/JoinWithDifferentDataTypes.test"
  - "query": "SELECT * FROM (SELECT * FROM JoinWithDifferentDataTypes_stream1) JOIN (SELECT * FROM JoinWithDifferentDataTypes_stream2) ON u64_s1 = i8_s2 and u64_s1 = i16_s2 and u64_s1 = i32_s2 and u64_s1 = i64_s2 and u64_s1 = u8_s2 and u64_s1 = u16_s2 and u64_s1 = u32_s2 and u64_s1 = u64_s2 and u64_s1 = f32_s2 and u64_s1 = f64_s2 WINDOW TUMBLING (ts, size 1 sec) INTO CHECKSUM"
    "test_name": "join/JoinWithDifferentDataTypes.test"
  - "query": "SELECT * FROM (SELECT * FROM JoinWithDifferentDataTypes_stream1) JOIN (SELECT * FROM JoinWithDifferentDataTypes_stream2) ON f32_s1 = i8_s2 and f32_s1 = i16_s2 and f32_s1 = i32_s2 and f32_s1 = i64_s2 and f32_s1 = u8_s2 and f32_s1 = u16_s2 and f32_s1 = u32_s2 and f32_s1 = u64_s2 and f32_s1 = f32_s2 and f32_s1 = f64_s2 WINDOW TUMBLING (ts, size 1 sec) INTO CHECKSUM"
    "test_name": "join/JoinWithDifferentDataTypes.test"
  - "query": "SELECT * FROM (SELECT * FROM JoinWithDifferentDataTypes_stream1) JOIN (SELECT * FROM JoinWithDifferentDataTypes_stream2) ON f64_s1 = i8_s2 and f64_s1 = i16_s2 and f64_s1 = i32_s2 and f64_s1 = i64_s2 and f64_s1 = u8_s2 and f64_s1 = u16_s2 and f64_s1 = u32_s2 and f64_s1 = u64_s2 and f64_s1 = f32_s2 and f64_s1 = f64_s2 WINDOW TUMBLING (ts, size 1 sec) INTO CHECKSUM"
    "test_name": "join/JoinWithDifferentDataTypes.test"
  "Map":
  - "query": "SELECT id_x_3, value, timestamp FROM (SELECT id * UINT32(3) AS id_x_3, value, timestamp FROM Filter_Map_Queries_stream WHERE value != UINT32(1)) WHERE id_x_3 != UINT32(9) AND value != UINT32(312) INTO CHECKSUM"
    "test_name": "milestone/Filter_Map_Queries.test"
  - "query": "SELECT id * UINT32(9) AS id_x_3, value, timestamp FROM Filter_Map_Queries_stream WHERE value != UINT32(1) INTO CHECKSUM"
    "test_name": "milestone/Filter_Map_Queries.test"
  - "query": "SELECT id * UINT32(3) / value + value * UINT32(2) AS id_new, value * UINT32(25) - (id * UINT32(3) / value + value * UINT32(2)) * UINT32(5) - UINT32(125) AS value_new, timestamp FROM Filter_Map_Queries_stream INTO CHECKSUM"
    "test_name": "milestone/Filter_Map_Queries.test"
  - "query": "SELECT id + value AS id, value, timestamp FROM Map_Add_stream INTO CHECKSUM"
    "test_name": "map/Map_Add.test"
  - "query": "SELECT id, value, timestamp, id + value AS new FROM Map_Add_stream INTO CHECKSUM"
    "test_name": "map/Map_Add.test"
  - "query": "SELECT id + UINT64(1) + value AS id, value, timestamp FROM Map_Add_stream INTO CHECKSUM"
    "test_name": "map/Map_Add.test"
  - "query": "SELECT id + UINT64(1) AS id, value, timestamp, id + value AS new, new + value AS new2 FROM Map_Add_stream INTO CHECKSUM"
    "test_name": "map/Map_Add.test"
  - "query": "SELECT value + (id + UINT64(1)) + value AS new2, (id + UINT64(1)) + new2 AS id FROM Map_Add_stream INTO CHECKSUM"
    "test_name": "map/Map_Add.test"
  - "query": "SELECT id / value AS id, value, timestamp FROM Map_Div_stream INTO CHECKSUM"
    "test_name": "map/Map_Div.test"
  - "query": "SELECT id, value, timestamp, id / value AS new FROM Map_Div_stream INTO CHECKSUM"
    "test_name": "map/Map_Div.test"
  - "query": "SELECT id / UINT32(5) AS id, value / id AS value, timestamp FROM Map_Div_stream INTO CHECKSUM"
    "test_name": "map/Map_Div.test"
  - "query": "SELECT id * value AS id, value, timestamp FROM Map_Mul_stream INTO CHECKSUM"
    "test_name": "map/Map_Add.test"
  - "query": "SELECT id, value, timestamp, id * value AS new FROM Map_Mul_stream INTO CHECKSUM"
    "test_name": "map/Map_Add.test"
  - "query": "SELECT id * UINT32(3) AS id, id * value AS value, timestamp FROM Map_Mul_stream INTO CHECKSUM"
    "test_name": "map/Map_Add.test"
  - "query": "SELECT id - value AS id, value, timestamp FROM Map_Sub_stream INTO CHECKSUM"
    "test_name": "map/Map_Sub.test"
  - "query": "SELECT id, value, timestamp, id - value AS new FROM Map_Sub_stream INTO CHECKSUM"
    "test_name": "map/Map_Sub.test"
  - "query": "SELECT id - UINT32(1) AS id, value - id AS value, timestamp FROM Map_Sub_stream INTO CHECKSUM"
    "test_name": "map/Map_Sub.test"
  - "query": "SELECT id FROM ProjectionWithFilterAndMap_stream WHERE timestamp == UINT64(1002) AND value == UINT64(1) INTO CHECKSUM"
    "test_name": "projection/ProjectionWithFilterAndMap.test"
  - "query": "SELECT id FROM ProjectionWithFilterAndMap_stream WHERE id == UINT64(1) INTO CHECKSUM"
    "test_name": "projection/ProjectionWithFilterAndMap.test"
  - "query": "SELECT id * UINT64(2) AS id FROM ProjectionWithFilterAndMap_stream WHERE id == UINT64(1) INTO CHECKSUM"
    "test_name": "projection/ProjectionWithFilterAndMap.test"
  - "query": "SELECT new_id FROM (SELECT id * UINT64(2) AS new_id FROM ProjectionWithFilterAndMap_stream) WHERE new_id == UINT64(2) INTO CHECKSUM"
    "test_name": "projection/ProjectionWithFilterAndMap.test"
  - "query": "SELECT id * UINT64(2) AS new_id FROM ProjectionWithFilterAndMap_stream WHERE id == UINT64(1) INTO CHECKSUM"
    "test_name": "projection/ProjectionWithFilterAndMap.test"
  - "query": "SELECT id + value AS id, value, timestamp FROM Map_Add_stream INTO CHECKSUM"
    "test_name": "map/Map_Add.test"
  - "query": "SELECT id, value, timestamp, id + value AS new FROM Map_Add_stream INTO CHECKSUM"
    "test_name": "map/Map_Add.test"
  - "query": "SELECT id + UINT64(1) + value AS id, value, timestamp FROM Map_Add_stream INTO CHECKSUM"
    "test_name": "map/Map_Add.test"
  - "query": "SELECT id + UINT64(1) AS id, value, timestamp, id + value AS new, new + value AS new2 FROM Map_Add_stream INTO CHECKSUM"
    "test_name": "map/Map_Add.test"
  - "query": "SELECT value + (id + UINT64(1)) + value AS new2, (id + UINT64(1)) + new2 AS id FROM Map_Add_stream INTO CHECKSUM"
    "test_name": "map/Map_Add.test"
  - "query": "SELECT id / value AS id, value, timestamp FROM Map_Div_stream INTO CHECKSUM"
    "test_name": "map/Map_Div.test"
  - "query": "SELECT id, value, timestamp, id / value AS new FROM Map_Div_stream INTO CHECKSUM"
    "test_name": "map/Map_Div.test"
  - "query": "SELECT id / UINT32(5) AS id, value / id AS value, timestamp FROM Map_Div_stream INTO CHECKSUM"
    "test_name": "map/Map_Div.test"
  - "query": "SELECT id * value AS id, value, timestamp FROM Map_Mul_stream INTO CHECKSUM"
    "test_name": "map/Map_Add.test"
  - "query": "SELECT id, value, timestamp, id * value AS new FROM Map_Mul_stream INTO CHECKSUM"
    "test_name": "map/Map_Add.test"
  - "query": "SELECT id * UINT32(3) AS id, id * value AS value, timestamp FROM Map_Mul_stream INTO CHECKSUM"
    "test_name": "map/Map_Add.test"
  - "query": "SELECT id - value AS id, value, timestamp FROM Map_Sub_stream INTO CHECKSUM"
    "test_name": "map/Map_Sub.test"
  - "query": "SELECT id, value, timestamp, id - value AS new FROM Map_Sub_stream INTO CHECKSUM"
    "test_name": "map/Map_Sub.test"
  - "query": "SELECT id - UINT32(1) AS id, value - id AS value, timestamp FROM Map_Sub_stream INTO CHECKSUM"
    "test_name": "map/Map_Sub.test"
  - "query": "SELECT id_x_3, value, timestamp FROM (SELECT id * UINT32(3) AS id_x_3, value, timestamp FROM Filter_Map_Queries_stream WHERE value != UINT32(1)) WHERE id_x_3 != UINT32(9) AND value != UINT32(312) INTO CHECKSUM"
    "test_name": "milestone/Filter_Map_Queries.test"
  - "query": "SELECT id * UINT32(9) AS id_x_3, value, timestamp FROM Filter_Map_Queries_stream WHERE value != UINT32(1) INTO CHECKSUM"
    "test_name": "milestone/Filter_Map_Queries.test"
  - "query": "SELECT id * UINT32(3) / value + value * UINT32(2) AS id_new, value * UINT32(25) - (id * UINT32(3) / value + value * UINT32(2)) * UINT32(5) - UINT32(125) AS value_new, timestamp FROM Filter_Map_Queries_stream INTO CHECKSUM"
    "test_name": "milestone/Filter_Map_Queries.test"
  - "query": "SELECT id FROM ProjectionWithFilterAndMap_stream WHERE timestamp == UINT64(1002) AND value == UINT64(1) INTO CHECKSUM"
    "test_name": "projection/ProjectionWithFilterAndMap.test"
  - "query": "SELECT id FROM ProjectionWithFilterAndMap_stream WHERE id == UINT64(1) INTO CHECKSUM"
    "test_name": "projection/ProjectionWithFilterAndMap.test"
  - "query": "SELECT id * UINT64(2) AS id FROM ProjectionWithFilterAndMap_stream WHERE id == UINT64(1) INTO CHECKSUM"
    "test_name": "projection/ProjectionWithFilterAndMap.test"
  - "query": "SELECT new_id FROM (SELECT id * UINT64(2) AS new_id FROM ProjectionWithFilterAndMap_stream) WHERE new_id == UINT64(2) INTO CHECKSUM"
    "test_name": "projection/ProjectionWithFilterAndMap.test"
  - "query": "SELECT id * UINT64(2) AS new_id FROM ProjectionWithFilterAndMap_stream WHERE id == UINT64(1) INTO CHECKSUM"
    "test_name": "projection/ProjectionWithFilterAndMap.test"
  "Parser":
  "Projection":
  - "query": "SELECT value FROM Projection_stream INTO CHECKSUM"
    "test_name": "projection/Projection.test"
  - "query": "SELECT timestamp FROM Projection_stream INTO CHECKSUM"
    "test_name": "projection/Projection.test"
  - "query": "SELECT id, value FROM Projection_stream INTO CHECKSUM"
    "test_name": "projection/Projection.test"
  - "query": "SELECT id, timestamp FROM Projection_stream INTO CHECKSUM"
    "test_name": "projection/Projection.test"
  - "query": "SELECT value, timestamp FROM Projection_stream INTO CHECKSUM"
    "test_name": "projection/Projection.test"
  - "query": "SELECT id, value, timestamp FROM Projection_stream INTO CHECKSUM"
    "test_name": "projection/Projection.test"
  - "query": "SELECT id, timestamp, value FROM Projection_stream INTO CHECKSUM"
    "test_name": "projection/Projection.test"
  - "query": "SELECT value, id, timestamp FROM Projection_stream INTO CHECKSUM"
    "test_name": "projection/Projection.test"
  - "query": "SELECT value, timestamp, id FROM Projection_stream INTO CHECKSUM"
    "test_name": "projection/Projection.test"
  - "query": "SELECT timestamp, id, value FROM Projection_stream INTO CHECKSUM"
    "test_name": "projection/Projection.test"
  - "query": "SELECT timestamp, value, id FROM Projection_stream INTO CHECKSUM"
    "test_name": "projection/Projection.test"
  - "query": "SELECT id FROM ProjectionWithFilterAndMap_stream WHERE timestamp == UINT64(1002) AND value == UINT64(1) INTO CHECKSUM"
    "test_name": "projection/ProjectionWithFilterAndMap.test"
  - "query": "SELECT id FROM ProjectionWithFilterAndMap_stream WHERE id == UINT64(1) INTO CHECKSUM"
    "test_name": "projection/ProjectionWithFilterAndMap.test"
  - "query": "SELECT id * UINT64(2) AS id FROM ProjectionWithFilterAndMap_stream WHERE id == UINT64(1) INTO CHECKSUM"
    "test_name": "projection/ProjectionWithFilterAndMap.test"
  - "query": "SELECT new_id FROM (SELECT id * UINT64(2) AS new_id FROM ProjectionWithFilterAndMap_stream) WHERE new_id == UINT64(2) INTO CHECKSUM"
    "test_name": "projection/ProjectionWithFilterAndMap.test"
  - "query": "SELECT id * UINT64(2) AS new_id FROM ProjectionWithFilterAndMap_stream WHERE id == UINT64(1) INTO CHECKSUM"
    "test_name": "projection/ProjectionWithFilterAndMap.test"
  - "query": "SELECT value FROM Projection_stream INTO CHECKSUM"
    "test_name": "projection/Projection.test"
  - "query": "SELECT timestamp FROM Projection_stream INTO CHECKSUM"
    "test_name": "projection/Projection.test"
  - "query": "SELECT id, value FROM Projection_stream INTO CHECKSUM"
    "test_name": "projection/Projection.test"
  - "query": "SELECT id, timestamp FROM Projection_stream INTO CHECKSUM"
    "test_name": "projection/Projection.test"
  - "query": "SELECT value, timestamp FROM Projection_stream INTO CHECKSUM"
    "test_name": "projection/Projection.test"
  - "query": "SELECT id, value, timestamp FROM Projection_stream INTO CHECKSUM"
    "test_name": "projection/Projection.test"
  - "query": "SELECT id, timestamp, value FROM Projection_stream INTO CHECKSUM"
    "test_name": "projection/Projection.test"
  - "query": "SELECT value, id, timestamp FROM Projection_stream INTO CHECKSUM"
    "test_name": "projection/Projection.test"
  - "query": "SELECT value, timestamp, id FROM Projection_stream INTO CHECKSUM"
    "test_name": "projection/Projection.test"
  - "query": "SELECT timestamp, id, value FROM Projection_stream INTO CHECKSUM"
    "test_name": "projection/Projection.test"
  - "query": "SELECT timestamp, value, id FROM Projection_stream INTO CHECKSUM"
    "test_name": "projection/Projection.test"
  - "query": "SELECT id FROM ProjectionWithFilterAndMap_stream WHERE timestamp == UINT64(1002) AND value == UINT64(1) INTO CHECKSUM"
    "test_name": "projection/ProjectionWithFilterAndMap.test"
  - "query": "SELECT id FROM ProjectionWithFilterAndMap_stream WHERE id == UINT64(1) INTO CHECKSUM"
    "test_name": "projection/ProjectionWithFilterAndMap.test"
  - "query": "SELECT id * UINT64(2) AS id FROM ProjectionWithFilterAndMap_stream WHERE id == UINT64(1) INTO CHECKSUM"
    "test_name": "projection/ProjectionWithFilterAndMap.test"
  - "query": "SELECT new_id FROM (SELECT id * UINT64(2) AS new_id FROM ProjectionWithFilterAndMap_stream) WHERE new_id == UINT64(2) INTO CHECKSUM"
    "test_name": "projection/ProjectionWithFilterAndMap.test"
  - "query": "SELECT id * UINT64(2) AS new_id FROM ProjectionWithFilterAndMap_stream WHERE id == UINT64(1) INTO CHECKSUM"
    "test_name": "projection/ProjectionWithFilterAndMap.test"
  "Selection":
  - "query": "SELECT * FROM Selection_stream WHERE value != UINT64(1) INTO CHECKSUM"
    "test_name": "selection/Selection.test"
  - "query": "SELECT * FROM Selection_Equals_stream WHERE value == UINT64(1234) INTO CHECKSUM"
    "test_name": "selection/Selection_Equals.test"
  - "query": "SELECT * FROM Selection_Equals_stream WHERE value == UINT64(1) AND id == UINT64(12) INTO CHECKSUM"
    "test_name": "selection/Selection_Equals.test"
  - "query": "SELECT * FROM Selection_Equals_stream WHERE value == UINT64(1) AND id == UINT64(1234) INTO CHECKSUM"
    "test_name": "selection/Selection_Equals.test"
  - "query": "SELECT * FROM Selection_Equals_streamWithText WHERE text1 == VARSIZED(\"test1\") INTO CHECKSUM"
    "test_name": "selection/Selection_Equals.test"
  - "query": "SELECT * FROM Selection_Equals_streamWithText WHERE text1 != VARSIZED(\"test3\") AND text1 == text2 AND id < UINT64(11) INTO CHECKSUM"
    "test_name": "selection/Selection_Equals.test"
  - "query": "SELECT * FROM Selection_Equals_streamWithText WHERE text1 == VARSIZED(\"test3\") AND text2 == VARSIZED(\"test1\") AND id == UINT64(11) INTO CHECKSUM"
    "test_name": "selection/Selection_Equals.test"
  - "query": "SELECT * FROM Selection_Equals_streamWithText WHERE CONCAT(text1, text2) == VARSIZED(\"test1test1\") INTO CHECKSUM"
    "test_name": "selection/Selection_Equals.test"
  - "query": "SELECT * FROM Selection_Equals_streamWithText WHERE CONCAT(text2, text1) == VARSIZED(\"test2test1\") AND id > UINT64(2) INTO CHECKSUM"
    "test_name": "selection/Selection_Equals.test"
  - "query": "SELECT * FROM Selection_NotEquals_stream WHERE value != UINT64(1234) INTO CHECKSUM"
    "test_name": "selection/Selection_NotEquals.test"
  - "query": "SELECT * FROM Selection_NotEquals_stream WHERE value != UINT64(1) AND id != UINT64(16) INTO CHECKSUM"
    "test_name": "selection/Selection_NotEquals.test"
  - "query": "SELECT * FROM Selection_NotEquals_stream WHERE value != UINT64(9999) AND id != UINT64(1234) INTO CHECKSUM"
    "test_name": "selection/Selection_NotEquals.test"
  - "query": "SELECT * FROM Selection_NotEquals_streamWithText WHERE text1 != VARSIZED(\"test1\") INTO CHECKSUM"
    "test_name": "selection/Selection_NotEquals.test"
  - "query": "SELECT * FROM Selection_NotEquals_streamWithText WHERE text1 != VARSIZED(\"test1\") AND text2 != VARSIZED(\"test2\") INTO CHECKSUM"
    "test_name": "selection/Selection_NotEquals.test"
  - "query": "SELECT * FROM Selection_NotEquals_streamWithText WHERE CONCAT(text1, text2) != VARSIZED(\"test1test1\") INTO CHECKSUM"
    "test_name": "selection/Selection_NotEquals.test"
  - "query": "SELECT * FROM Selection_NotEquals_streamWithText WHERE CONCAT(text1, text2) != VARSIZED(\"test1test1\") AND id <= UINT64(8) INTO CHECKSUM"
    "test_name": "selection/Selection_NotEquals.test"
  - "query": "SELECT * FROM Selection_stream WHERE value != UINT64(1) INTO CHECKSUM"
    "test_name": "selection/Selection.test"
  - "query": "SELECT * FROM Selection_Equals_stream WHERE value == UINT64(1234) INTO CHECKSUM"
    "test_name": "selection/Selection_Equals.test"
  - "query": "SELECT * FROM Selection_Equals_stream WHERE value == UINT64(1) AND id == UINT64(12) INTO CHECKSUM"
    "test_name": "selection/Selection_Equals.test"
  - "query": "SELECT * FROM Selection_Equals_stream WHERE value == UINT64(1) AND id == UINT64(1234) INTO CHECKSUM"
    "test_name": "selection/Selection_Equals.test"
  - "query": "SELECT * FROM Selection_Equals_streamWithText WHERE text1 == VARSIZED(\"test1\") INTO CHECKSUM"
    "test_name": "selection/Selection_Equals.test"
  - "query": "SELECT * FROM Selection_Equals_streamWithText WHERE text1 != VARSIZED(\"test3\") AND text1 == text2 AND id < UINT64(11) INTO CHECKSUM"
    "test_name": "selection/Selection_Equals.test"
  - "query": "SELECT * FROM Selection_Equals_streamWithText WHERE text1 == VARSIZED(\"test3\") AND text2 == VARSIZED(\"test1\") AND id == UINT64(11) INTO CHECKSUM"
    "test_name": "selection/Selection_Equals.test"
  - "query": "SELECT * FROM Selection_Equals_streamWithText WHERE CONCAT(text1, text2) == VARSIZED(\"test1test1\") INTO CHECKSUM"
    "test_name": "selection/Selection_Equals.test"
  - "query": "SELECT * FROM Selection_Equals_streamWithText WHERE CONCAT(text2, text1) == VARSIZED(\"test2test1\") AND id > UINT64(2) INTO CHECKSUM"
    "test_name": "selection/Selection_Equals.test"
  - "query": "SELECT * FROM Selection_NotEquals_stream WHERE value != UINT64(1234) INTO CHECKSUM"
    "test_name": "selection/Selection_NotEquals.test"
  - "query": "SELECT * FROM Selection_NotEquals_stream WHERE value != UINT64(1) AND id != UINT64(16) INTO CHECKSUM"
    "test_name": "selection/Selection_NotEquals.test"
  - "query": "SELECT * FROM Selection_NotEquals_stream WHERE value != UINT64(9999) AND id != UINT64(1234) INTO CHECKSUM"
    "test_name": "selection/Selection_NotEquals.test"
  - "query": "SELECT * FROM Selection_NotEquals_streamWithText WHERE text1 != VARSIZED(\"test1\") INTO CHECKSUM"
    "test_name": "selection/Selection_NotEquals.test"
  - "query": "SELECT * FROM Selection_NotEquals_streamWithText WHERE text1 != VARSIZED(\"test1\") AND text2 != VARSIZED(\"test2\") INTO CHECKSUM"
    "test_name": "selection/Selection_NotEquals.test"
  - "query": "SELECT * FROM Selection_NotEquals_streamWithText WHERE CONCAT(text1, text2) != VARSIZED(\"test1test1\") INTO CHECKSUM"
    "test_name": "selection/Selection_NotEquals.test"
  - "query": "SELECT * FROM Selection_NotEquals_streamWithText WHERE CONCAT(text1, text2) != VARSIZED(\"test1test1\") AND id <= UINT64(8) INTO CHECKSUM"
    "test_name": "selection/Selection_NotEquals.test"
  "Sources":
  - "query": "SELECT field_1 FROM TwoSourcesOneEmtpy_oneTuple INTO CHECKSUM"
    "test_name": "buffersize/TwoSourcesOneEmtpy.test"
  - "query": "SELECT field_1 FROM TwoSourcesOneEmtpy_oneTuple INTO CHECKSUM"
    "test_name": "buffersize/TwoSourcesOneEmtpy.test"
  "Tuples":
  - "query": "SELECT field_1 FROM TwoSources_sixTuples INTO CHECKSUM"
    "test_name": "sources/TESTDATACanNotAppearInTestName.test"
  - "query": "SELECT field_1 FROM TwoSources_sixTuples INTO CHECKSUM"
    "test_name": "sources/TESTDATACanNotAppearInTestName.test"
  "WindowOperators":
  - "query": "SELECT * FROM (SELECT * FROM JoinMultipleStreams_stream) INNER JOIN (SELECT * FROM JoinMultipleStreams_stream2) ON id = id2 WINDOW TUMBLING (timestamp, size 1 sec) INNER JOIN (SELECT * FROM JoinMultipleStreams_stream4) ON id = id4 WINDOW TUMBLING (timestamp, size 1 sec) INTO CHECKSUM"
    "test_name": "join/JoinMultipleStreams.test"
  - "query": "SELECT * FROM (SELECT * FROM JoinMultipleStreams_stream) INNER JOIN (SELECT * FROM JoinMultipleStreams_stream2) ON id = id2 WINDOW TUMBLING (timestamp, size 1 sec) INNER JOIN (SELECT * FROM JoinMultipleStreams_stream4) ON id = id4 WINDOW TUMBLING (timestamp, size 1 sec) INNER JOIN (SELECT * FROM JoinMultipleStreams_stream4_1) ON id = id4_1 WINDOW TUMBLING (timestamp, size 1 sec) INTO CHECKSUM"
    "test_name": "join/JoinMultipleStreams.test"
  - "query": "SELECT * FROM (SELECT * FROM JoinMultipleStreams_stream7) INNER JOIN (SELECT * FROM JoinMultipleStreams_stream7_1) ON id7 = id7_1 WINDOW SLIDING (timestamp, size 1 sec, advance by 250 ms) INTO CHECKSUM"
    "test_name": "join/JoinMultipleStreams.test"
  - "query": "SELECT * FROM (SELECT * FROM JoinMultipleStreams_stream) INNER JOIN (SELECT * FROM JoinMultipleStreams_stream2) ON id = id2 WINDOW SLIDING (timestamp, size 1 sec, advance by 500 ms) INNER JOIN (SELECT * FROM JoinMultipleStreams_stream4) ON id = id4 WINDOW SLIDING (timestamp, size 1 sec, advance by 500 ms) INNER JOIN (SELECT * FROM JoinMultipleStreams_stream4_1) ON id = id4_1 WINDOW SLIDING (timestamp, size 1 sec, advance by 500 ms) INTO CHECKSUM"
    "test_name": "join/JoinMultipleStreams.test"
  - "query": "SELECT * FROM (SELECT * FROM JoinWithDifferentDataTypes_stream1) JOIN (SELECT * FROM JoinWithDifferentDataTypes_stream2) ON i16_s1 = i8_s2 and i16_s1 = i16_s2 and i16_s1 = i32_s2 and i16_s1 = i64_s2 and i16_s1 = u8_s2 and i16_s1 = u16_s2 and i16_s1 = u32_s2 and i16_s1 = u64_s2 and i16_s1 = f32_s2 and i16_s1 = f64_s2 WINDOW TUMBLING (ts, size 1 sec) INTO CHECKSUM"
    "test_name": "join/JoinWithDifferentDataTypes.test"
  - "query": "SELECT * FROM (SELECT * FROM JoinWithDifferentDataTypes_stream1) JOIN (SELECT * FROM JoinWithDifferentDataTypes_stream2) ON i32_s1 = i8_s2 and i32_s1 = i16_s2 and i32_s1 = i32_s2 and i32_s1 = i64_s2 and i32_s1 = u8_s2 and i32_s1 = u16_s2 and i32_s1 = u32_s2 and i32_s1 = u64_s2 and i32_s1 = f32_s2 and i32_s1 = f64_s2 WINDOW TUMBLING (ts, size 1 sec) INTO CHECKSUM"
    "test_name": "join/JoinWithDifferentDataTypes.test"
  - "query": "SELECT * FROM (SELECT * FROM JoinWithDifferentDataTypes_stream1) JOIN (SELECT * FROM JoinWithDifferentDataTypes_stream2) ON i64_s1 = i8_s2 and i64_s1 = i16_s2 and i64_s1 = i32_s2 and i64_s1 = i64_s2 and i64_s1 = u8_s2 and i64_s1 = u16_s2 and i64_s1 = u32_s2 and i64_s1 = u64_s2 and i64_s1 = f32_s2 and i64_s1 = f64_s2 WINDOW TUMBLING (ts, size 1 sec) INTO CHECKSUM"
    "test_name": "join/JoinWithDifferentDataTypes.test"
  - "query": "SELECT * FROM (SELECT * FROM JoinWithDifferentDataTypes_stream1) JOIN (SELECT * FROM JoinWithDifferentDataTypes_stream2) ON u8_s1 = i8_s2 and u8_s1 = i16_s2 and u8_s1 = i32_s2 and u8_s1 = i64_s2 and u8_s1 = u8_s2 and u8_s1 = u16_s2 and u8_s1 = u32_s2 and u8_s1 = u64_s2 and u8_s1 = f32_s2 and u8_s1 = f64_s2 WINDOW TUMBLING (ts, size 1 sec) INTO CHECKSUM"
    "test_name": "join/JoinWithDifferentDataTypes.test"
  - "query": "SELECT * FROM (SELECT * FROM JoinWithDifferentDataTypes_stream1) JOIN (SELECT * FROM JoinWithDifferentDataTypes_stream2) ON u16_s1 = i8_s2 and u16_s1 = i16_s2 and u16_s1 = i32_s2 and u16_s1 = i64_s2 and u16_s1 = u8_s2 and u16_s1 = u16_s2 and u16_s1 = u32_s2 and u16_s1 = u64_s2 and u16_s1 = f32_s2 and u16_s1 = f64_s2 WINDOW TUMBLING (ts, size 1 sec) INTO CHECKSUM"
    "test_name": "join/JoinWithDifferentDataTypes.test"
  - "query": "SELECT * FROM (SELECT * FROM JoinWithDifferentDataTypes_stream1) JOIN (SELECT * FROM JoinWithDifferentDataTypes_stream2) ON u32_s1 = i8_s2 and u32_s1 = i16_s2 and u32_s1 = i32_s2 and u32_s1 = i64_s2 and u32_s1 = u8_s2 and u32_s1 = u16_s2 and u32_s1 = u32_s2 and u32_s1 = u64_s2 and u32_s1 = f32_s2 and u32_s1 = f64_s2 WINDOW TUMBLING (ts, size 1 sec) INTO CHECKSUM"
    "test_name": "join/JoinWithDifferentDataTypes.test"
  - "query": "SELECT * FROM (SELECT * FROM JoinWithDifferentDataTypes_stream1) JOIN (SELECT * FROM JoinWithDifferentDataTypes_stream2) ON u64_s1 = i8_s2 and u64_s1 = i16_s2 and u64_s1 = i32_s2 and u64_s1 = i64_s2 and u64_s1 = u8_s2 and u64_s1 = u16_s2 and u64_s1 = u32_s2 and u64_s1 = u64_s2 and u64_s1 = f32_s2 and u64_s1 = f64_s2 WINDOW TUMBLING (ts, size 1 sec) INTO CHECKSUM"
    "test_name": "join/JoinWithDifferentDataTypes.test"
  - "query": "SELECT * FROM (SELECT * FROM JoinWithDifferentDataTypes_stream1) JOIN (SELECT * FROM JoinWithDifferentDataTypes_stream2) ON f32_s1 = i8_s2 and f32_s1 = i16_s2 and f32_s1 = i32_s2 and f32_s1 = i64_s2 and f32_s1 = u8_s2 and f32_s1 = u16_s2 and f32_s1 = u32_s2 and f32_s1 = u64_s2 and f32_s1 = f32_s2 and f32_s1 = f64_s2 WINDOW TUMBLING (ts, size 1 sec) INTO CHECKSUM"
    "test_name": "join/JoinWithDifferentDataTypes.test"
  - "query": "SELECT * FROM (SELECT * FROM JoinWithDifferentDataTypes_stream1) JOIN (SELECT * FROM JoinWithDifferentDataTypes_stream2) ON f64_s1 = i8_s2 and f64_s1 = i16_s2 and f64_s1 = i32_s2 and f64_s1 = i64_s2 and f64_s1 = u8_s2 and f64_s1 = u16_s2 and f64_s1 = u32_s2 and f64_s1 = u64_s2 and f64_s1 = f32_s2 and f64_s1 = f64_s2 WINDOW TUMBLING (ts, size 1 sec) INTO CHECKSUM"
    "test_name": "join/JoinWithDifferentDataTypes.test"
  - "query": "SELECT AVG(i8) as i8_out, AVG(i16) as i16_out, AVG(i32) as i32_out, AVG(i64) as i64_out, AVG(u8) as u8_out, AVG(u16) as u16_out, AVG(u32) as u32_out, AVG(u64) as u64_out, AVG(f32) as f32_out, AVG(f64) as f64_out FROM WindowAggregationDifferentDataTypes_stream WINDOW TUMBLING(ts, size 100 ms) INTO CHECKSUM"
    "test_name": "window/WindowAggregationDifferentDataTypes.test"
  - "query": "SELECT SUM(i8) as i8_out, SUM(i16) as i16_out, SUM(i32) as i32_out, SUM(i64) as i64_out, SUM(u8) as u8_out, SUM(u16) as u16_out, SUM(u32) as u32_out, SUM(u64) as u64_out, SUM(f32) as f32_out, SUM(f64) as f64_out FROM WindowAggregationDifferentDataTypes_stream WINDOW TUMBLING(ts, size 100 ms) INTO CHECKSUM"
    "test_name": "window/WindowAggregationDifferentDataTypes.test"
  - "query": "SELECT MIN(i8) as i8_out, MIN(i16) as i16_out, MIN(i32) as i32_out, MIN(i64) as i64_out, MIN(u8) as u8_out, MIN(u16) as u16_out, MIN(u32) as u32_out, MIN(u64) as u64_out, MIN(f32) as f32_out, MIN(f64) as f64_out FROM WindowAggregationDifferentDataTypes_stream WINDOW TUMBLING(ts, size 100 ms) INTO CHECKSUM"
    "test_name": "window/WindowAggregationDifferentDataTypes.test"
  - "query": "SELECT MAX(i8) as i8_out, MAX(i16) as i16_out, MAX(i32) as i32_out, MAX(i64) as i64_out, MAX(u8) as u8_out, MAX(u16) as u16_out, MAX(u32) as u32_out, MAX(u64) as u64_out, MAX(f32) as f32_out, MAX(f64) as f64_out FROM WindowAggregationDifferentDataTypes_stream WINDOW TUMBLING(ts, size 100 ms) INTO CHECKSUM"
    "test_name": "window/WindowAggregationDifferentDataTypes.test"
  - "query": "SELECT MEDIAN(i8) as i8_out, MEDIAN(i16) as i16_out, MEDIAN(i32) as i32_out, MEDIAN(i64) as i64_out, MEDIAN(u8) as u8_out, MEDIAN(u16) as u16_out, MEDIAN(u32) as u32_out, MEDIAN(u64) as u64_out, MEDIAN(f32) as f32_out, MEDIAN(f64) as f64_out FROM WindowAggregationDifferentDataTypes_stream WINDOW TUMBLING(ts, size 100 ms) INTO CHECKSUM"
    "test_name": "window/WindowAggregationDifferentDataTypes.test"
  - "query": "SELECT AVG(i8) as i8_out, MIN(i16) as i16_out, MAX(i32) as i32_out, MAX(i64) as i64_out, SUM(u8) as u8_out, SUM(u16) as u16_out, AVG(u32) as u32_out, MEDIAN(u64) as u64_out, COUNT(f32) as f32_out, MEDIAN(f64) as f64_out FROM WindowAggregationDifferentDataTypes_stream WINDOW TUMBLING(ts, size 100 ms) INTO CHECKSUM"
    "test_name": "window/WindowAggregationDifferentDataTypes.test"
  - "query": "SELECT COUNT(i8) as i8_out, COUNT(i16) as i16_out, COUNT(i32) as i32_out, COUNT(i64) as i64_out, COUNT(u8) as u8_out, COUNT(u16) as u16_out, COUNT(u32) as u32_out, COUNT(u64) as u64_out, COUNT(f32) as f32_out, COUNT(f64) as f64_out FROM WindowAggregationDifferentDataTypes_stream WINDOW SLIDING(ts, size 100 ms, advance by 50 ms) INTO CHECKSUM"
    "test_name": "window/WindowAggregationDifferentDataTypes.test"
  - "query": "SELECT AVG(i8) as i8_out, AVG(i16) as i16_out, AVG(i32) as i32_out, AVG(i64) as i64_out, AVG(u8) as u8_out, AVG(u16) as u16_out, AVG(u32) as u32_out, AVG(u64) as u64_out, AVG(f32) as f32_out, AVG(f64) as f64_out FROM WindowAggregationDifferentDataTypes_stream WINDOW SLIDING(ts, size 100 ms, advance by 50 ms) INTO CHECKSUM"
    "test_name": "window/WindowAggregationDifferentDataTypes.test"
  - "query": "SELECT SUM(i8) as i8_out, SUM(i16) as i16_out, SUM(i32) as i32_out, SUM(i64) as i64_out, SUM(u8) as u8_out, SUM(u16) as u16_out, SUM(u32) as u32_out, SUM(u64) as u64_out, SUM(f32) as f32_out, SUM(f64) as f64_out FROM WindowAggregationDifferentDataTypes_stream WINDOW SLIDING(ts, size 100 ms, advance by 50 ms) INTO CHECKSUM"
    "test_name": "window/WindowAggregationDifferentDataTypes.test"
  - "query": "SELECT MIN(i8) as i8_out, MIN(i16) as i16_out, MIN(i32) as i32_out, MIN(i64) as i64_out, MIN(u8) as u8_out, MIN(u16) as u16_out, MIN(u32) as u32_out, MIN(u64) as u64_out, MIN(f32) as f32_out, MIN(f64) as f64_out FROM WindowAggregationDifferentDataTypes_stream WINDOW SLIDING(ts, size 100 ms, advance by 50 ms) INTO CHECKSUM"
    "test_name": "window/WindowAggregationDifferentDataTypes.test"
  - "query": "SELECT MAX(i8) as i8_out, MAX(i16) as i16_out, MAX(i32) as i32_out, MAX(i64) as i64_out, MAX(u8) as u8_out, MAX(u16) as u16_out, MAX(u32) as u32_out, MAX(u64) as u64_out, MAX(f32) as f32_out, MAX(f64) as f64_out FROM WindowAggregationDifferentDataTypes_stream WINDOW SLIDING(ts, size 100 ms, advance by 50 ms) INTO CHECKSUM"
    "test_name": "window/WindowAggregationDifferentDataTypes.test"
  - "query": "SELECT MEDIAN(i8) as i8_out, MEDIAN(i16) as i16_out, MEDIAN(i32) as i32_out, MEDIAN(i64) as i64_out, MEDIAN(u8) as u8_out, MEDIAN(u16) as u16_out, MEDIAN(u32) as u32_out, MEDIAN(u64) as u64_out, MEDIAN(f32) as f32_out, MEDIAN(f64) as f64_out FROM WindowAggregationDifferentDataTypes_stream WINDOW SLIDING(ts, size 100 ms, advance by 50 ms) INTO CHECKSUM"
    "test_name": "window/WindowAggregationDifferentDataTypes.test"
  - "query": "SELECT MIN(i8) as i8_out, SUM(i16) as i16_out, AVG(i32) as i32_out, MAX(i64) as i64_out, COUNT(u8) as u8_out, SUM(u16) as u16_out, COUNT(u32) as u32_out, MEDIAN(u64) as u64_out, MAX(f32) as f32_out, MEDIAN(f64) as f64_out FROM WindowAggregationDifferentDataTypes_stream WINDOW SLIDING(ts, size 100 ms, advance by 50 ms) INTO CHECKSUM"
    "test_name": "window/WindowAggregationDifferentDataTypes.test"
  - "query": "SELECT AVG(i8) as i8_out, AVG(i16) as i16_out, AVG(i32) as i32_out, AVG(i64) as i64_out, AVG(u8) as u8_out, AVG(u16) as u16_out, AVG(u32) as u32_out, AVG(u64) as u64_out, AVG(f32) as f32_out, AVG(f64) as f64_out FROM WindowAggregationDifferentDataTypesKeyed_stream GROUP BY (keyI8, keyI16, keyU64) WINDOW TUMBLING(ts, size 200 ms) INTO CHECKSUM"
    "test_name": "window/WindowAggregationDifferentDataTypesKeyed.test"
  - "query": "SELECT MIN(i8) as i8_out, MIN(i16) as i16_out, MIN(i32) as i32_out, MIN(i64) as i64_out, MIN(u8) as u8_out, MIN(u16) as u16_out, MIN(u32) as u32_out, MIN(u64) as u64_out, MIN(f32) as f32_out, MIN(f64) as f64_out FROM WindowAggregationDifferentDataTypesKeyed_stream GROUP BY (keyI8, keyI16) WINDOW TUMBLING(ts, size 200 ms) INTO CHECKSUM"
    "test_name": "window/WindowAggregationDifferentDataTypesKeyed.test"
  - "query": "SELECT MEDIAN(i8) as i8_out, MEDIAN(i16) as i16_out, MEDIAN(i32) as i32_out, MEDIAN(i64) as i64_out, MEDIAN(u8) as u8_out, MEDIAN(u16) as u16_out, MEDIAN(u32) as u32_out, MEDIAN(u64) as u64_out, MEDIAN(f32) as f32_out, MEDIAN(f64) as f64_out FROM WindowAggregationDifferentDataTypesKeyed_stream GROUP BY (keyI16) WINDOW SLIDING(ts, size 200 ms, advance by 100 ms) INTO CHECKSUM"
    "test_name": "window/WindowAggregationDifferentDataTypesKeyed.test"
  - "query": "SELECT SUM(value) as sumValue FROM ( SELECT SUM(value) as value FROM WindowAggregationStackedAggregations_stream GROUP BY id WINDOW TUMBLING(timestamp, size 5 sec) ) GROUP BY id WINDOW SLIDING(start, size 10 sec, advance by 5 sec) INTO CHECKSUM"
    "test_name": "window/WindowAggregationStackedAggregations.test"
  - "query": "SELECT SUM(inputValue) as sumValue FROM ( SELECT SUM(value) as inputValue FROM WindowAggregationStackedAggregations_stream WHERE id < UINT32(15) GROUP BY id WINDOW TUMBLING(timestamp, size 2 sec) ) WHERE id < UINT32(10) GROUP BY id WINDOW SLIDING(start, size 1 sec, advance by 500 ms) INTO CHECKSUM"
    "test_name": "window/WindowAggregationStackedAggregations.test"
  - "query": "SELECT SUM(inputValue2) as sumValue FROM ( SELECT SUM(inputValue1) as inputValue2 FROM ( SELECT SUM(value) as inputValue1 FROM WindowAggregationStackedAggregations_stream WHERE id < UINT32(15) GROUP BY id WINDOW SLIDING(timestamp, size 1 sec, advance by 500 ms) )  GROUP BY id WINDOW TUMBLING(start, size 1 sec) ) WHERE id < UINT32(10) WINDOW TUMBLING(start, size 2 sec) INTO CHECKSUM"
    "test_name": "window/WindowAggregationStackedAggregations.test"
  - "query": "SELECT AVG(i8) as i8_out, AVG(i16) as i16_out, AVG(i32) as i32_out, AVG(i64) as i64_out, AVG(u8) as u8_out, AVG(u16) as u16_out, AVG(u32) as u32_out, AVG(u64) as u64_out, AVG(f32) as f32_out, AVG(f64) as f64_out FROM WindowAggregationDifferentDataTypes_stream WINDOW TUMBLING(ts, size 100 ms) INTO CHECKSUM"
    "test_name": "window/WindowAggregationDifferentDataTypes.test"
  - "query": "SELECT SUM(i8) as i8_out, SUM(i16) as i16_out, SUM(i32) as i32_out, SUM(i64) as i64_out, SUM(u8) as u8_out, SUM(u16) as u16_out, SUM(u32) as u32_out, SUM(u64) as u64_out, SUM(f32) as f32_out, SUM(f64) as f64_out FROM WindowAggregationDifferentDataTypes_stream WINDOW TUMBLING(ts, size 100 ms) INTO CHECKSUM"
    "test_name": "window/WindowAggregationDifferentDataTypes.test"
  - "query": "SELECT MIN(i8) as i8_out, MIN(i16) as i16_out, MIN(i32) as i32_out, MIN(i64) as i64_out, MIN(u8) as u8_out, MIN(u16) as u16_out, MIN(u32) as u32_out, MIN(u64) as u64_out, MIN(f32) as f32_out, MIN(f64) as f64_out FROM WindowAggregationDifferentDataTypes_stream WINDOW TUMBLING(ts, size 100 ms) INTO CHECKSUM"
    "test_name": "window/WindowAggregationDifferentDataTypes.test"
  - "query": "SELECT MAX(i8) as i8_out, MAX(i16) as i16_out, MAX(i32) as i32_out, MAX(i64) as i64_out, MAX(u8) as u8_out, MAX(u16) as u16_out, MAX(u32) as u32_out, MAX(u64) as u64_out, MAX(f32) as f32_out, MAX(f64) as f64_out FROM WindowAggregationDifferentDataTypes_stream WINDOW TUMBLING(ts, size 100 ms) INTO CHECKSUM"
    "test_name": "window/WindowAggregationDifferentDataTypes.test"
  - "query": "SELECT MEDIAN(i8) as i8_out, MEDIAN(i16) as i16_out, MEDIAN(i32) as i32_out, MEDIAN(i64) as i64_out, MEDIAN(u8) as u8_out, MEDIAN(u16) as u16_out, MEDIAN(u32) as u32_out, MEDIAN(u64) as u64_out, MEDIAN(f32) as f32_out, MEDIAN(f64) as f64_out FROM WindowAggregationDifferentDataTypes_stream WINDOW TUMBLING(ts, size 100 ms) INTO CHECKSUM"
    "test_name": "window/WindowAggregationDifferentDataTypes.test"
  - "query": "SELECT AVG(i8) as i8_out, MIN(i16) as i16_out, MAX(i32) as i32_out, MAX(i64) as i64_out, SUM(u8) as u8_out, SUM(u16) as u16_out, AVG(u32) as u32_out, MEDIAN(u64) as u64_out, COUNT(f32) as f32_out, MEDIAN(f64) as f64_out FROM WindowAggregationDifferentDataTypes_stream WINDOW TUMBLING(ts, size 100 ms) INTO CHECKSUM"
    "test_name": "window/WindowAggregationDifferentDataTypes.test"
  - "query": "SELECT COUNT(i8) as i8_out, COUNT(i16) as i16_out, COUNT(i32) as i32_out, COUNT(i64) as i64_out, COUNT(u8) as u8_out, COUNT(u16) as u16_out, COUNT(u32) as u32_out, COUNT(u64) as u64_out, COUNT(f32) as f32_out, COUNT(f64) as f64_out FROM WindowAggregationDifferentDataTypes_stream WINDOW SLIDING(ts, size 100 ms, advance by 50 ms) INTO CHECKSUM"
    "test_name": "window/WindowAggregationDifferentDataTypes.test"
  - "query": "SELECT AVG(i8) as i8_out, AVG(i16) as i16_out, AVG(i32) as i32_out, AVG(i64) as i64_out, AVG(u8) as u8_out, AVG(u16) as u16_out, AVG(u32) as u32_out, AVG(u64) as u64_out, AVG(f32) as f32_out, AVG(f64) as f64_out FROM WindowAggregationDifferentDataTypes_stream WINDOW SLIDING(ts, size 100 ms, advance by 50 ms) INTO CHECKSUM"
    "test_name": "window/WindowAggregationDifferentDataTypes.test"
  - "query": "SELECT SUM(i8) as i8_out, SUM(i16) as i16_out, SUM(i32) as i32_out, SUM(i64) as i64_out, SUM(u8) as u8_out, SUM(u16) as u16_out, SUM(u32) as u32_out, SUM(u64) as u64_out, SUM(f32) as f32_out, SUM(f64) as f64_out FROM WindowAggregationDifferentDataTypes_stream WINDOW SLIDING(ts, size 100 ms, advance by 50 ms) INTO CHECKSUM"
    "test_name": "window/WindowAggregationDifferentDataTypes.test"
  - "query": "SELECT MIN(i8) as i8_out, MIN(i16) as i16_out, MIN(i32) as i32_out, MIN(i64) as i64_out, MIN(u8) as u8_out, MIN(u16) as u16_out, MIN(u32) as u32_out, MIN(u64) as u64_out, MIN(f32) as f32_out, MIN(f64) as f64_out FROM WindowAggregationDifferentDataTypes_stream WINDOW SLIDING(ts, size 100 ms, advance by 50 ms) INTO CHECKSUM"
    "test_name": "window/WindowAggregationDifferentDataTypes.test"
  - "query": "SELECT MAX(i8) as i8_out, MAX(i16) as i16_out, MAX(i32) as i32_out, MAX(i64) as i64_out, MAX(u8) as u8_out, MAX(u16) as u16_out, MAX(u32) as u32_out, MAX(u64) as u64_out, MAX(f32) as f32_out, MAX(f64) as f64_out FROM WindowAggregationDifferentDataTypes_stream WINDOW SLIDING(ts, size 100 ms, advance by 50 ms) INTO CHECKSUM"
    "test_name": "window/WindowAggregationDifferentDataTypes.test"
  - "query": "SELECT MEDIAN(i8) as i8_out, MEDIAN(i16) as i16_out, MEDIAN(i32) as i32_out, MEDIAN(i64) as i64_out, MEDIAN(u8) as u8_out, MEDIAN(u16) as u16_out, MEDIAN(u32) as u32_out, MEDIAN(u64) as u64_out, MEDIAN(f32) as f32_out, MEDIAN(f64) as f64_out FROM WindowAggregationDifferentDataTypes_stream WINDOW SLIDING(ts, size 100 ms, advance by 50 ms) INTO CHECKSUM"
    "test_name": "window/WindowAggregationDifferentDataTypes.test"
  - "query": "SELECT MIN(i8) as i8_out, SUM(i16) as i16_out, AVG(i32) as i32_out, MAX(i64) as i64_out, COUNT(u8) as u8_out, SUM(u16) as u16_out, COUNT(u32) as u32_out, MEDIAN(u64) as u64_out, MAX(f32) as f32_out, MEDIAN(f64) as f64_out FROM WindowAggregationDifferentDataTypes_stream WINDOW SLIDING(ts, size 100 ms, advance by 50 ms) INTO CHECKSUM"
    "test_name": "window/WindowAggregationDifferentDataTypes.test"
  - "query": "SELECT AVG(i8) as i8_out, AVG(i16) as i16_out, AVG(i32) as i32_out, AVG(i64) as i64_out, AVG(u8) as u8_out, AVG(u16) as u16_out, AVG(u32) as u32_out, AVG(u64) as u64_out, AVG(f32) as f32_out, AVG(f64) as f64_out FROM WindowAggregationDifferentDataTypesKeyed_stream GROUP BY (keyI8, keyI16, keyU64) WINDOW TUMBLING(ts, size 200 ms) INTO CHECKSUM"
    "test_name": "window/WindowAggregationDifferentDataTypesKeyed.test"
  - "query": "SELECT MIN(i8) as i8_out, MIN(i16) as i16_out, MIN(i32) as i32_out, MIN(i64) as i64_out, MIN(u8) as u8_out, MIN(u16) as u16_out, MIN(u32) as u32_out, MIN(u64) as u64_out, MIN(f32) as f32_out, MIN(f64) as f64_out FROM WindowAggregationDifferentDataTypesKeyed_stream GROUP BY (keyI8, keyI16) WINDOW TUMBLING(ts, size 200 ms) INTO CHECKSUM"
    "test_name": "window/WindowAggregationDifferentDataTypesKeyed.test"
  - "query": "SELECT MEDIAN(i8) as i8_out, MEDIAN(i16) as i16_out, MEDIAN(i32) as i32_out, MEDIAN(i64) as i64_out, MEDIAN(u8) as u8_out, MEDIAN(u16) as u16_out, MEDIAN(u32) as u32_out, MEDIAN(u64) as u64_out, MEDIAN(f32) as f32_out, MEDIAN(f64) as f64_out FROM WindowAggregationDifferentDataTypesKeyed_stream GROUP BY (keyI16) WINDOW SLIDING(ts, size 200 ms, advance by 100 ms) INTO CHECKSUM"
    "test_name": "window/WindowAggregationDifferentDataTypesKeyed.test"
  - "query": "SELECT SUM(value) as sumValue FROM ( SELECT SUM(value) as value FROM WindowAggregationStackedAggregations_stream GROUP BY id WINDOW TUMBLING(timestamp, size 5 sec) ) GROUP BY id WINDOW SLIDING(start, size 10 sec, advance by 5 sec) INTO CHECKSUM"
    "test_name": "window/WindowAggregationStackedAggregations.test"
  - "query": "SELECT SUM(inputValue) as sumValue FROM ( SELECT SUM(value) as inputValue FROM WindowAggregationStackedAggregations_stream WHERE id < UINT32(15) GROUP BY id WINDOW TUMBLING(timestamp, size 2 sec) ) WHERE id < UINT32(10) GROUP BY id WINDOW SLIDING(start, size 1 sec, advance by 500 ms) INTO CHECKSUM"
    "test_name": "window/WindowAggregationStackedAggregations.test"
  - "query": "SELECT SUM(inputValue2) as sumValue FROM ( SELECT SUM(inputValue1) as inputValue2 FROM ( SELECT SUM(value) as inputValue1 FROM WindowAggregationStackedAggregations_stream WHERE id < UINT32(15) GROUP BY id WINDOW SLIDING(timestamp, size 1 sec, advance by 500 ms) )  GROUP BY id WINDOW TUMBLING(start, size 1 sec) ) WHERE id < UINT32(10) WINDOW TUMBLING(start, size 2 sec) INTO CHECKSUM"
    "test_name": "window/WindowAggregationStackedAggregations.test"
  - "query": "SELECT * FROM (SELECT * FROM JoinMultipleStreams_stream) INNER JOIN (SELECT * FROM JoinMultipleStreams_stream2) ON id = id2 WINDOW TUMBLING (timestamp, size 1 sec) INNER JOIN (SELECT * FROM JoinMultipleStreams_stream4) ON id = id4 WINDOW TUMBLING (timestamp, size 1 sec) INTO CHECKSUM"
    "test_name": "join/JoinMultipleStreams.test"
  - "query": "SELECT * FROM (SELECT * FROM JoinMultipleStreams_stream) INNER JOIN (SELECT * FROM JoinMultipleStreams_stream2) ON id = id2 WINDOW TUMBLING (timestamp, size 1 sec) INNER JOIN (SELECT * FROM JoinMultipleStreams_stream4) ON id = id4 WINDOW TUMBLING (timestamp, size 1 sec) INNER JOIN (SELECT * FROM JoinMultipleStreams_stream4_1) ON id = id4_1 WINDOW TUMBLING (timestamp, size 1 sec) INTO CHECKSUM"
    "test_name": "join/JoinMultipleStreams.test"
  - "query": "SELECT * FROM (SELECT * FROM JoinMultipleStreams_stream7) INNER JOIN (SELECT * FROM JoinMultipleStreams_stream7_1) ON id7 = id7_1 WINDOW SLIDING (timestamp, size 1 sec, advance by 250 ms) INTO CHECKSUM"
    "test_name": "join/JoinMultipleStreams.test"
  - "query": "SELECT * FROM (SELECT * FROM JoinMultipleStreams_stream) INNER JOIN (SELECT * FROM JoinMultipleStreams_stream2) ON id = id2 WINDOW SLIDING (timestamp, size 1 sec, advance by 500 ms) INNER JOIN (SELECT * FROM JoinMultipleStreams_stream4) ON id = id4 WINDOW SLIDING (timestamp, size 1 sec, advance by 500 ms) INNER JOIN (SELECT * FROM JoinMultipleStreams_stream4_1) ON id = id4_1 WINDOW SLIDING (timestamp, size 1 sec, advance by 500 ms) INTO CHECKSUM"
    "test_name": "join/JoinMultipleStreams.test"
  - "query": "SELECT * FROM (SELECT * FROM JoinWithDifferentDataTypes_stream1) JOIN (SELECT * FROM JoinWithDifferentDataTypes_stream2) ON i16_s1 = i8_s2 and i16_s1 = i16_s2 and i16_s1 = i32_s2 and i16_s1 = i64_s2 and i16_s1 = u8_s2 and i16_s1 = u16_s2 and i16_s1 = u32_s2 and i16_s1 = u64_s2 and i16_s1 = f32_s2 and i16_s1 = f64_s2 WINDOW TUMBLING (ts, size 1 sec) INTO CHECKSUM"
    "test_name": "join/JoinWithDifferentDataTypes.test"
  - "query": "SELECT * FROM (SELECT * FROM JoinWithDifferentDataTypes_stream1) JOIN (SELECT * FROM JoinWithDifferentDataTypes_stream2) ON i32_s1 = i8_s2 and i32_s1 = i16_s2 and i32_s1 = i32_s2 and i32_s1 = i64_s2 and i32_s1 = u8_s2 and i32_s1 = u16_s2 and i32_s1 = u32_s2 and i32_s1 = u64_s2 and i32_s1 = f32_s2 and i32_s1 = f64_s2 WINDOW TUMBLING (ts, size 1 sec) INTO CHECKSUM"
    "test_name": "join/JoinWithDifferentDataTypes.test"
  - "query": "SELECT * FROM (SELECT * FROM JoinWithDifferentDataTypes_stream1) JOIN (SELECT * FROM JoinWithDifferentDataTypes_stream2) ON i64_s1 = i8_s2 and i64_s1 = i16_s2 and i64_s1 = i32_s2 and i64_s1 = i64_s2 and i64_s1 = u8_s2 and i64_s1 = u16_s2 and i64_s1 = u32_s2 and i64_s1 = u64_s2 and i64_s1 = f32_s2 and i64_s1 = f64_s2 WINDOW TUMBLING (ts, size 1 sec) INTO CHECKSUM"
    "test_name": "join/JoinWithDifferentDataTypes.test"
  - "query": "SELECT * FROM (SELECT * FROM JoinWithDifferentDataTypes_stream1) JOIN (SELECT * FROM JoinWithDifferentDataTypes_stream2) ON u8_s1 = i8_s2 and u8_s1 = i16_s2 and u8_s1 = i32_s2 and u8_s1 = i64_s2 and u8_s1 = u8_s2 and u8_s1 = u16_s2 and u8_s1 = u32_s2 and u8_s1 = u64_s2 and u8_s1 = f32_s2 and u8_s1 = f64_s2 WINDOW TUMBLING (ts, size 1 sec) INTO CHECKSUM"
    "test_name": "join/JoinWithDifferentDataTypes.test"
  - "query": "SELECT * FROM (SELECT * FROM JoinWithDifferentDataTypes_stream1) JOIN (SELECT * FROM JoinWithDifferentDataTypes_stream2) ON u16_s1 = i8_s2 and u16_s1 = i16_s2 and u16_s1 = i32_s2 and u16_s1 = i64_s2 and u16_s1 = u8_s2 and u16_s1 = u16_s2 and u16_s1 = u32_s2 and u16_s1 = u64_s2 and u16_s1 = f32_s2 and u16_s1 = f64_s2 WINDOW TUMBLING (ts, size 1 sec) INTO CHECKSUM"
    "test_name": "join/JoinWithDifferentDataTypes.test"
  - "query": "SELECT * FROM (SELECT * FROM JoinWithDifferentDataTypes_stream1) JOIN (SELECT * FROM JoinWithDifferentDataTypes_stream2) ON u32_s1 = i8_s2 and u32_s1 = i16_s2 and u32_s1 = i32_s2 and u32_s1 = i64_s2 and u32_s1 = u8_s2 and u32_s1 = u16_s2 and u32_s1 = u32_s2 and u32_s1 = u64_s2 and u32_s1 = f32_s2 and u32_s1 = f64_s2 WINDOW TUMBLING (ts, size 1 sec) INTO CHECKSUM"
    "test_name": "join/JoinWithDifferentDataTypes.test"
  - "query": "SELECT * FROM (SELECT * FROM JoinWithDifferentDataTypes_stream1) JOIN (SELECT * FROM JoinWithDifferentDataTypes_stream2) ON u64_s1 = i8_s2 and u64_s1 = i16_s2 and u64_s1 = i32_s2 and u64_s1 = i64_s2 and u64_s1 = u8_s2 and u64_s1 = u16_s2 and u64_s1 = u32_s2 and u64_s1 = u64_s2 and u64_s1 = f32_s2 and u64_s1 = f64_s2 WINDOW TUMBLING (ts, size 1 sec) INTO CHECKSUM"
    "test_name": "join/JoinWithDifferentDataTypes.test"
  - "query": "SELECT * FROM (SELECT * FROM JoinWithDifferentDataTypes_stream1) JOIN (SELECT * FROM JoinWithDifferentDataTypes_stream2) ON f32_s1 = i8_s2 and f32_s1 = i16_s2 and f32_s1 = i32_s2 and f32_s1 = i64_s2 and f32_s1 = u8_s2 and f32_s1 = u16_s2 and f32_s1 = u32_s2 and f32_s1 = u64_s2 and f32_s1 = f32_s2 and f32_s1 = f64_s2 WINDOW TUMBLING (ts, size 1 sec) INTO CHECKSUM"
    "test_name": "join/JoinWithDifferentDataTypes.test"
  - "query": "SELECT * FROM (SELECT * FROM JoinWithDifferentDataTypes_stream1) JOIN (SELECT * FROM JoinWithDifferentDataTypes_stream2) ON f64_s1 = i8_s2 and f64_s1 = i16_s2 and f64_s1 = i32_s2 and f64_s1 = i64_s2 and f64_s1 = u8_s2 and f64_s1 = u16_s2 and f64_s1 = u32_s2 and f64_s1 = u64_s2 and f64_s1 = f32_s2 and f64_s1 = f64_s2 WINDOW TUMBLING (ts, size 1 sec) INTO CHECKSUM"
    "test_name": "join/JoinWithDifferentDataTypes.test"
  "benchmark":
  - "query": "SELECT start, end, SUM(cpu) AS totalCpu, jobId FROM ClusterMonitoring_monitoringLightsaber WHERE eventType == INT16(3) GROUP BY jobId WINDOW SLIDING(creationTS, SIZE 60 SEC, ADVANCE BY 1 SEC) INTO CHECKSUM"
    "test_name": "milestone/ClusterMonitoring.test"
  - "query": "SELECT * FROM DEBS_solarPanels INTO CHECKSUM"
    "test_name": "milestone/DEBS.test"
  - "query": "SELECT * FROM DEBS_consumers WHERE consumedPower >= FLOAT64(400) INTO CHECKSUM"
    "test_name": "milestone/DEBS.test"
  - "query": "SELECT * FROM DEBS_consumers WHERE consumedPower >= FLOAT64(400) AND sectorId = INT32(1) INTO CHECKSUM"
    "test_name": "milestone/DEBS.test"
  - "query": "SELECT * FROM DEBS_consumers WHERE consumedPower >= FLOAT64(1) AND consumedPower < FLOAT64(61) INTO CHECKSUM"
    "test_name": "milestone/DEBS.test"
  - "query": "SELECT consumedPower / FLOAT64(1000) AS consumedPower FROM DEBS_consumers INTO CHECKSUM"
    "test_name": "milestone/DEBS.test"
  - "query": "SELECT groupId, SUM(producedPower) AS producedPower FROM DEBS_solarPanels GROUP BY groupId WINDOW TUMBLING(timestamp, SIZE 1 HOUR) INTO CHECKSUM"
    "test_name": "milestone/DEBS.test"
  - "query": "SELECT groupId, SUM(producedPower) AS producedPower FROM DEBS_solarPanels GROUP BY groupId WINDOW SLIDING(timestamp, SIZE 1 HOUR, ADVANCE BY 10 MINUTES) INTO CHECKSUM"
    "test_name": "milestone/DEBS.test"
  - "query": "SELECT start, end, vehicle, highway, direction, positionDiv5280, COUNT(speed) AS cntSpeed FROM (SELECT creationTS, vehicle, highway, direction, position / INT32(5280) AS positionDiv5280, speed FROM LinearRoadBenchmark_lrb) GROUP BY (vehicle, highway, direction, positionDiv5280) WINDOW SLIDING(creationTS, SIZE 30 SEC, ADVANCE BY 1 SEC) INTO CHECKSUM"
    "test_name": "milestone/LinearRoadBenchmark.test"
  - "query": "SELECT price * FLOAT64(89) / FLOAT64(100) AS price FROM Nexmark_bid INTO CHECKSUM"
    "test_name": "milestone/Nexmark.test"
  - "query": "SELECT * FROM Nexmark_bid WHERE auctionId % INT32(123) = INT32(0) INTO CHECKSUM"
    "test_name": "milestone/Nexmark.test"
  - "query": "SELECT start, end, start, end, auctionId, num, start, end, max_tmp FROM (SELECT auctionId, COUNT(auctionId) AS num, start, end FROM Nexmark_bid GROUP BY auctionId WINDOW SLIDING(timestamp, SIZE 10 SEC, ADVANCE BY 2 SEC)) INNER JOIN (SELECT auctionId, MAX(num_ids) AS max_tmp, start, end FROM (SELECT auctionId, COUNT(auctionId) AS num_ids, start FROM Nexmark_bid GROUP BY auctionId WINDOW SLIDING(timestamp, SIZE 10 SEC, ADVANCE BY 2 SEC)) WINDOW TUMBLING(start, SIZE 2 SEC)) ON num >= max_tmp WINDOW TUMBLING(start, SIZE 2 SEC) INTO CHECKSUM"
    "test_name": "milestone/Nexmark.test"
  - "query": "SELECT start, end, timestamp, auctionId, bidder, datetime, price, timestamp, id, initialbid, reserve, expires, seller, category FROM (SELECT * FROM Nexmark_bid) INNER JOIN (SELECT * FROM Nexmark_auction) ON auctionId = id WINDOW TUMBLING (timestamp, size 10 sec) INTO CHECKSUM"
    "test_name": "milestone/Nexmark.test"
  - "query": "SELECT campaign_id, SUM(user_id) AS sum_user_id FROM YahooStreamingBenchmark_ysb10k WHERE event_type < UINT64(1) GROUP BY campaign_id WINDOW TUMBLING(current_ms, SIZE 30 SEC) INTO CHECKSUM"
    "test_name": "milestone/YahooStreamingBenchmark.test"
  - "query": "SELECT start, end, SUM(cpu) AS totalCpu, jobId FROM ClusterMonitoring_monitoringLightsaber WHERE eventType == INT16(3) GROUP BY jobId WINDOW SLIDING(creationTS, SIZE 60 SEC, ADVANCE BY 1 SEC) INTO CHECKSUM"
    "test_name": "milestone/ClusterMonitoring.test"
  - "query": "SELECT * FROM DEBS_solarPanels INTO CHECKSUM"
    "test_name": "milestone/DEBS.test"
  - "query": "SELECT * FROM DEBS_consumers WHERE consumedPower >= FLOAT64(400) INTO CHECKSUM"
    "test_name": "milestone/DEBS.test"
  - "query": "SELECT * FROM DEBS_consumers WHERE consumedPower >= FLOAT64(400) AND sectorId = INT32(1) INTO CHECKSUM"
    "test_name": "milestone/DEBS.test"
  - "query": "SELECT * FROM DEBS_consumers WHERE consumedPower >= FLOAT64(1) AND consumedPower < FLOAT64(61) INTO CHECKSUM"
    "test_name": "milestone/DEBS.test"
  - "query": "SELECT consumedPower / FLOAT64(1000) AS consumedPower FROM DEBS_consumers INTO CHECKSUM"
    "test_name": "milestone/DEBS.test"
  - "query": "SELECT groupId, SUM(producedPower) AS producedPower FROM DEBS_solarPanels GROUP BY groupId WINDOW TUMBLING(timestamp, SIZE 1 HOUR) INTO CHECKSUM"
    "test_name": "milestone/DEBS.test"
  - "query": "SELECT groupId, SUM(producedPower) AS producedPower FROM DEBS_solarPanels GROUP BY groupId WINDOW SLIDING(timestamp, SIZE 1 HOUR, ADVANCE BY 10 MINUTES) INTO CHECKSUM"
    "test_name": "milestone/DEBS.test"
  - "query": "SELECT start, end, vehicle, highway, direction, positionDiv5280, COUNT(speed) AS cntSpeed FROM (SELECT creationTS, vehicle, highway, direction, position / INT32(5280) AS positionDiv5280, speed FROM LinearRoadBenchmark_lrb) GROUP BY (vehicle, highway, direction, positionDiv5280) WINDOW SLIDING(creationTS, SIZE 30 SEC, ADVANCE BY 1 SEC) INTO CHECKSUM"
    "test_name": "milestone/LinearRoadBenchmark.test"
  - "query": "SELECT price * FLOAT64(89) / FLOAT64(100) AS price FROM Nexmark_bid INTO CHECKSUM"
    "test_name": "milestone/Nexmark.test"
  - "query": "SELECT * FROM Nexmark_bid WHERE auctionId % INT32(123) = INT32(0) INTO CHECKSUM"
    "test_name": "milestone/Nexmark.test"
  - "query": "SELECT start, end, start, end, auctionId, num, start, end, max_tmp FROM (SELECT auctionId, COUNT(auctionId) AS num, start, end FROM Nexmark_bid GROUP BY auctionId WINDOW SLIDING(timestamp, SIZE 10 SEC, ADVANCE BY 2 SEC)) INNER JOIN (SELECT auctionId, MAX(num_ids) AS max_tmp, start, end FROM (SELECT auctionId, COUNT(auctionId) AS num_ids, start FROM Nexmark_bid GROUP BY auctionId WINDOW SLIDING(timestamp, SIZE 10 SEC, ADVANCE BY 2 SEC)) WINDOW TUMBLING(start, SIZE 2 SEC)) ON num >= max_tmp WINDOW TUMBLING(start, SIZE 2 SEC) INTO CHECKSUM"
    "test_name": "milestone/Nexmark.test"
  - "query": "SELECT start, end, timestamp, auctionId, bidder, datetime, price, timestamp, id, initialbid, reserve, expires, seller, category FROM (SELECT * FROM Nexmark_bid) INNER JOIN (SELECT * FROM Nexmark_auction) ON auctionId = id WINDOW TUMBLING (timestamp, size 10 sec) INTO CHECKSUM"
    "test_name": "milestone/Nexmark.test"
  - "query": "SELECT campaign_id, SUM(user_id) AS sum_user_id FROM YahooStreamingBenchmark_ysb10k WHERE event_type < UINT64(1) GROUP BY campaign_id WINDOW TUMBLING(current_ms, SIZE 30 SEC) INTO CHECKSUM"
    "test_name": "milestone/YahooStreamingBenchmark.test"
  "large":
  - "query": "SELECT start, end, SUM(cpu) AS totalCpu, jobId FROM ClusterMonitoring_monitoringLightsaber WHERE eventType == INT16(3) GROUP BY jobId WINDOW SLIDING(creationTS, SIZE 60 SEC, ADVANCE BY 1 SEC) INTO CHECKSUM"
    "test_name": "milestone/ClusterMonitoring.test"
  - "query": "SELECT * FROM DEBS_solarPanels INTO CHECKSUM"
    "test_name": "milestone/DEBS.test"
  - "query": "SELECT * FROM DEBS_consumers WHERE consumedPower >= FLOAT64(400) INTO CHECKSUM"
    "test_name": "milestone/DEBS.test"
  - "query": "SELECT * FROM DEBS_consumers WHERE consumedPower >= FLOAT64(400) AND sectorId = INT32(1) INTO CHECKSUM"
    "test_name": "milestone/DEBS.test"
  - "query": "SELECT * FROM DEBS_consumers WHERE consumedPower >= FLOAT64(1) AND consumedPower < FLOAT64(61) INTO CHECKSUM"
    "test_name": "milestone/DEBS.test"
  - "query": "SELECT consumedPower / FLOAT64(1000) AS consumedPower FROM DEBS_consumers INTO CHECKSUM"
    "test_name": "milestone/DEBS.test"
  - "query": "SELECT groupId, SUM(producedPower) AS producedPower FROM DEBS_solarPanels GROUP BY groupId WINDOW TUMBLING(timestamp, SIZE 1 HOUR) INTO CHECKSUM"
    "test_name": "milestone/DEBS.test"
  - "query": "SELECT groupId, SUM(producedPower) AS producedPower FROM DEBS_solarPanels GROUP BY groupId WINDOW SLIDING(timestamp, SIZE 1 HOUR, ADVANCE BY 10 MINUTES) INTO CHECKSUM"
    "test_name": "milestone/DEBS.test"
  - "query": "SELECT start, end, vehicle, highway, direction, positionDiv5280, COUNT(speed) AS cntSpeed FROM (SELECT creationTS, vehicle, highway, direction, position / INT32(5280) AS positionDiv5280, speed FROM LinearRoadBenchmark_lrb) GROUP BY (vehicle, highway, direction, positionDiv5280) WINDOW SLIDING(creationTS, SIZE 30 SEC, ADVANCE BY 1 SEC) INTO CHECKSUM"
    "test_name": "milestone/LinearRoadBenchmark.test"
  - "query": "SELECT price * FLOAT64(89) / FLOAT64(100) AS price FROM Nexmark_bid INTO CHECKSUM"
    "test_name": "milestone/Nexmark.test"
  - "query": "SELECT * FROM Nexmark_bid WHERE auctionId % INT32(123) = INT32(0) INTO CHECKSUM"
    "test_name": "milestone/Nexmark.test"
  - "query": "SELECT start, end, start, end, auctionId, num, start, end, max_tmp FROM (SELECT auctionId, COUNT(auctionId) AS num, start, end FROM Nexmark_bid GROUP BY auctionId WINDOW SLIDING(timestamp, SIZE 10 SEC, ADVANCE BY 2 SEC)) INNER JOIN (SELECT auctionId, MAX(num_ids) AS max_tmp, start, end FROM (SELECT auctionId, COUNT(auctionId) AS num_ids, start FROM Nexmark_bid GROUP BY auctionId WINDOW SLIDING(timestamp, SIZE 10 SEC, ADVANCE BY 2 SEC)) WINDOW TUMBLING(start, SIZE 2 SEC)) ON num >= max_tmp WINDOW TUMBLING(start, SIZE 2 SEC) INTO CHECKSUM"
    "test_name": "milestone/Nexmark.test"
  - "query": "SELECT start, end, timestamp, auctionId, bidder, datetime, price, timestamp, id, initialbid, reserve, expires, seller, category FROM (SELECT * FROM Nexmark_bid) INNER JOIN (SELECT * FROM Nexmark_auction) ON auctionId = id WINDOW TUMBLING (timestamp, size 10 sec) INTO CHECKSUM"
    "test_name": "milestone/Nexmark.test"
  - "query": "SELECT campaign_id, SUM(user_id) AS sum_user_id FROM YahooStreamingBenchmark_ysb10k WHERE event_type < UINT64(1) GROUP BY campaign_id WINDOW TUMBLING(current_ms, SIZE 30 SEC) INTO CHECKSUM"
    "test_name": "milestone/YahooStreamingBenchmark.test"
  - "query": "SELECT start, end, SUM(cpu) AS totalCpu, jobId FROM ClusterMonitoring_monitoringLightsaber WHERE eventType == INT16(3) GROUP BY jobId WINDOW SLIDING(creationTS, SIZE 60 SEC, ADVANCE BY 1 SEC) INTO CHECKSUM"
    "test_name": "milestone/ClusterMonitoring.test"
  - "query": "SELECT * FROM DEBS_solarPanels INTO CHECKSUM"
    "test_name": "milestone/DEBS.test"
  - "query": "SELECT * FROM DEBS_consumers WHERE consumedPower >= FLOAT64(400) INTO CHECKSUM"
    "test_name": "milestone/DEBS.test"
  - "query": "SELECT * FROM DEBS_consumers WHERE consumedPower >= FLOAT64(400) AND sectorId = INT32(1) INTO CHECKSUM"
    "test_name": "milestone/DEBS.test"
  - "query": "SELECT * FROM DEBS_consumers WHERE consumedPower >= FLOAT64(1) AND consumedPower < FLOAT64(61) INTO CHECKSUM"
    "test_name": "milestone/DEBS.test"
  - "query": "SELECT consumedPower / FLOAT64(1000) AS consumedPower FROM DEBS_consumers INTO CHECKSUM"
    "test_name": "milestone/DEBS.test"
  - "query": "SELECT groupId, SUM(producedPower) AS producedPower FROM DEBS_solarPanels GROUP BY groupId WINDOW TUMBLING(timestamp, SIZE 1 HOUR) INTO CHECKSUM"
    "test_name": "milestone/DEBS.test"
  - "query": "SELECT groupId, SUM(producedPower) AS producedPower FROM DEBS_solarPanels GROUP BY groupId WINDOW SLIDING(timestamp, SIZE 1 HOUR, ADVANCE BY 10 MINUTES) INTO CHECKSUM"
    "test_name": "milestone/DEBS.test"
  - "query": "SELECT start, end, vehicle, highway, direction, positionDiv5280, COUNT(speed) AS cntSpeed FROM (SELECT creationTS, vehicle, highway, direction, position / INT32(5280) AS positionDiv5280, speed FROM LinearRoadBenchmark_lrb) GROUP BY (vehicle, highway, direction, positionDiv5280) WINDOW SLIDING(creationTS, SIZE 30 SEC, ADVANCE BY 1 SEC) INTO CHECKSUM"
    "test_name": "milestone/LinearRoadBenchmark.test"
  - "query": "SELECT price * FLOAT64(89) / FLOAT64(100) AS price FROM Nexmark_bid INTO CHECKSUM"
    "test_name": "milestone/Nexmark.test"
  - "query": "SELECT * FROM Nexmark_bid WHERE auctionId % INT32(123) = INT32(0) INTO CHECKSUM"
    "test_name": "milestone/Nexmark.test"
  - "query": "SELECT start, end, start, end, auctionId, num, start, end, max_tmp FROM (SELECT auctionId, COUNT(auctionId) AS num, start, end FROM Nexmark_bid GROUP BY auctionId WINDOW SLIDING(timestamp, SIZE 10 SEC, ADVANCE BY 2 SEC)) INNER JOIN (SELECT auctionId, MAX(num_ids) AS max_tmp, start, end FROM (SELECT auctionId, COUNT(auctionId) AS num_ids, start FROM Nexmark_bid GROUP BY auctionId WINDOW SLIDING(timestamp, SIZE 10 SEC, ADVANCE BY 2 SEC)) WINDOW TUMBLING(start, SIZE 2 SEC)) ON num >= max_tmp WINDOW TUMBLING(start, SIZE 2 SEC) INTO CHECKSUM"
    "test_name": "milestone/Nexmark.test"
  - "query": "SELECT start, end, timestamp, auctionId, bidder, datetime, price, timestamp, id, initialbid, reserve, expires, seller, category FROM (SELECT * FROM Nexmark_bid) INNER JOIN (SELECT * FROM Nexmark_auction) ON auctionId = id WINDOW TUMBLING (timestamp, size 10 sec) INTO CHECKSUM"
    "test_name": "milestone/Nexmark.test"
  - "query": "SELECT campaign_id, SUM(user_id) AS sum_user_id FROM YahooStreamingBenchmark_ysb10k WHERE event_type < UINT64(1) GROUP BY campaign_id WINDOW TUMBLING(current_ms, SIZE 30 SEC) INTO CHECKSUM"
    "test_name": "milestone/YahooStreamingBenchmark.test"
  "milestone":
  - "query": "SELECT start, end, SUM(cpu) AS totalCpu, jobId FROM ClusterMonitoring_monitoringLightsaber WHERE eventType == INT16(3) GROUP BY jobId WINDOW SLIDING(creationTS, SIZE 60 SEC, ADVANCE BY 1 SEC) INTO CHECKSUM"
    "test_name": "milestone/ClusterMonitoring.test"
  - "query": "SELECT * FROM DEBS_solarPanels INTO CHECKSUM"
    "test_name": "milestone/DEBS.test"
  - "query": "SELECT * FROM DEBS_consumers WHERE consumedPower >= FLOAT64(400) INTO CHECKSUM"
    "test_name": "milestone/DEBS.test"
  - "query": "SELECT * FROM DEBS_consumers WHERE consumedPower >= FLOAT64(400) AND sectorId = INT32(1) INTO CHECKSUM"
    "test_name": "milestone/DEBS.test"
  - "query": "SELECT * FROM DEBS_consumers WHERE consumedPower >= FLOAT64(1) AND consumedPower < FLOAT64(61) INTO CHECKSUM"
    "test_name": "milestone/DEBS.test"
  - "query": "SELECT consumedPower / FLOAT64(1000) AS consumedPower FROM DEBS_consumers INTO CHECKSUM"
    "test_name": "milestone/DEBS.test"
  - "query": "SELECT groupId, SUM(producedPower) AS producedPower FROM DEBS_solarPanels GROUP BY groupId WINDOW TUMBLING(timestamp, SIZE 1 HOUR) INTO CHECKSUM"
    "test_name": "milestone/DEBS.test"
  - "query": "SELECT groupId, SUM(producedPower) AS producedPower FROM DEBS_solarPanels GROUP BY groupId WINDOW SLIDING(timestamp, SIZE 1 HOUR, ADVANCE BY 10 MINUTES) INTO CHECKSUM"
    "test_name": "milestone/DEBS.test"
  - "query": "SELECT start, end, vehicle, highway, direction, positionDiv5280, COUNT(speed) AS cntSpeed FROM (SELECT creationTS, vehicle, highway, direction, position / INT32(5280) AS positionDiv5280, speed FROM LinearRoadBenchmark_lrb) GROUP BY (vehicle, highway, direction, positionDiv5280) WINDOW SLIDING(creationTS, SIZE 30 SEC, ADVANCE BY 1 SEC) INTO CHECKSUM"
    "test_name": "milestone/LinearRoadBenchmark.test"
  - "query": "SELECT price * FLOAT64(89) / FLOAT64(100) AS price FROM Nexmark_bid INTO CHECKSUM"
    "test_name": "milestone/Nexmark.test"
  - "query": "SELECT * FROM Nexmark_bid WHERE auctionId % INT32(123) = INT32(0) INTO CHECKSUM"
    "test_name": "milestone/Nexmark.test"
  - "query": "SELECT start, end, start, end, auctionId, num, start, end, max_tmp FROM (SELECT auctionId, COUNT(auctionId) AS num, start, end FROM Nexmark_bid GROUP BY auctionId WINDOW SLIDING(timestamp, SIZE 10 SEC, ADVANCE BY 2 SEC)) INNER JOIN (SELECT auctionId, MAX(num_ids) AS max_tmp, start, end FROM (SELECT auctionId, COUNT(auctionId) AS num_ids, start FROM Nexmark_bid GROUP BY auctionId WINDOW SLIDING(timestamp, SIZE 10 SEC, ADVANCE BY 2 SEC)) WINDOW TUMBLING(start, SIZE 2 SEC)) ON num >= max_tmp WINDOW TUMBLING(start, SIZE 2 SEC) INTO CHECKSUM"
    "test_name": "milestone/Nexmark.test"
  - "query": "SELECT start, end, timestamp, auctionId, bidder, datetime, price, timestamp, id, initialbid, reserve, expires, seller, category FROM (SELECT * FROM Nexmark_bid) INNER JOIN (SELECT * FROM Nexmark_auction) ON auctionId = id WINDOW TUMBLING (timestamp, size 10 sec) INTO CHECKSUM"
    "test_name": "milestone/Nexmark.test"
  - "query": "SELECT campaign_id, SUM(user_id) AS sum_user_id FROM YahooStreamingBenchmark_ysb10k WHERE event_type < UINT64(1) GROUP BY campaign_id WINDOW TUMBLING(current_ms, SIZE 30 SEC) INTO CHECKSUM"
    "test_name": "milestone/YahooStreamingBenchmark.test"
  - "query": "SELECT start, end, SUM(cpu) AS totalCpu, jobId FROM ClusterMonitoring_monitoringLightsaber WHERE eventType == INT16(3) GROUP BY jobId WINDOW SLIDING(creationTS, SIZE 60 SEC, ADVANCE BY 1 SEC) INTO CHECKSUM"
    "test_name": "milestone/ClusterMonitoring.test"
  - "query": "SELECT * FROM DEBS_solarPanels INTO CHECKSUM"
    "test_name": "milestone/DEBS.test"
  - "query": "SELECT * FROM DEBS_consumers WHERE consumedPower >= FLOAT64(400) INTO CHECKSUM"
    "test_name": "milestone/DEBS.test"
  - "query": "SELECT * FROM DEBS_consumers WHERE consumedPower >= FLOAT64(400) AND sectorId = INT32(1) INTO CHECKSUM"
    "test_name": "milestone/DEBS.test"
  - "query": "SELECT * FROM DEBS_consumers WHERE consumedPower >= FLOAT64(1) AND consumedPower < FLOAT64(61) INTO CHECKSUM"
    "test_name": "milestone/DEBS.test"
  - "query": "SELECT consumedPower / FLOAT64(1000) AS consumedPower FROM DEBS_consumers INTO CHECKSUM"
    "test_name": "milestone/DEBS.test"
  - "query": "SELECT groupId, SUM(producedPower) AS producedPower FROM DEBS_solarPanels GROUP BY groupId WINDOW TUMBLING(timestamp, SIZE 1 HOUR) INTO CHECKSUM"
    "test_name": "milestone/DEBS.test"
  - "query": "SELECT groupId, SUM(producedPower) AS producedPower FROM DEBS_solarPanels GROUP BY groupId WINDOW SLIDING(timestamp, SIZE 1 HOUR, ADVANCE BY 10 MINUTES) INTO CHECKSUM"
    "test_name": "milestone/DEBS.test"
  - "query": "SELECT start, end, vehicle, highway, direction, positionDiv5280, COUNT(speed) AS cntSpeed FROM (SELECT creationTS, vehicle, highway, direction, position / INT32(5280) AS positionDiv5280, speed FROM LinearRoadBenchmark_lrb) GROUP BY (vehicle, highway, direction, positionDiv5280) WINDOW SLIDING(creationTS, SIZE 30 SEC, ADVANCE BY 1 SEC) INTO CHECKSUM"
    "test_name": "milestone/LinearRoadBenchmark.test"
  - "query": "SELECT price * FLOAT64(89) / FLOAT64(100) AS price FROM Nexmark_bid INTO CHECKSUM"
    "test_name": "milestone/Nexmark.test"
  - "query": "SELECT * FROM Nexmark_bid WHERE auctionId % INT32(123) = INT32(0) INTO CHECKSUM"
    "test_name": "milestone/Nexmark.test"
  - "query": "SELECT start, end, start, end, auctionId, num, start, end, max_tmp FROM (SELECT auctionId, COUNT(auctionId) AS num, start, end FROM Nexmark_bid GROUP BY auctionId WINDOW SLIDING(timestamp, SIZE 10 SEC, ADVANCE BY 2 SEC)) INNER JOIN (SELECT auctionId, MAX(num_ids) AS max_tmp, start, end FROM (SELECT auctionId, COUNT(auctionId) AS num_ids, start FROM Nexmark_bid GROUP BY auctionId WINDOW SLIDING(timestamp, SIZE 10 SEC, ADVANCE BY 2 SEC)) WINDOW TUMBLING(start, SIZE 2 SEC)) ON num >= max_tmp WINDOW TUMBLING(start, SIZE 2 SEC) INTO CHECKSUM"
    "test_name": "milestone/Nexmark.test"
  - "query": "SELECT start, end, timestamp, auctionId, bidder, datetime, price, timestamp, id, initialbid, reserve, expires, seller, category FROM (SELECT * FROM Nexmark_bid) INNER JOIN (SELECT * FROM Nexmark_auction) ON auctionId = id WINDOW TUMBLING (timestamp, size 10 sec) INTO CHECKSUM"
    "test_name": "milestone/Nexmark.test"
  - "query": "SELECT campaign_id, SUM(user_id) AS sum_user_id FROM YahooStreamingBenchmark_ysb10k WHERE event_type < UINT64(1) GROUP BY campaign_id WINDOW TUMBLING(current_ms, SIZE 30 SEC) INTO CHECKSUM"
    "test_name": "milestone/YahooStreamingBenchmark.test"
