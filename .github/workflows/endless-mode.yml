name: Run Endless Mode
on:
  workflow_call:
    inputs:
      dev_image_tag:
        required: true
        type: string
        description: "Docker image tag of the development image"
      ref:
        type: string
        required: true
        description: "ref of the branch"

jobs:
  run-endless-mode:
    name: "${{matrix.arch}}-${{matrix.stdlib}}-${{matrix.build_type}}-${{ matrix.sanitizer }} Endless"
    timeout-minutes: 40
    runs-on: ${{ matrix.runner }}
    strategy:
      fail-fast: false
      matrix:
        arch: [ x64, arm64 ]
        stdlib: [ 'libstdcxx', 'libcxx' ]
        build_type: [ 'Debug', 'RelWithDebInfo' ]
        sanitizer: [ 'address', 'undefined', 'thread', 'none' ]
        exclude:
          # Limit the endless mode tests to unsanitized x64 libc++ debug builds
          - sanitizer: 'address'
          - sanitizer: 'undefined'
          - sanitizer: 'thread'
          - arch: arm64
          - build_type: 'RelWithDebInfo'
          - stdlib: 'libstdcxx'
        include:
          - arch: x64
            runner: [ "ubuntu-24.04" ]
    steps:
      - uses: actions/checkout@v4
        with:
          ref: ${{ inputs.ref }}
      - uses: ./.github/steps/prepare-github
        with:
          image_name: nebulastream/nes-development:${{ inputs.dev_image_tag }}-${{ matrix.stdlib }}-${{matrix.sanitizer}}
          ccache_key: ${{ matrix.arch }}-${{ matrix.build_type }}-${{matrix.sanitizer}}-${{matrix.stdlib}}
      - name: ccache
        uses: hendrikmuhs/ccache-action@v1.2.18
        with:
          key: ${{ matrix.arch }}-${{ matrix.build_type }}-${{matrix.sanitizer}}-${{matrix.stdlib}}
      - uses: ./.github/steps/run-in-container
        with:
          image_name: nebulastream/nes-development:${{ inputs.dev_image_tag }}-${{ matrix.stdlib }}-${{matrix.sanitizer}}
          run: |
            cmake -GNinja -B build -DUSE_SANITIZER=${{ matrix.sanitizer }} -DCMAKE_BUILD_TYPE=${{ matrix.build_type }} -DNES_LOG_LEVEL=DEBUG

      - uses: ./.github/steps/run-in-container
        name: CMake Build
        with:
          image_name: nebulastream/nes-development:${{ inputs.dev_image_tag }}-${{ matrix.stdlib }}-${{matrix.sanitizer}}
          run: |
            cmake --build build --target systest -j -- -k 0

      - uses: ./.github/steps/run-in-container
        name: Run Endless Mode
        with:
          image_name: nebulastream/nes-development:${{ inputs.dev_image_tag }}-${{ matrix.stdlib }}-${{matrix.sanitizer}}
          run: |
            source .github/.env/test-${{matrix.sanitizer}}.env
            printenv
            
            rm -f early_exit_marker
            (
              build/nes-systests/systest/systest --endless --exclude-groups large 
              touch early_exit_marker
            ) &
            
            PROGRAM_PID=$!
            sleep 300
            kill $PROGRAM_PID || true
            
            # Wait briefly to ensure the touch command runs if program terminated early
            sleep 1
            
            # Check if the program exited early by looking for marker file
            if [ -f early_exit_marker ]; then
              echo "Program terminated before the 5-minute mark!"
              exit 1  # Fail the job
            else
              echo "Success: Program ran for the full 5 minutes"
            fi
