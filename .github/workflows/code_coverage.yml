name: NES Code Coverage

# Write here the documentation of this workflow file

on:
    # Dear Reviewer, if you can read this message it means that I have forgotten to remove the trigger on push. Please let me know during your review.
#  push:
#    branches:
#      - 99-testcoverage-in-ci

  # We are using this yaml in other workflows (e.g. nightly or pr), so we need to allow this workflow to be triggered by a workflow call.
  workflow_call:

jobs:
  build-code-coverage-ref:
    if: ${{ ! failure() && ! cancelled() }}
    container:
      # Figure out how we can get the tag from the previous job, if this workflow is triggered by another workflow call
      # Otherwise, we will use nebulastream/nes-development:latest
      #image: nebulastream/nes-development:${{ needs.detect-dependency-changes.outputs.tag }}
      image: nebulastream/nes-development:latest
      volumes:
        - ccache:/ccache
      env:
        CCACHE_DIR: /ccache
      options: --user root
    timeout-minutes: 40
    runs-on: [ self-hosted, linux, Build, "${{matrix.platform}}" ]
    strategy:
      fail-fast: false
      matrix:
        platform: [ x64 ]
    # Now we do the same for the provided base branch
    steps:
      - name: Cache Ref Branch Coverage
        uses: actions/cache@v3
        id: ref-cov-cache
        env:
          cache-name: ref-cov-cache
        with:
          path: /tmp/cache/ref-coverage.lcov
          key: ${{ matrix.platform }}-ref-cov-${{ github.sha }}
      - if: ${{ steps.ref-cov-cache.outputs.cache-hit != 'true' }}
        uses:
          AutoModality/action-clean@v1
      - name: Checkout Base Branch
        if: ${{ steps.ref-cov-cache.outputs.cache-hit != 'true' }}
        uses: actions/checkout@v4
        with:
          # As we have not merged this PR, the base branch (main) does not have the target llvm_cov_export_lcov defined
          # Therefore, we use a specific commit hash to check out the base branch
          ref: ${{ github.event.pull_request.base.ref }}
#          ref: 389c7ea2d16098fed58901dedfdc742ff764d9e0
          ssh-key: ${{ secrets.CI_SECRET }}
      - name: Build base coverage if not in cache
        if: ${{ steps.ref-cov-cache.outputs.cache-hit != 'true' }}
        run: |
          cmake -DNES_COMPUTE_COVERAGE=ON -B build
          cmake --build build -j -- -k 0
          ctest --test-dir build -j --output-on-failure
          cmake --build build --target llvm_cov_export_lcov
          mkdir -p /tmp/cache/ && cp build/default_coverage.lcov /tmp/cache/ref-coverage.lcov
      - name: Upload code coverage for ref branch
        uses: actions/upload-artifact@v4
        with:
          name: ${{ matrix.platform }}-ref-cov-${{ github.sha }}.info
          path: /tmp/cache/ref-coverage.lcov


  build-code-coverage-pr-branch:
    if: ${{ ! failure() && ! cancelled() }}
    container:
      # Figure out how we can get the tag from the previous job, if this workflow is triggered by another workflow call
      # Otherwise, we will use nebulastream/nes-development:latest
      #image: nebulastream/nes-development:${{ needs.detect-dependency-changes.outputs.tag }}
      image: nebulastream/nes-development:latest
      volumes:
        - ccache:/ccache
      env:
        CCACHE_DIR: /ccache
      options: --user root
    timeout-minutes: 40
    runs-on: [ self-hosted, linux, Build, "${{matrix.platform}}" ]
    strategy:
      fail-fast: false
      matrix:
        platform: [ x64 ]
    steps:
      - name: Cache PR Branch Coverage
        uses: actions/cache@v3
        id: pr-cov-cache
        env:
          cache-name: pr-cov-cache
        with:
          path: /tmp/cache/pr-coverage.lcov
          key: ${{ matrix.platform }}-cov-${{ github.sha }}
      - if: ${{ steps.pr-cov-cache.outputs.cache-hit != 'true' }}
        uses:
          AutoModality/action-clean@v1
      - name: Checkout Base Branch
        if: ${{ steps.pr-cov-cache.outputs.cache-hit != 'true' }}
        uses: actions/checkout@v4
        with:
          ssh-key: ${{ secrets.CI_SECRET }}
      - name: Build base coverage if not in cache
        if: ${{ steps.pr-cov-cache.outputs.cache-hit != 'true' }}
        run: |
          cmake -DNES_COMPUTE_COVERAGE=ON -B build
          cmake --build build -j -- -k 0
          ctest --test-dir build -j --output-on-failure
          cmake --build build --target llvm_cov_export_lcov
          mkdir -p /tmp/cache/ && cp build/default_coverage.lcov /tmp/cache/pr-coverage.lcov
      - name: Upload code coverage for PR branch
        uses: actions/upload-artifact@v4
        with:
          name: ${{ matrix.platform }}-pr-cov-${{ github.sha }}.info
          path: /tmp/cache/pr-coverage.lcov


  # For now, we build the code coverage for x64 only
  build-code-coverage:
    needs: [ build-code-coverage-ref, build-code-coverage-pr-branch ]
    if: ${{ ! failure() && ! cancelled() }}
    container:
      # Figure out how we can get the tag from the previous job, if this workflow is triggered by another workflow call
      # Otherwise, we will use nebulastream/nes-development:latest
      #image: nebulastream/nes-development:${{ needs.detect-dependency-changes.outputs.tag }}
      image: nebulastream/nes-development:latest
      options: --user root
    timeout-minutes: 40
    runs-on: [ self-hosted, linux, Build, "${{matrix.platform}}" ]
    strategy:
      fail-fast: false
      matrix:
        platform: [ x64 ]
    steps:
      - name: Downloading code coverage for ref branch
        uses: actions/download-artifact@v4
        with:
          name: ${{ matrix.platform }}-ref-cov-${{ github.sha }}.info
      - name: Downloading code coverage for pr branch
        uses: actions/download-artifact@v4
        with:
          name: ${{ matrix.platform }}-pr-cov-${{ github.sha }}.info
      # Comparing the code coverage from the current branch with the base branch
      - name: Generate Code Coverage report
        id: code-coverage
        uses: barecheck/code-coverage-action@v1
        with:
          barecheck-github-app-token: ${{ secrets.BARECHECK_GITHUB_APP_TOKEN }}
          lcov-file: ${{ matrix.platform }}-pr-cov-${{ github.sha }}.info
          base-lcov-file: ${{ matrix.platform }}-ref-cov-${{ github.sha }}.info
          send-summary-comment: true
          show-annotations: "warning"

      - name: Converting from lcov to Cobertura
        run: |
          apt-get install -y git python3-pip && \
          git clone https://github.com/gagikk/lcov-to-cobertura-xml.git && \
          python3 lcov-to-cobertura-xml/lcov_cobertura/lcov_cobertura.py pr-lcov.info -b build --output /tmp/coverage/coverage.xml --demangle

      - name: Building a markdown of the current code coverage of this branch
        uses: irongut/CodeCoverageSummary@v1.3.0
        with:
          filename: /tmp/coverage/coverage.xml
          badge: true
          fail_below_min: true
          format: markdown
          hide_branch_rate: false
          hide_complexity: true
          indicators: true
          output: both
          thresholds: '30 75'
      - name: Add Coverage PR Comment
        uses: marocchino/sticky-pull-request-comment@v2
        if: github.event_name == 'pull_request'
        with:
          recreate: true
          path: code-coverage-results.md