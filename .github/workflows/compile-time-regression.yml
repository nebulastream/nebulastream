name: Compile Time Regression

# This workflow is triggered every night at 3:30 AM UTC.
# We measure the compile time of a clean uncached rebuild of NebulaStream and apply Clang Build Analyzer to collect
# statistics on the heavy hitter.
# The workflow can be manually dispatched on demand for any branch, while the nightly version always builds the main
# branch
on:
  workflow_dispatch:
    inputs:
      branch:
        default: "main"
        description: "which branch to use"
  schedule:
    - cron: '30 3 * * *' # gets executed every night at 2:30 AM UTC

jobs:
  get-dev-images:
    uses: ./.github/workflows/get_dev_images.yml
    secrets: inherit
    with:
      ref: ${{ inputs.branch || 'main' }}

  compile-time-regression:
    needs: [ get-dev-images ]
    runs-on: [ self-hosted, linux, Build, "${{ matrix.arch }}" ]
    container:
      image: nebulastream/nes-development:${{ needs.get-dev-images.outputs.image-tag }}
      options: --user root
    strategy:
      fail-fast: false
      matrix:
        arch: [ x64, arm64 ]
    steps:
      - uses: actions/checkout@v4
        with:
          ref: ${{ inputs.branch || 'main' }}
      - name: analyze-build
        run: |
          echo "# Compile Time Summary for branch ${{ inputs.branch || 'main' }}" >> $GITHUB_STEP_SUMMARY
          echo '## CMake Configuration Time' >> $GITHUB_STEP_SUMMARY
          echo '```' >> $GITHUB_STEP_SUMMARY
          bash -c "time cmake -GNinja -DENABLE_FTIME_TRACE=ON -DUSE_CCACHE_IF_AVAILABLE=OFF -B build" 2>> $GITHUB_STEP_SUMMARY
          echo '```' >> $GITHUB_STEP_SUMMARY
          
          ClangBuildAnalyzer --start build
          
          echo '## Total Build Time' >> $GITHUB_STEP_SUMMARY
          echo '```' >> $GITHUB_STEP_SUMMARY
          bash -c "time cmake --build build -j -- --quiet " 2>> $GITHUB_STEP_SUMMARY
          echo '```' >> $GITHUB_STEP_SUMMARY
          
          ClangBuildAnalyzer --stop build build-summary
          
          echo '## ClangBuildAnalyzer' >> $GITHUB_STEP_SUMMARY
          echo '```' >> $GITHUB_STEP_SUMMARY
          ClangBuildAnalyzer --analyze build-summary >> $GITHUB_STEP_SUMMARY
          echo '```' >> $GITHUB_STEP_SUMMARY
