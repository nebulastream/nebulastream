name: NES Nightly

# This workflow is triggered every night at 2:30 AM UTC.
# This is a good way to ensure that the master branch is always in a good state.
# For now, this workflow file runs the same tests as `github_pr.yml` and then creates a docker image nes-executable-image:nightly, if the test pass
# We will add long-running test for stability and performance checks in the future.

on:
  schedule:
    - cron: '30 2 * * *' # gets executed every night at 2:30 AM UTC

jobs:
  # We call the github_pr.yml workflow to run the same tests as for a PR.
  github_pr:
    uses: ./.github/workflows/github_pr.yml

  # This is a placeholder for adding long-running tests in the future. Currently, it simply prints a message.
  long_running_test:
    needs: [ github_pr ]
    runs-on: [ self-hosted, linux, X64, Build ]
    steps:
      - name: Print Placeholder Message
        run: echo "Long running tests will be added in the future."

  create-nightly-image:
    runs-on: [ self-hosted, linux, X64, Build ]
    needs: [ long_running_test ]
    if: github.ref == 'refs/heads/master'
    env:
      DOCKER_USER_NAME: ${{ secrets.DOCKER_USER_NAME}}
      DOCKER_SECRET: ${{ secrets.DOCKER_SECRET}}
      EVENT: ${{ github.event_name }}
      NEXT_VERSION: ${{ github.event.inputs.version }}
    steps:
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      - name: "Build and Release NES Executable Image"
        run: |
          nes_version=${GITHUB_REF_NAME:1}
          echo "Preparing and Releasing new executable image with version $nes_version and latest"
          echo "$DOCKER_SECRET" | docker login -u "$DOCKER_USER_NAME" --password-stdin
          wget --no-check-certificate -O nes-amd64.deb https://github.com/nebulastream/nebulastream-dev-builds/releases/download/$GITHUB_REF_NAME/NebulaStream-$nes_version-ubuntu-$UBUNTU_VERSION-Linux.X64.deb
          wget --no-check-certificate -O nes-arm64.deb https://github.com/nebulastream/nebulastream-dev-builds/releases/download/$GITHUB_REF_NAME/NebulaStream-$nes_version-ubuntu-$UBUNTU_VERSION-Linux.arm64.deb
          docker buildx build . -f docker/executableImage/Dockerfile-NES-Executable-Multi-Arch --platform=linux/amd64,linux/arm64 --tag nebulastream/nes-public-executable-image:$nes_version --tag nebulastream/nes-public-executable-image:nightly --push
          rm -rf nes-amd64.deb nes-arm64.deb
          echo "Pushed the execution image"
          docker logout