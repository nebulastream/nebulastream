name: NES Nightly

# This workflow is triggered every night at 2:30 AM UTC.
# This is a good way to ensure that the main branch is always in a good state.
# For now, this workflow file runs the same tests as `pr.yml` and then creates a docker image nes-executable-image:nightly, if the test pass.
# For pushing an image to the docker hub, we build debian packages (nes-amd64.deb and nes-arm64.deb) and then use them to build the docker image.
# We will add long-running test for stability and performance checks in the future.

on:
  workflow_dispatch:
    inputs:
      ref:
        required: false
        default: 'main'
        description: "which branch/ref to use for running the nightly job"
  schedule:
    - cron: '30 2 * * *' # gets executed every night at 4:30 AM CEST

jobs:
  fetch-current-main-commit:
    runs-on: [ self-hosted ]
    outputs:
      sha: ${{ steps.fetch-sha.outputs.sha }}
    steps:
      - uses: actions/checkout@v4
        with:
          ref: ${{ inputs.ref || 'main' }}
      - name: Fetch SHA
        id: fetch-sha
        run: |
          git rev-parse --verify HEAD
          echo "sha=$(git rev-parse --verify HEAD)" >> "$GITHUB_OUTPUT"

  get-dev-images:
    needs: fetch-current-main-commit
    uses: ./.github/workflows/get_dev_images.yml
    secrets: inherit
    with:
      ref: ${{ needs.fetch-current-main-commit.outputs.sha }}

  full-clang-tidy:
    needs: [ fetch-current-main-commit, get-dev-images ]
    uses: ./.github/workflows/clang_tidy_full.yml
    secrets: inherit
    with:
      ref: ${{ needs.fetch-current-main-commit.outputs.sha }}
      dev_image_tag: ${{ needs.get-dev-images.outputs.image-tag }}

  compile-time-regression:
    needs: [ fetch-current-main-commit, get-dev-images ]
    uses: ./.github/workflows/compile_time_regression.yml
    secrets: inherit
    with:
      ref: ${{ needs.fetch-current-main-commit.outputs.sha }}
      dev_image_tag: ${{ needs.get-dev-images.outputs.image-tag }}

  check-format:
    needs: [ fetch-current-main-commit, get-dev-images ]
    name: "Check format"
    uses: ./.github/workflows/format.yml
    with:
      head_sha: ${{ needs.fetch-current-main-commit.outputs.sha }}
      dev_image_tag: ${{ needs.get-dev-images.outputs.image-tag }}
      # since there is no merge base to compare against, just check last 10 commits
      number_of_commits: 10

  build-and-test:
    name: "Run build and test"
    needs: [ fetch-current-main-commit, get-dev-images ]
    uses: ./.github/workflows/build_and_test.yml
    with:
      ref: ${{ needs.fetch-current-main-commit.outputs.sha }}
      dev_image_tag: ${{ needs.get-dev-images.outputs.image-tag }}

  test-other-configs:
    needs: [ fetch-current-main-commit, get-dev-images ]
    runs-on: [ self-hosted, linux, X64, Build ]
    name: "Build and tests: ${{matrix.cmake_args.name}}"
    container:
      image: nebulastream/nes-development:${{ needs.get-dev-images.outputs.image-tag }}-${{ matrix.stdlib }}
      volumes:
        - ccache:/ccache
      env:
        CCACHE_DIR: /ccache
        MOLD_JOBS: 1
      # TODO #401 Investigate rootless docker containers
      options: --user root
    timeout-minutes: 40
    strategy:
      fail-fast: false
      matrix:
        cmake_args:
          - name: tupleBuffer_debugging
            arg: -DCMAKE_NES_DEBUG_TUPLE_BUFFER_LEAKS=ON
        stdlib: [ libcxx, libstdcxx ]
        build_type: [ RelWithDebInfo, Debug ]
    steps:
      - uses: actions/checkout@v4
        with:
          ref: ${{ needs.fetch-current-main-commit.outputs.sha }}
      - name: Configure NebulaStream
        run: cmake -B build -DCMAKE_BUILD_TYPE=${{ matrix.build_type }} ${{ matrix.cmake_args.arg }}
      - name: Build NebulaStream
        run: cmake --build build -j -- -k 0
      - name: Run Tests
        # timeout of 600 seconds due to systest. Increase this number only if we encounter timeouts in our systests.
        run: ctest --test-dir build -j --output-on-failure --output-junit /junit.xml --timeout 600
      - name: Upload Test Summary
        uses: actions/upload-artifact@v4
        if: ${{ !cancelled() && !github.event.act }}
        with:
          name: junit-${{ matrix.cmake_args.name }}-${{ matrix.stdlib }}.xml
          path: /junit.xml

  # This is a placeholder for adding long-running tests in the future. Currently, it simply prints a message.
  long-running-tests:
    needs: [ build-and-test ]
    runs-on: [ self-hosted, linux, X64, Build ]
    steps:
      - name: Print Placeholder Message
        run: echo "Long running tests will be added in the future."

  build-and-benchmark:
    needs: [ fetch-current-main-commit, get-dev-images ]
    uses: ./.github/workflows/build-and-benchmark.yml
    secrets: inherit
    with:
      ref: ${{ needs.fetch-current-main-commit.outputs.sha }}
      dev_image_tag: ${{ needs.get-dev-images.outputs.image-tag }}
      run_reason: "Nightly Benchmark"

  benchmark-compile-time:
    needs: [ fetch-current-main-commit, get-dev-images ]
    uses: ./.github/workflows/benchmark-compile-time.yml
    secrets: inherit
    with:
      ref: ${{ needs.fetch-current-main-commit.outputs.sha }}
      dev_image_tag: ${{ needs.get-dev-images.outputs.image-tag }}
      run_reason: "Nightly Benchmark"

  create-nightly-image:
    needs: [ build-and-test ]
    if: ${{ !github.event.act && inputs.ref == 'main' }}
    uses: ./.github/workflows/create_release_image.yml
    secrets: inherit
    with:
      ref: "main"
      dockerhub-tag: "nightly"
