name: NES PR CI

# The following pipeline is meant to run for every PR. It will not call any other workflow / pipeline.
# It will also apply the format check. If these steps are successful, it will try to build the PR and run the tests.
# In the future, we will add more automated checks to this pipeline, e.g., clang-tidy for our codebase or code coverage checks.
#
# If this pr is called with act, it has to be used with a custom event.json and called via `act -e event.json`.
# Otherwise, we are not running the job, as mentioned: https://github.com/nektos/act/issues/720

on:
  workflow_call:
    inputs:
      branch:
        required: true
        type: string
  pull_request:
    # The ready_for_review event is used when a draft pr is changed into a non-draft version. If we did
    # not use the ready_for_review the ci would not be triggered and appear to have passed.
    types: [ ready_for_review, synchronize, opened, reopened ]

# cancel previous runs of same PR / branch.
concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  check-format:
    if: ${{ !github.event.workflow_call }}
    runs-on: [ self-hosted, linux, Build ]
    container:
      image: nebulastream/nes-development:latest
      # TODO #401 Investigate rootless docker containers
      options: --user root
      env:
        GH_TOKEN: ${{ github.token }}
        # has to be sha since github.base_ref would have to be checked out
        BASE_REF: ${{ github.event.pull_request.base.sha }}
    permissions:
      issues: read
      contents: read
    steps:
      - uses: actions/checkout@v4
        with:
          # check-todos.py needs to reach the merge-base,
          # so it fails if the PR is longer than 100 commits
          fetch-depth: 100
      - name: Check Format
        run: ./scripts/format.sh

  get-dev-images:
    uses: ./.github/workflows/get_dev_images.yml
    secrets: inherit
    with:
      ref: ${{ github.event.pull_request.head.ref }}

  build-linux:
    name: "Build ${{matrix.arch}}"
    needs: [ get-dev-images ]
    container:
      image: nebulastream/nes-development:${{ needs.get-dev-images.outputs.image-tag }}
      volumes:
        - ccache:/ccache
      env:
        CCACHE_DIR: /ccache
        MOLD_JOBS: 1
      # TODO #401 Investigate rootless docker containers
      options: --user root
    timeout-minutes: 40
    runs-on: [ self-hosted, linux, Build, "${{matrix.arch}}" ]
    strategy:
      fail-fast: false
      matrix:
        arch: [ x64, arm64 ]
    steps:
      - uses: actions/checkout@v4
      - name: Configure NebulaStream
        run: cmake -GNinja -B build
      - name: Build NebulaStream
        run: cmake --build build -j -- -k 0
      - name: Run Tests
        run: ctest --test-dir build -j -E "^STGRP_" --output-on-failure --output-junit /junit.xml --timeout 20
      - name: Upload Test Summary
        uses: actions/upload-artifact@v4
        if: ${{ !cancelled() && !github.event.act }}
        with:
          name: junit-${{ matrix.arch }}.xml
          path: /junit.xml

  run_code_coverage:
    needs: [ get-dev-images ]
    name: "Run Code Coverage"
    uses: ./.github/workflows/code_coverage.yml
    # Using the tag from the get-dev-images job
    with:
      tag_pr: ${{ needs.get-dev-images.outputs.image-tag }}
    secrets: inherit
