name: NES PR CI Merge
on:
  pull_request:
    branches: [ main ]
    types: [ closed ]

jobs:
  check-and-update-development-images:
    # This job is executed when a PR is merged into the main branch.
    # If changes to the dependencies are detected we update the `latest`
    # tag of our development images to the docker images built with the
    # updated dependencies.
    runs-on: [ self-hosted, linux, Build ]
    if: github.event.pull_request.merged == true
    steps:
      - uses: actions/checkout@v4
      - name: Get changed files
        id: changed-files
        uses: tj-actions/changed-files@v44
        with:
          files: |
            vcpkg/**
            docker/dependency/**
      - name: Login to Docker Hub
        if: ${{ steps.changed-files.outputs.any_modified == 'true' }}
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USER_NAME }}
          password: ${{ secrets.DOCKER_SECRET }}
      - name: Set up Docker Buildx
        if: ${{ steps.changed-files.outputs.any_modified == 'true' }}
        uses: docker/setup-buildx-action@v3
      - name: Retag Base Image
        run: |
          docker buildx imagetools create -t nebulastream/nes-development-base:latest \
            nebulastream/nes-development-base:${{ github.head_ref }}

      - name: Retag Specialized Images
        run: |
          # Iterate through each image type
          for image_tag in development-dependency development ci; do
            docker buildx imagetools create -t nebulastream/nes-$image_tag:latest \
              nebulastream/nes-$image_tag:${{ github.head_ref }}
          
            docker buildx imagetools create -t nebulastream/nes-$image_tag:latest-libcxx \
              nebulastream/nes-$image_tag:${{ github.head_ref }}-libcxx-none
          
            for stdlib in libcxx libstdcxx; do
              for sanitizer in none asan tsan ubsan; do
                docker buildx imagetools create -t nebulastream/nes-$image_tag:latest-$stdlib-$sanitizer \
                  nebulastream/nes-$image_tag:${{ github.head_ref }}-$stdlib-$sanitizer
          
                docker buildx imagetools create -t nebulastream/nes-$image_tag:latest-$sanitizer \
                  nebulastream/nes-$image_tag:${{ github.head_ref }}-$sanitizer
          
                docker buildx imagetools create -t nebulastream/nes-$image_tag:latest-$stdlib-$sanitizer \
                  nebulastream/nes-$image_tag:${{ github.head_ref }}-$stdlib-$sanitizer
              done
            done
          done
          
          docker buildx imagetools create -t nebulastream/nes-benchmark:latest \
            nebulastream/nes-benchmark:${{ github.head_ref }}

      - name: Update Cache Images
        run: |
          for image_tag in development-dependency development; do
            for arch in x64 arm64; do
              for stdlib in libcxx libstdcxx; do
                if [[ "$arch" == "arm64" && "$stdlib" == "libstdcxx" ]]; then
                  continue
                fi
                for sanitizer in none asan tsan ubsan; do
                  docker buildx imagetools create -t nebulastream/nes-$image_tag-cache:latest-$arch-$stdlib-$sanitizer \
                    nebulastream/nes-$image_tag-cache:${{ github.head_ref }}-$arch-$stdlib-$sanitizer
                done
              done
            done
          done
