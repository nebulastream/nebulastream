name: Create container for ref

# builds images for nebuli, worker for the given ref (brach, tag, or commit sha)
# and publishes the images to nebulastream/nebuli and nebulastream/worker,
# tagged as specified via the parameter.


on:
  workflow_call:
    inputs:
      ref:
        description: 'ref to build docker executable images for'
        required: true
        type: string
      dockerhub-tag:
        description: 'tag to tag the image on dockerhub with'
        required: true
        type: string
      dev_image_tag:
        required: true
        type: string
        description: "Docker image tag of the development image"

jobs:
  build-image:
    runs-on: [ self-hosted, linux, Build, "${{matrix.arch}}" ]
    strategy:
      fail-fast: false
      matrix:
        arch: [ x64, arm64 ]
    steps:
      - uses: actions/checkout@v4
        with:
          ref: ${{ inputs.ref }}
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USER_NAME }}
          password: ${{ secrets.DOCKER_SECRET }}
      - name: Build Nebuli Image
        uses: docker/build-push-action@v6
        with:
          push: true
          tags: nebulastream/nebuli:${{ inputs.dockerhub-tag }}-${{ matrix.arch }}
          build-args: |
            TAG=${{inputs.dev_image_tag}}
          context: .
          file: ${{ github.workspace }}/docker/nebuli/Nebuli.dockerfile
      - name: Build single-node worker
        uses: docker/build-push-action@v6
        with:
          push: true
          tags: nebulastream/worker:${{ inputs.dockerhub-tag }}-${{ matrix.arch }}
          build-args: |
            TAG=${{inputs.dev_image_tag}}
          context: .
          file: ${{ github.workspace }}/docker/single-node-worker/SingleNodeWorker.dockerfile

  merge-images:
    name: "Merge images for different platforms into a single Multi-Platform image"
    needs: [ build-image ]
    runs-on: [ self-hosted, linux, Build ]
    steps:
      - name: Login to Docker Hub
        if: ${{ !github.event.act }}
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USER_NAME }}
          password: ${{ secrets.DOCKER_SECRET }}
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      - name: Combine Manifests
        run: |
          docker buildx imagetools create -t nebulastream/nebuli:${{ inputs.dockerhub-tag }} \
            nebulastream/nebuli:${{ inputs.dockerhub-tag }}-x64 \
            nebulastream/nebuli:${{ inputs.dockerhub-tag }}-arm64

          docker buildx imagetools create -t nebulastream/worker:${{ inputs.dockerhub-tag }} \
            nebulastream/worker:${{ inputs.dockerhub-tag }}-x64 \
            nebulastream/worker:${{ inputs.dockerhub-tag }}-arm64
