# This workflow builds and tests a ref, on a combination of different architectures and standard libraries.
name: Build and Test
on:
  workflow_call:
    inputs:
      dev_image_tag:
        required: true
        type: string
        description: "Docker image tag of the development image"
      ref:
        type: string
        required: true
        description: "ref of the branch"
      number_of_worker_threads:
        type: string
        description: "Number of worker threads the large scale tests should be run with"
        default: 4
      buffer_size:
        type: string
        description: "Buffer size the large scale tests should be run with"
        default: 4096
      page_size:
        type: string
        description: "Page size the large scale tests should be run with"
        default: 4096
      number_of_partitions:
        type: string
        description: "Number of partitions large scale tests should be run with"
        default: 128

jobs:
  build-and-test-linux:
    name: "Run large scale tests on ${{matrix.arch}} with ${{matrix.stdlib}} in ${{ matrix.build_type }}"
    container:
      image: nebulastream/nes-development:${{ inputs.dev_image_tag }}-${{ matrix.stdlib }}-${{ matrix.sanitizer }}
      volumes:
        - ccache:/ccache
        - test-file-cache:/test-file-cache
      env:
        CCACHE_DIR: /ccache
        MOLD_JOBS: 1
      # TODO #401 Investigate rootless docker containers
      options: --user root
    timeout-minutes: 40
    runs-on: [ self-hosted, linux, Build, "${{matrix.arch}}" ]
    strategy:
      fail-fast: false
      matrix:
        arch: [ x64 ]
        stdlib: [ 'libcxx' ]
        sanitizer: [ 'none' ]
        build_type: [ 'RelWithDebInfo', 'Release' ]
    steps:
      - uses: actions/checkout@v4
        with:
          ref: ${{ inputs.ref }}
      - name: Configure NebulaStream
        run: cmake -GNinja -B build -DUSE_SANITIZER=${{ matrix.sanitizer }} -DCMAKE_BUILD_TYPE=${{ matrix.build_type }} -DENABLE_LARGE_TESTS=ON -DExternalData_OBJECT_STORES=/test-file-cache -DNES_LOG_LEVEL=DEBUG
      - name: Build NebulaStream
        run: cmake --build build --target systest -j
      - name: Run large System Level Tests
        run: |
          echo "Running all large tests with: "
          echo " - NUMBER_OF_WORKER_THREADS: ${{ inputs.number_of_worker_threads }}"
          echo " - BUFFER_SIZE: ${{ inputs.buffer_size }}"
          echo " - PAGE_SIZE: ${{ inputs.page_size }}"
          echo " - NUMBER_OF_PARTITIONS: ${{ inputs.number_of_partitions }}"    

          build/nes-systests/systest/systest \
              --workingDir=build/nes-systests/large_scale \
              --data build/nes-systests/testdata \
              --groups large \
              -- \
              --worker.queryOptimizer.executionMode=COMPILER \
              --worker.queryEngine.numberOfWorkerThreads=${{ inputs.number_of_worker_threads }} \
              --worker.queryOptimizer.operatorBufferSize=${{ inputs.buffer_size }} \
              --worker.bufferSizeInBytes=${{ inputs.buffer_size }} \
              --worker.queryOptimizer.pageSize=${{ inputs.page_size }} \
              --worker.queryOptimizer.numberOfPartitions=${{ inputs.number_of_partitions }} \
              --worker.numberOfBuffersInGlobalBufferManager=200000

      - name: Upload Test Logs on Failure
        uses: actions/upload-artifact@v4
        if: failure() && !github.event.act
        with:
          name: test-logs-${{ matrix.arch }}-${{ matrix.stdlib }}-${{ matrix.build_type }}
          path: build/nes-systests/SystemTest_*.log
