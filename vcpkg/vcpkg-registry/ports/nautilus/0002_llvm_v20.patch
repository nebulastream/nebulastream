Index: nautilus/src/nautilus/compiler/backends/mlir/MLIRPassManager.cpp
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/nautilus/src/nautilus/compiler/backends/mlir/MLIRPassManager.cpp b/nautilus/src/nautilus/compiler/backends/mlir/MLIRPassManager.cpp
--- a/nautilus/src/nautilus/compiler/backends/mlir/MLIRPassManager.cpp	(revision 438a188d6dd0a9d545e535c3d9778cb236d1c625)
+++ b/nautilus/src/nautilus/compiler/backends/mlir/MLIRPassManager.cpp	(date 1743009576835)
@@ -4,6 +4,7 @@
 #include "nautilus/exceptions/NotImplementedException.hpp"
 #include <mlir/Conversion/ControlFlowToLLVM/ControlFlowToLLVM.h>
 #include <mlir/Conversion/FuncToLLVM/ConvertFuncToLLVMPass.h>
+#include <mlir/Conversion/ArithToLLVM/ArithToLLVM.h>
 #include <mlir/ExecutionEngine/OptUtils.h>
 #include <mlir/Pass/PassManager.h>
 #include <mlir/Transforms/Passes.h>
@@ -43,6 +44,7 @@
 	// Apply lowering passes.
 	passManager.addPass(mlir::createConvertFuncToLLVMPass());
 	passManager.addPass(mlir::createConvertControlFlowToLLVMPass());
+	passManager.addPass(mlir::createArithToLLVMConversionPass());

 	// Run passes.
 	if (mlir::failed(passManager.run(*module))) {
Index: nautilus/src/nautilus/compiler/backends/mlir/MLIRCompilationBackend.cpp
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/nautilus/src/nautilus/compiler/backends/mlir/MLIRCompilationBackend.cpp b/nautilus/src/nautilus/compiler/backends/mlir/MLIRCompilationBackend.cpp
--- a/nautilus/src/nautilus/compiler/backends/mlir/MLIRCompilationBackend.cpp	(revision 438a188d6dd0a9d545e535c3d9778cb236d1c625)
+++ b/nautilus/src/nautilus/compiler/backends/mlir/MLIRCompilationBackend.cpp	(date 1743009837556)
@@ -13,6 +13,9 @@
 #include <mlir/IR/MLIRContext.h>
 #include <mlir/Target/LLVMIR/Dialect/Builtin/BuiltinToLLVMIRTranslation.h>
 #include <mlir/Target/LLVMIR/Dialect/LLVMIR/LLVMToLLVMIRTranslation.h>
+#include <mlir/Dialect/LLVMIR/LLVMDialect.h>
+#include <mlir/Dialect/LLVMIR/Transforms/InlinerInterfaceImpl.h>
+#include <mlir/Transforms/Inliner.h>

 namespace nautilus::compiler::mlir {

@@ -32,9 +35,8 @@
 	::mlir::func::registerAllExtensions(registry);
 	registerBuiltinDialectTranslation(registry);
 	registerLLVMDialectTranslation(registry);
-
+	::mlir::LLVM::registerInlinerInterface(registry);
 	::mlir::MLIRContext context(registry);
-	context.allowsUnregisteredDialects();

 	auto loweringProvider = std::make_unique<MLIRLoweringProvider>(context);
 	auto mlirModule = loweringProvider->generateModuleFromIR(ir);
