# name: function/arithmetical/FunctionAdd.test
# description: Simple function add tests
# groups: [Function, FunctionAdd]

Source window INT8 val_i8 INT16 val_i16 INT32 val_i32 INT64 val_i64 UINT8 val_u8 UINT16 val_u16 UINT32 val_u32 UINT64 val_u64 FLOAT32 val_f32 FLOAT64 val_f64
-42,-129,-32769,-2147483649,42,256,65536,4294967296,23,23

# Todo #442: the below system level tests currently perform downcasts.
# Since equals is commutative, e.g., 'val_i8 + val_f32' equals 'val_f32 + val_i8', so we check only one direction.
#   - int8_t + int16_t = int8_t -> -42(int8) + -129(int16) = 85(int8)
#   - int16_t + int8_t = int16_t -> -129(int16) + -42(int8) = -171(int16)
# - the above follows the c++ standard, given that there is no implicit cast to a larger datatype and the
#   left-side datatype determines the type.
# Check if different numeric types support the equals operation
SELECT
    val_i8 + 42 AS val_i8,
    val_i16 + 42 AS val_i16,
    val_i32 + 42 AS val_i32,
    val_i64 + 42 AS val_i64,

    val_u8 + 42_U AS val_u8,
    val_u16 + 42_U AS val_u16,
    val_u32 + 42_U AS val_u32,
    val_u64 + 42_U AS val_u64,

    val_f32 + 42.0_F AS val_f32,
    val_f64 + 42.0_D AS val_f64
FROM window INTO SINK
----
0 -87 -32727 -2147483607 84 298 65578 4294967338 65.000000 65.000000

# Equal i8 value with all other data types
SELECT
    # signed
    val_i8 + val_i8 AS val_i8_i8,
    val_i8 + val_i8 + 1 AS val_i8_i8_plus_1,
    val_i8 + val_i16 AS val_i8_i16,
    val_i8 + val_i16 + 1 AS val_i8_i16_plus_1,
    val_i8 + val_i32 AS val_i8_i32,
    val_i8 + val_i32 + 1 AS val_i8_i32_plus_1,
    val_i8 + val_i64 AS val_i8_i64,
    val_i8 + val_i64 + 1 AS val_i8_i64_plus_1,
    # unsigned
    val_i8 + val_u8  AS val_i8_u8,
    val_i8 + val_u8  + 1_U AS val_i8_u8_plus_1,
    val_i8 + val_u16 AS val_i8_u16,
    val_i8 + val_u16 + 1_U AS val_i8_u16_plus_1,
    val_i8 + val_u32 AS val_i8_u32,
    val_i8 + val_u32 + 1_U AS val_i8_u32_plus_1,
    val_i8 + val_u64 AS val_i8_u64,
    val_i8 + val_u64 + 1_U AS val_i8_u64_plus_1,
    # float
    val_i8 + val_f32 AS val_i8_f32_,
    val_i8 + val_f32 + 1_F AS val_i8_f32_plus_1,
    val_i8 + val_f64 AS val_i8_f64,
    val_i8 + val_f64 + 1_D AS val_i8_f64_plus_1
FROM window INTO SINK
----
-84 -83 85 86 -43 -42 -43 -42 0 1 -42 -41 -42 -41 -42 -41 0 0 0 0

# Equal i16 value with all other data types
SELECT
    # signed
    val_i16 + val_i8 AS val_i16_i8,
    val_i16 + val_i8 + 1 AS val_i16_i8_plus_1,
    val_i16 + val_i16 AS val_i16_i16,
    val_i16 + val_i16 + 1 AS val_i16_i16_plus_1,
    val_i16 + val_i32 AS val_i16_i32,
    val_i16 + val_i32 + 1 AS val_i16_i32_plus_1,
    val_i16 + val_i64 AS val_i16_i64,
    val_i16 + val_i64 + 1 AS val_i16_i64_plus_1,
    # unsigned
    val_i16 + val_u8 AS val_i16_u8,
    val_i16 + val_u8 + 1_U AS val_i16_u8_plus_1,
    val_u16 + val_i16 AS val_i16_u16,
    val_u16 + val_i16 + 1_U AS val_i16_u16_plus_1,
    val_i16 + val_u32 AS val_i16_u32,
    val_i16 + val_u32 + 1_U AS val_i16_u32_plus_1,
    val_i16 + val_u64 AS val_i16_u64,
    val_i16 + val_u64 + 1_U AS val_i16_u64_plus_1,
    # float
    val_i16 + val_f32 AS val_i16_f32,
    val_i16 + val_f32 + 1_F AS val_i16_f32_plus_1,
    val_i16 + val_f64 AS val_i16_f64,
    val_i16 + val_f64 + 1_D AS val_i16_f64_plus_1
FROM window INTO SINK
----
-171 -170 -258 -257 32638 32639 -130 -129 -87 -86 127 128 -129 -128 -129 -128 0 0 0 0

# Equal i32 value with all other data types
SELECT
    # signed
    val_i32 + val_i8 AS val_i32_i8,
    val_i32 + val_i8 + 1 AS val_i32_i8_plus_1,
    val_i32 + val_i16 AS val_i32_i16,
    val_i32 + val_i16 + 1 AS val_i32_i16_plus_1,
    val_i32 + val_i32 AS val_i32_i32,
    val_i32 + val_i32 + 1 AS val_i32_i32_plus_1,
    val_i32 + val_i64 AS val_i32_i64,
    val_i32 + val_i64 + 1 AS val_i32_i64_plus_1,
    # unsigned
    val_i32 + val_u8 AS val_i32_u8,
    val_i32 + val_u8 + 1_U AS val_i32_u8_plus_1,
    val_i32 + val_u16 AS val_i32_u16,
    val_i32 + val_u16 + 1_U AS val_i32_u16_plus_1,
    val_i32 + val_u32 AS val_i32_u32,
    val_i32 + val_u32 + 1_U AS val_i32_u32_plus_1,
    val_i32 + val_u64 AS val_i32_u64,
    val_i32 + val_u64 + 1_U AS val_i32_u64_plus_1,
    # float
    val_i32 + val_f32 AS val_i32_f32,
    val_i32 + val_f32 + 1_F AS val_i32_f32_plus_1,
    val_i32 + val_f64 AS val_i32_f64,
    val_i32 + val_f64 + 1_D AS val_i32_f64_plus_1
FROM window INTO SINK
----
-32811 -32810 -32898 -32897 -65538 -65537 2147450878 2147450879 -32727 -32726 -32513 -32512 32767 32768 -32769 -32768 -956312576 -956313088 0 0

# Equal i64 value with all other data types
SELECT
    # signed
    val_i64 + val_i8 AS val_i64_i8,
    val_i64 + val_i8 + 1 AS val_i64_i8_plus_1,
    val_i64 + val_i16 AS val_i64_i16,
    val_i64 + val_i16 + 1 AS val_i64_i16_plus_1,
    val_i64 + val_i32 AS val_i64_i32,
    val_i64 + val_i32 + 1 AS val_i64_i32_plus_1,
    val_i64 + val_i64 AS val_i64_i64,
    val_i64 + val_i64 + 1 AS val_i64_i64_plus_1,
    # unsigned
    val_i64 + val_u8 AS val_i64_u8,
    val_i64 + val_u8 + 1_U AS val_i64_u8_plus_1,
    val_i64 + val_u16 AS val_i64_u16,
    val_i64 + val_u16 + 1_U AS val_i64_u16_plus_1,
    val_i64 + val_u32 AS val_i64_u32,
    val_i64 + val_u32 + 1_U AS val_i64_u32_plus_1,
    val_i64 + val_u64 AS val_i64_u64,
    val_i64 + val_u64 + 1_U AS val_i64_u64_plus_1,
    # float
    val_i64 + val_f32 AS val_i64_f32,
    val_i64 + val_f32 + 1_F AS val_i64_f32_plus_1,
    val_i64 + val_f64 AS val_i64_f64,
    val_i64 + val_f64 + 1_D AS val_i64_f64_plus_1
FROM window INTO SINK
----
-2147483691 -2147483690 -2147483778 -2147483777 -2147516418 -2147516417 -4294967298 -4294967297 -2147483607 -2147483606 -2147483393 -2147483392 -2147418113 -2147418112 2147483647 2147483648 3472883712 3472883712 -4476578029698547712 -4476578029702742016
