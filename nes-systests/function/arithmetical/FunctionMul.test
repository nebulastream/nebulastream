# name: function/arithmetical/FunctionMul.test
# description: Simple function mul tests
# groups: [Function, FunctionMul]

Source window INT8 val_i8 INT16 val_i16 INT32 val_i32 INT64 val_i64 UINT8 val_u8 UINT16 val_u16 UINT32 val_u32 UINT64 val_u64 FLOAT32 val_f32 FLOAT64 val_f64
-42,-129,-32769,-2147483649,42,256,65536,4294967296,23,23

# Todo #442: the below system level tests currently perform downcasts.
# Since mul is commutative, e.g., 'val_i8 * val_f32' equals 'val_f32 * val_i8', so we check only one direction.

# Check if different numeric types support the equals operation
SELECT
    val_i8 * 42 AS val_i8,
    val_i16 * 42 AS val_i16,
    val_i32 * 42 AS val_i32,
    val_i64 * 42 AS val_i64,

    val_u8 * 42_U AS val_u8,
    val_u16 * 42_U AS val_u16,
    val_u32 * 42_U AS val_u32,
    val_u64 * 42_U AS val_u64,

    val_f32 * 42_U AS val_f32,
    val_f64 * 42_U AS val_f64
FROM window INTO SINK
----
-1764,-5418,-1376298,-90194313258,1764,10752,2752512,180388626432,966.000000,966.000000

# Mul i8 value with all other data types
SELECT
    # signed
    val_i8 * val_i8 AS val_i8_i8,
    val_i8 * (val_i8 + 1) AS val_i8_i8_plus_1,
    val_i8 * val_i16 AS val_i8_i16,
    val_i8 * (val_i16 + 1) AS val_i8_i16_plus_1,
    val_i8 * val_i32 AS val_i8_i32,
    val_i8 * (val_i32 + 1) AS val_i8_i32_plus_1,
    val_i8 * val_i64 AS val_i8_i64,
    val_i8 * (val_i64 + 1) AS val_i8_i64_plus_1,
    # unsigned
    val_i8 * val_u8 AS val_i8_u8,
    val_i8 * (val_u8 + 1_U) AS val_i8_u8_plus_1,
    val_i8 * val_u16 AS val_i8_u16,
    val_i8 * (val_u16 + 1_U) AS val_i8_u16_plus_1,
    val_i8 * val_u32 AS val_i8_u32,
    val_i8 * (val_u32 + 1_U) AS val_i8_u32_plus_1,
    val_i8 * val_u64 AS val_i8_u64,
    val_i8 * (val_u64 + 1_U) AS val_i8_u64_plus_1,
    # float
    val_i8 * val_f32 AS val_i8_f32_,
    val_i8 * (val_f32 + 1_F) AS val_i8_f32_plus_1,
    val_i8 * val_f64 AS val_i8_f64,
    val_i8 * (val_f64 + 1_D) AS val_i8_f64_plus_1
FROM window INTO SINK
----
-28,1722,5418,5376,1376298,1376256,90194313258,90194313216,-1764,-1806,-10752,-10794,4292214784,4292214742,18446743893320925184,18446743893320925142,-966.000000,-1008.000000,-966.000000,-1008.000000

# Mul i16 value with all other data types
SELECT
    # signed
    val_i16 * val_i8 AS val_i16_i8,
    val_i16 * (val_i8 + 1) AS val_i16_i8_plus_1,
    val_i16 * val_i16 AS val_i16_i16,
    val_i16 * (val_i16 + 1) AS val_i16_i16_plus_1,
    val_i16 * val_i32 AS val_i16_i32,
    val_i16 * (val_i32 + 1) AS val_i16_i32_plus_1,
    val_i16 * val_i64 AS val_i16_i64,
    val_i16 * (val_i64 + 1) AS val_i16_i64_plus_1,
    # unsigned
    val_i16 * val_u8 AS val_i16_u8,
    val_i16 * (val_u8 + 1_U) AS val_i16_u8_plus_1,
    val_i16 * val_u16 AS val_i16_u16,
    val_i16 * (val_u16 + 1_U) AS val_i16_u16_plus_1,
    val_i16 * val_u32 AS val_i16_u32,
    val_i16 * (val_u32 + 1_U) AS val_i16_u32_plus_1,
    val_i16 * val_u64 AS val_i16_u64,
    val_i16 * (val_u64 + 1_U) AS val_i16_u64_plus_1,
    # float
    val_i16 * val_f32 AS val_i16_f32_,
    val_i16 * (val_f32 + 1_F) AS val_i16_f32_plus_1,
    val_i16 * val_f64 AS val_i16_f64,
    val_i16 * (val_f64 + 1_D) AS val_i16_f64_plus_1
FROM window INTO SINK
----
5418,5289,16641,16512,4227201,4227072,277025390721,277025390592,-5418,-5547,-33024,-33153,4286513152,4286513023,18446743519658770432,18446743519658770303,-2967.000000,-3096.000000,-2967.000000,-3096.000000

# Mul i32 value with all other data types
SELECT
    # signed
    val_i32 * val_i8 AS val_i32_i8,
    val_i32 * (val_i8 + 1) AS val_i32_i8_plus_1,
    val_i32 * val_i16 AS val_i32_i16,
    val_i32 * (val_i16 + 1) AS val_i32_i16_plus_1,
    val_i32 * val_i32 AS val_i32_i32,
    val_i32 * (val_i32 + 1) AS val_i32_i32_plus_1,
    val_i32 * val_i64 AS val_i32_i64,
    val_i32 * (val_i64 + 1) AS val_i32_i64_plus_1,
    # unsigned
    val_i32 * val_u8 AS val_i32_u8,
    val_i32 * (val_u8 + 1_U) AS val_i32_u8_plus_1,
    val_i32 * val_u16 AS val_i32_u16,
    val_i32 * (val_u16 + 1_U) AS val_i32_u16_plus_1,
    val_i32 * val_u32 AS val_i32_u32,
    val_i32 * (val_u32 + 1_U) AS val_i32_u32_plus_1,
    val_i32 * val_u64 AS val_i32_u64,
    val_i32 * (val_u64 + 1_U) AS val_i32_u64_plus_1,
    # float
    val_i32 * val_f32 AS val_i32_f32_,
    val_i32 * (val_f32 + 1_F) AS val_i32_f32_plus_1,
    val_i32 * val_f64 AS val_i32_f64,
    val_i32 * (val_f64 + 1_D) AS val_i32_f64_plus_1
FROM window INTO SINK
----
1376298,1343529,4227201,4194432,1073807361,1073774592,70370891694081,70370891661312,-1376298,-1409067,-8388864,-8421633,2147418112,2147385343,18446603331926228992,18446603331926196223,-753687.000000,-786456.000000,-753687.000000,-786456.000000

# Mul i64 value with all other data types
SELECT
    # signed
    val_i64 * val_i8 AS val_i64_i8,
    val_i64 * (val_i8 + 1) AS val_i64_i8_plus_1,
    val_i64 * val_i16 AS val_i64_i16,
    val_i64 * (val_i16 + 1) AS val_i64_i16_plus_1,
    val_i64 * val_i32 AS val_i64_i32,
    val_i64 * (val_i32 + 1) AS val_i64_i32_plus_1,
    val_i64 * val_i64 AS val_i64_i64,
    val_i64 * (val_i64 + 1) AS val_i64_i64_plus_1,
    # unsigned
    val_i64 * val_u8 AS val_i64_u8,
    val_i64 * (val_u8 + 1_U) AS val_i64_u8_plus_1,
    val_i64 * val_u16 AS val_i64_u16,
    val_i64 * (val_u16 + 1_U) AS val_i64_u16_plus_1,
    val_i64 * val_u32 AS val_i64_u32,
    val_i64 * (val_u32 + 1_U) AS val_i64_u32_plus_1,
    val_i64 * val_u64 AS val_i64_u64,
    val_i64 * (val_u64 + 1_U) AS val_i64_u64_plus_1,
    # float
    val_i64 * val_f32 AS val_i64_f32_,
    val_i64 * (val_f32 + 1_F) AS val_i64_f32_plus_1,
    val_i64 * val_f64 AS val_i64_f64,
    val_i64 * (val_f64 + 1_D) AS val_i64_f64_plus_1
FROM window INTO SINK
----
90194313258,88046829609,277025390721,274877907072,70370891694081,70368744210432,4611686022722355201,4611686020574871552,-90194313258,-92341796907,-549755814144,-551903297793,-140737488420864,-140739635904513,9223372032559808512,9223372030412324863,-49392123904.000000,-51539607552.000000,-49392123927.000000,-51539607576.000000
