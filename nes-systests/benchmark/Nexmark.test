# name: milestone/Nexmark.test
# description: Nexmark benchmark taken from https://github.com/nexmark/nexmark/tree/master/nexmark-flink/src/main/resources/queries
# groups: [milestone, benchmark, large]

# Source definitions
SourceCSV bid UINT64 timestamp INT32 auctionId INT32 bidder INT64 datetime FLOAT64 price TESTDATA/large/nexmark/bid.csv
SourceCSV auction UINT64 timestamp INT32 id INT32 initialbid INT32 reserve INT64 expires INT32 seller INT32 category TESTDATA/large/nexmark/auction_modified.csv

# Query 0
SELECT * FROM bid INTO CHECKSUM;
----
18106394 33146443404

# Query 1
SELECT price * 89 / 100 AS price FROM bid INTO CHECKSUM;
----
18106394 5431093917

# Query 2
SELECT * FROM bid WHERE auctionId % 123 = 0 INTO CHECKSUM;
----
146516 268224796

# Query 5
SELECT start, end, start, end, auctionId, num, start, end, max_tmp
FROM (SELECT auctionId, COUNT(auctionId) AS num, start, end
      FROM bid
      GROUP BY auctionId
      WINDOW SLIDING(timestamp, SIZE 10 SEC, ADVANCE BY 2 SEC))
INNER JOIN (SELECT auctionId, MAX(num_ids) AS max_tmp, start, end
              FROM
                    (SELECT auctionId, COUNT(auctionId) AS num_ids, start
                     FROM bid
                     GROUP BY auctionId
                     WINDOW SLIDING(timestamp, SIZE 10 SEC, ADVANCE BY 2 SEC))
              WINDOW TUMBLING(start, SIZE 2 SEC))
ON num >= max_tmp
WINDOW TUMBLING(start, SIZE 2 SEC)
INTO CHECKSUM;
----
243784, 863137833


# Query 8 Variant (We are not using the actual Q8 but a variant, as we have swapped the Person stream with the Bid stream)
SELECT start, end, timestamp, auctionId, bidder, datetime, price, timestamp, id, initialbid, reserve, expires, seller, category
    FROM (SELECT * FROM bid)
INNER JOIN
    (SELECT * FROM auction)
ON auctionId = id WINDOW TUMBLING (timestamp, size 10 sec) INTO CHECKSUM;
----
9149189 44872388544
