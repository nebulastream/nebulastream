# name: windows/SlidingWindowsWithGap.test
# description: Tests windowed operators with sliding windows that have a gap, i.e., size >= slide
# groups: [WindowOperators, Join, Aggregation]

# Source definitions
Source stream UINT64 id UINT64 value UINT64 timestamp FILE
TESTDATA/small/stream.csv
Source stream2 UINT64 id2 UINT64 value2 UINT64 timestamp FILE
TESTDATA/small/stream2.csv

SINK sinkStreamStream2 UINT64 streamstream2$start UINT64 streamstream2$end UINT64 stream$id UINT64 stream$value UINT64 stream$timestamp UINT64 stream2$id2 UINT64 stream2$value2 UINT64 stream2$timestamp
SINK sinkStreamAgg UINT64 stream$start UINT64 stream$end UINT64 stream$value UINT64 stream$id_count UINT64 stream$id_sum UINT64 stream$id_min


# Query 1 - Sliding Window Aggregation with a gap
SELECT start, end, value, COUNT(id) AS id_count, SUM(id) AS id_sum, MIN(id) AS id_min
FROM stream
GROUP BY (value)
WINDOW SLIDING(timestamp, size 3 sec, advance by 4 sec)
INTO sinkStreamAgg
----
0,3000,1,3,17,1
0,3000,2,3,28,1
4000,7000,4,1,1,1
4000,7000,5,1,1,1
4000,7000,6,1,1,1
8000,11000,8,1,1,1
8000,11000,9,1,1,1
8000,11000,10,1,1,1
12000,15000,12,1,1,1
12000,15000,13,1,1,1
12000,15000,14,1,1,1
16000,19000,16,1,1,1
16000,19000,17,1,1,1
16000,19000,18,1,1,1
20000,23000,20,1,1,1
20000,23000,21,1,1,1


# Query 2 - Sliding Window Join with a gap
SELECT *
FROM (SELECT * FROM stream)
INNER JOIN (SELECT * FROM stream2)
    ON (id = id2)
WINDOW SLIDING (timestamp, size 1 sec, advance by 3 sec)
INTO sinkStreamStream2;
----
3000 4000 1 3 3000 1 3 3009
3000 4000 1 3 3000 1 3 3201
3000 4000 11 3 3001 11 3 3001
3000 4000 1 3 3003 1 3 3009
3000 4000 1 3 3003 1 3 3201
3000 4000 1 3 3200 1 3 3009
3000 4000 1 3 3200 1 3 3201
6000 7000 1 6 6000 1 6 6000
9000 10000 1 9 9000 1 9 9000
12000 13000 1 12 12000 1 12 12000
15000 16000 1 15 15000 1 15 15000
18000 19000 1 18 18000 1 18 18000
21000 22000 1 21 21000 1 21 21000
