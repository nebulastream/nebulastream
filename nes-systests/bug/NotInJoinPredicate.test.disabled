# name: bug/NotInJoinPredicate.test
# description: Moved from 'differential/JoinEquivalence.test'. Currently we cannot handle NOT in join predicates.
# groups: [Differential, Join]

Source stream1 UINT64 key1_s1 UINT64 key2_s1 UINT64 ts GENERATOR seed 1, max_runtime_ms 1000, stop_generator_when_sequence_finishes ALL
key1_s1 SEQUENCE UINT64 1 5 1
key2_s1 SEQUENCE UINT64 10 14 1
ts SEQUENCE UINT64 1000 1800 200

Source stream2 UINT64 key1_s2 UINT64 key2_s2 UINT64 id2 UINT64 value2 UINT64 ts UINT64 timestamp GENERATOR seed 2, max_runtime_ms 1000, stop_generator_when_sequence_finishes ALL
key1_s2 SEQUENCE UINT64 1 5 1
key2_s2 SEQUENCE UINT64 10 14 1
id2 SEQUENCE UINT64 1 5 1
value2 SEQUENCE UINT64 100 140 10
ts SEQUENCE UINT64 1000 1800 200
timestamp SEQUENCE UINT64 1000 1800 200

SINK sinkStream1Stream2 UINT64 stream1stream2$start UINT64 stream1stream2$end UINT64 stream1$key1_s1 UINT64 stream1$key2_s1 UINT64 stream1$ts UINT64 stream2$key1_s2 UINT64 stream2$key2_s2 UINT64 stream2$id2 UINT64 stream2$value2 UINT64 stream2$ts UINT64 stream2$timestamp

SELECT * FROM (SELECT * FROM stream1)
INNER JOIN (SELECT * FROM stream2)
  ON key1_s1 == key1_s2 AND key2_s1 == key2_s2
  WINDOW TUMBLING (ts, size 1 sec)
INTO sinkStream1Stream2;
====
SELECT * FROM (SELECT * FROM stream1)
INNER JOIN (SELECT * FROM stream2)
  ON NOT (key1_s1 != key1_s2 OR key2_s1 != key2_s2)
  WINDOW TUMBLING (ts, size 1 sec)
INTO sinkStream1Stream2;
