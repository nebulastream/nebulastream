/*
    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
    You may obtain a copy of the License at

        https://www.apache.org/licenses/LICENSE-2.0

    Unless required by applicable law or agreed to in writing, software
    distributed under the License is distributed on an "AS IS" BASIS,
    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
    See the License for the specific language governing permissions and
    limitations under the License.
*/

syntax = "proto3";
import "SerializableExpression.proto";
import "SerializableDecomposedQueryPlan.proto";
import "google/protobuf/empty.proto";

service WorkerRPCService {
  rpc RegisterQuery (RegisterQueryRequest) returns (RegisterQueryReply) {}
  rpc UnregisterQuery (UnregisterQueryRequest) returns (google.protobuf.Empty) {}

  rpc StartQuery (StartQueryRequest) returns (google.protobuf.Empty) {}
  rpc StopQuery (StopQueryRequest) returns (google.protobuf.Empty) {}

  rpc QueryStatus (QueryStatusRequest) returns (QueryStatusReply) {}

}

message RegisterQueryRequest {
  NES.SerializableDecomposedQueryPlan decomposedQueryPlan = 1;
}

message RegisterQueryReply {
  uint64 queryId = 2;
}

message UnregisterQueryRequest {
  uint64 queryId = 2;
}

message QueryStatusRequest {
  uint64 queryId = 2;
}

message StartQueryRequest {
  uint64 queryId = 2;
}

enum QueryTerminationType {Graceful = 0; HardStop = 1; Failure = 2; Invalid = 3;};
message StopQueryRequest {
  uint64 queryId = 2;
  QueryTerminationType terminationType = 3;
}

enum QueryStatus {
  Stopped = 0;
  Running = 1;
  Failed = 2;
  Unregistered = 3;
}

message QueryStatusReply {
  QueryStatus status = 1;
  repeated string failures = 2;
  uint64 numberOfRestarts = 3;
}